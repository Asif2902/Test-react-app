{"version":3,"file":"static/js/9170.cf4a54c9.chunk.js","mappings":"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","sources":["../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/acala.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/formatters/formatter.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/formatters/transaction.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/formatters/block.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/formatters/log.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/formatters/transactionReceipt.ts","../node_modules/@web3-onboard/common/node_modules/viem/op-stack/formatters.ts","../node_modules/@web3-onboard/common/node_modules/viem/errors/address.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/lru.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/address/getAddress.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/hash/keccak256.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/address/isAddress.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/data/concat.ts","../node_modules/@web3-onboard/common/node_modules/viem/errors/cursor.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/cursor.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/encoding/toRlp.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/unit/formatGwei.ts","../node_modules/@web3-onboard/common/node_modules/viem/errors/transaction.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/blob/blobsToCommitments.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/blob/blobsToProofs.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/hash/sha256.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/blob/commitmentToVersionedHash.ts","../node_modules/@web3-onboard/common/node_modules/viem/constants/blob.ts","../node_modules/@web3-onboard/common/node_modules/viem/constants/kzg.ts","../node_modules/@web3-onboard/common/node_modules/viem/errors/blob.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/blob/toBlobSidecars.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/blob/toBlobs.ts","../node_modules/@web3-onboard/common/node_modules/viem/errors/chain.ts","../node_modules/@web3-onboard/common/node_modules/viem/errors/node.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/data/slice.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/transaction/assertTransaction.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/transaction/serializeAccessList.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/transaction/serializeTransaction.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/transaction/getTransactionType.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/blob/commitmentsToVersionedHashes.ts","../node_modules/@web3-onboard/common/node_modules/viem/op-stack/serializers.ts","../node_modules/@web3-onboard/common/node_modules/viem/op-stack/chainConfig.ts","../node_modules/@web3-onboard/common/node_modules/viem/op-stack/contracts.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/ancient8.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/ancient8Sepolia.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/anvil.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/apexTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/arbitrum.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/arbitrumGoerli.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/arbitrumNova.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/astar.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/astarZkEVM.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/astarZkyoto.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/arbitrumSepolia.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/areonNetwork.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/areonNetworkTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/aurora.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/auroraTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/auroria.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/avalanche.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/avalancheFuji.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/bahamut.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/base.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/baseGoerli.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/baseSepolia.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/beam.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/beamTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/bearNetworkChainMainnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/bearNetworkChainTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/berachainTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/bevmMainnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/bitTorrent.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/bitTorrentTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/blast.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/blastSepolia.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/bob.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/boba.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/bronos.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/bronosTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/bsc.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/bscTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/bscGreenfield.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/btr.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/btrTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/bxn.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/bxnTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/canto.ts","../node_modules/@web3-onboard/common/node_modules/viem/celo/fees.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/formatters/transactionRequest.ts","../node_modules/@web3-onboard/common/node_modules/viem/celo/utils.ts","../node_modules/@web3-onboard/common/node_modules/viem/celo/serializers.ts","../node_modules/@web3-onboard/common/node_modules/viem/celo/chainConfig.ts","../node_modules/@web3-onboard/common/node_modules/viem/celo/formatters.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/celo.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/celoAlfajores.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/chiliz.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/classic.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/confluxESpace.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/confluxESpaceTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/coreDao.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/cronos.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/cronosTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/crossbell.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/cyber.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/cyberTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/darwinia.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/defichainEvm.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/defichainEvmTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/degen.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/dfk.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/dodochainTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/dogechain.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/dreyerxMainnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/edgeless.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/edgelessTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/edgeware.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/edgewareTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/eon.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/eos.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/eosTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/etherlinkTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/evmos.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/evmosTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/ekta.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/ektaTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/fantom.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/fantomSonicTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/fantomTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/fibo.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/filecoin.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/filecoinCalibration.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/filecoinHyperspace.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/flare.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/flareTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/flowPreviewnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/flowMainnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/flowTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/foundry.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/fraxtal.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/fraxtalTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/funkiSepolia.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/fuse.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/fuseSparknet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/iotex.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/iotexTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/jbc.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/jbcTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/karura.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/gobi.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/goerli.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/gnosis.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/gnosisChiado.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/hardhat.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/harmonyOne.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/haqqMainnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/haqqTestedge2.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/hedera.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/hederaTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/hederaPreviewnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/holesky.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/immutableZkEvm.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/immutableZkEvmTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/inEVM.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/kakarotSepolia.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/kava.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/kavaTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/kcc.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/klaytn.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/klaytnBaobab.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/kroma.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/kromaSepolia.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/l3x.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/l3xTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/lightlinkPegasus.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/lightlinkPhoenix.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/linea.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/lineaGoerli.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/lineaSepolia.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/lineaTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/zksync/constants/number.ts","../node_modules/@web3-onboard/common/node_modules/viem/zksync/formatters.ts","../node_modules/@web3-onboard/common/node_modules/viem/zksync/errors/transaction.ts","../node_modules/@web3-onboard/common/node_modules/viem/zksync/utils/isEip712Transaction.ts","../node_modules/@web3-onboard/common/node_modules/viem/zksync/utils/assertEip712Transaction.ts","../node_modules/@web3-onboard/common/node_modules/viem/zksync/serializers.ts","../node_modules/@web3-onboard/common/node_modules/viem/zksync/errors/bytecode.ts","../node_modules/@web3-onboard/common/node_modules/viem/zksync/chainConfig.ts","../node_modules/@web3-onboard/common/node_modules/viem/zksync/utils/getEip712Domain.ts","../node_modules/@web3-onboard/common/node_modules/viem/zksync/utils/hashBytecode.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/lisk.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/liskSepolia.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/localhost.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/lukso.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/luksoTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/mainnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/mandala.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/manta.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/mantaSepoliaTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/mantaTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/mantle.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/mantleSepoliaTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/mantleTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/merlin.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/metachain.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/metachainIstanbul.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/metalL2.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/meter.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/meterTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/metis.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/metisGoerli.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/mev.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/mevTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/mintSepoliaTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/mode.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/modeTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/moonbaseAlpha.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/moonbeam.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/moonbeamDev.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/moonriver.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/morphSepolia.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/nautilus.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/neonDevnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/neonMainnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/nexi.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/nexilix.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/oasys.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/oasisTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/okc.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/optimism.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/optimismGoerli.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/optimismSepolia.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/opBNB.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/opBNBTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/oortmainnetDev.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/otimDevnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/palm.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/palmTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/playfiAlbireo.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/pgn.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/pgnTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/phoenix.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/plinga.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/plumeTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/polygon.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/polygonAmoy.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/polygonMumbai.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/polygonZkEvm.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/polygonZkEvmCardona.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/polygonZkEvmTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/pulsechain.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/pulsechainV4.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/qMainnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/qTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/reyaNetwork.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/rollux.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/rolluxTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/ronin.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/rootstock.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/rootstockTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/rss3.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/rss3Sepolia.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/saigon.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/sapphire.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/sapphireTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/scroll.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/scrollSepolia.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/scrollTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/seiDevnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/sepolia.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/shimmer.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/shimmerTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/skale/brawl.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/skale/calypso.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/skale/calypsoTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/skale/cryptoBlades.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/skale/cryptoColosseum.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/skale/europa.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/skale/europaTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/skale/exorde.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/skale/humanProtocol.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/skale/nebula.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/skale/nebulaTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/skale/razor.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/skale/titan.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/skale/titanTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/songbird.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/songbirdTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/spicy.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/shardeumSphinx.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/shibarium.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/stratis.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/syscoin.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/syscoinTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/taraxa.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/taikoHekla.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/taikoJolnir.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/taikoKatla.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/taikoTestnetSepolia.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/taraxaTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/telcoinTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/telos.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/telosTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/tenet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/thaiChain.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/thunderTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/vechain.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/wanchain.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/wanchainTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/wemix.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/wemixTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/xLayerTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/xLayer.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/xdc.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/xdcTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/yooldoVerse.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/yooldoVerseTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/zetachain.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/zetachainAthensTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/zhejiang.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/zilliqa.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/zilliqaTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/zkFair.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/zkFairTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/zkSync.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/zkSyncInMemoryNode.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/zkSyncLocalNode.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/zkSyncSepoliaTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/zkSyncTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/zora.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/zoraSepolia.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/zoraTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/chain/defineChain.ts"],"sourcesContent":["import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const acala = /*#__PURE__*/ defineChain({\n  id: 787,\n  name: 'Acala',\n  network: 'acala',\n  nativeCurrency: {\n    name: 'Acala',\n    symbol: 'ACA',\n    decimals: 18,\n  },\n  rpcUrls: {\n    public: {\n      http: ['https://eth-rpc-acala.aca-api.network'],\n      webSocket: ['wss://eth-rpc-acala.aca-api.network'],\n    },\n    default: {\n      http: ['https://eth-rpc-acala.aca-api.network'],\n      webSocket: ['wss://eth-rpc-acala.aca-api.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Acala Blockscout',\n      url: 'https://blockscout.acala.network',\n      apiUrl: 'https://blockscout.acala.network/api',\n    },\n  },\n  testnet: false,\n})\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { Assign, Prettify } from '../../types/utils.js'\n\nexport type DefineFormatterErrorType = ErrorType\n\nexport function defineFormatter<TType extends string, TParameters, TReturnType>(\n  type: TType,\n  format: (_: TParameters) => TReturnType,\n) {\n  return <\n    TOverrideParameters,\n    TOverrideReturnType,\n    TExclude extends (keyof TParameters | keyof TOverrideParameters)[] = [],\n  >({\n    exclude,\n    format: overrides,\n  }: {\n    exclude?: TExclude | undefined\n    format: (_: TOverrideParameters) => TOverrideReturnType\n  }) => {\n    return {\n      exclude,\n      format: (args: Assign<TParameters, TOverrideParameters>) => {\n        const formatted = format(args as any)\n        if (exclude) {\n          for (const key of exclude) {\n            delete (formatted as any)[key]\n          }\n        }\n        return {\n          ...formatted,\n          ...overrides(args),\n        } as Prettify<Assign<TReturnType, TOverrideReturnType>> & {\n          [_key in TExclude[number]]: never\n        }\n      },\n      type,\n    }\n  }\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ExtractChainFormatterExclude,\n  ExtractChainFormatterReturnType,\n} from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { RpcTransaction } from '../../types/rpc.js'\nimport type { Transaction, TransactionType } from '../../types/transaction.js'\nimport type { ExactPartial, UnionLooseOmit } from '../../types/utils.js'\nimport { hexToNumber } from '../encoding/fromHex.js'\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\n\ntype TransactionPendingDependencies =\n  | 'blockHash'\n  | 'blockNumber'\n  | 'transactionIndex'\n\nexport type FormattedTransaction<\n  TChain extends Chain | undefined = undefined,\n  TBlockTag extends BlockTag = BlockTag,\n  _FormatterReturnType = ExtractChainFormatterReturnType<\n    TChain,\n    'transaction',\n    Transaction\n  >,\n  _ExcludedPendingDependencies extends string = TransactionPendingDependencies &\n    ExtractChainFormatterExclude<TChain, 'transaction'>,\n> = UnionLooseOmit<_FormatterReturnType, TransactionPendingDependencies> & {\n  [_K in _ExcludedPendingDependencies]: never\n} & Pick<\n    Transaction<bigint, number, TBlockTag extends 'pending' ? true : false>,\n    TransactionPendingDependencies\n  >\n\nexport const transactionType = {\n  '0x0': 'legacy',\n  '0x1': 'eip2930',\n  '0x2': 'eip1559',\n  '0x3': 'eip4844',\n} as const satisfies Record<Hex, TransactionType>\n\nexport type FormatTransactionErrorType = ErrorType\n\nexport function formatTransaction(transaction: ExactPartial<RpcTransaction>) {\n  const transaction_ = {\n    ...transaction,\n    blockHash: transaction.blockHash ? transaction.blockHash : null,\n    blockNumber: transaction.blockNumber\n      ? BigInt(transaction.blockNumber)\n      : null,\n    chainId: transaction.chainId ? hexToNumber(transaction.chainId) : undefined,\n    gas: transaction.gas ? BigInt(transaction.gas) : undefined,\n    gasPrice: transaction.gasPrice ? BigInt(transaction.gasPrice) : undefined,\n    maxFeePerBlobGas: transaction.maxFeePerBlobGas\n      ? BigInt(transaction.maxFeePerBlobGas)\n      : undefined,\n    maxFeePerGas: transaction.maxFeePerGas\n      ? BigInt(transaction.maxFeePerGas)\n      : undefined,\n    maxPriorityFeePerGas: transaction.maxPriorityFeePerGas\n      ? BigInt(transaction.maxPriorityFeePerGas)\n      : undefined,\n    nonce: transaction.nonce ? hexToNumber(transaction.nonce) : undefined,\n    to: transaction.to ? transaction.to : null,\n    transactionIndex: transaction.transactionIndex\n      ? Number(transaction.transactionIndex)\n      : null,\n    type: transaction.type\n      ? (transactionType as any)[transaction.type]\n      : undefined,\n    typeHex: transaction.type ? transaction.type : undefined,\n    value: transaction.value ? BigInt(transaction.value) : undefined,\n    v: transaction.v ? BigInt(transaction.v) : undefined,\n  } as Transaction\n\n  transaction_.yParity = (() => {\n    // If `yParity` is provided, we will use it.\n    if (transaction.yParity) return Number(transaction.yParity)\n\n    // If no `yParity` provided, try derive from `v`.\n    if (typeof transaction_.v === 'bigint') {\n      if (transaction_.v === 0n || transaction_.v === 27n) return 0\n      if (transaction_.v === 1n || transaction_.v === 28n) return 1\n      if (transaction_.v >= 35n) return transaction_.v % 2n === 0n ? 1 : 0\n    }\n\n    return undefined\n  })()\n\n  if (transaction_.type === 'legacy') {\n    delete transaction_.accessList\n    delete transaction_.maxFeePerBlobGas\n    delete transaction_.maxFeePerGas\n    delete transaction_.maxPriorityFeePerGas\n    delete transaction_.yParity\n  }\n  if (transaction_.type === 'eip2930') {\n    delete transaction_.maxFeePerBlobGas\n    delete transaction_.maxFeePerGas\n    delete transaction_.maxPriorityFeePerGas\n  }\n  if (transaction_.type === 'eip1559') {\n    delete transaction_.maxFeePerBlobGas\n  }\n  return transaction_\n}\n\nexport type DefineTransactionErrorType = DefineFormatterErrorType | ErrorType\n\nexport const defineTransaction = /*#__PURE__*/ defineFormatter(\n  'transaction',\n  formatTransaction,\n)\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { Block, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ExtractChainFormatterExclude,\n  ExtractChainFormatterReturnType,\n} from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { RpcBlock } from '../../types/rpc.js'\nimport type { ExactPartial, Prettify } from '../../types/utils.js'\n\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\nimport { type FormattedTransaction, formatTransaction } from './transaction.js'\n\ntype BlockPendingDependencies = 'hash' | 'logsBloom' | 'nonce' | 'number'\n\nexport type FormattedBlock<\n  TChain extends Chain | undefined = undefined,\n  TIncludeTransactions extends boolean = boolean,\n  TBlockTag extends BlockTag = BlockTag,\n  _FormatterReturnType = ExtractChainFormatterReturnType<\n    TChain,\n    'block',\n    Block<bigint, TIncludeTransactions>\n  >,\n  _ExcludedPendingDependencies extends string = BlockPendingDependencies &\n    ExtractChainFormatterExclude<TChain, 'block'>,\n  _Formatted = Omit<_FormatterReturnType, BlockPendingDependencies> & {\n    [_key in _ExcludedPendingDependencies]: never\n  } & Pick<\n      Block<bigint, TIncludeTransactions, TBlockTag>,\n      BlockPendingDependencies\n    >,\n  _Transactions = TIncludeTransactions extends true\n    ? Prettify<FormattedTransaction<TChain, TBlockTag>>[]\n    : Hash[],\n> = Omit<_Formatted, 'transactions'> & {\n  transactions: _Transactions\n}\n\nexport type FormatBlockErrorType = ErrorType\n\nexport function formatBlock(block: ExactPartial<RpcBlock>) {\n  const transactions = block.transactions?.map((transaction) => {\n    if (typeof transaction === 'string') return transaction\n    return formatTransaction(transaction)\n  })\n  return {\n    ...block,\n    baseFeePerGas: block.baseFeePerGas ? BigInt(block.baseFeePerGas) : null,\n    blobGasUsed: block.blobGasUsed ? BigInt(block.blobGasUsed) : undefined,\n    difficulty: block.difficulty ? BigInt(block.difficulty) : undefined,\n    excessBlobGas: block.excessBlobGas\n      ? BigInt(block.excessBlobGas)\n      : undefined,\n    gasLimit: block.gasLimit ? BigInt(block.gasLimit) : undefined,\n    gasUsed: block.gasUsed ? BigInt(block.gasUsed) : undefined,\n    hash: block.hash ? block.hash : null,\n    logsBloom: block.logsBloom ? block.logsBloom : null,\n    nonce: block.nonce ? block.nonce : null,\n    number: block.number ? BigInt(block.number) : null,\n    size: block.size ? BigInt(block.size) : undefined,\n    timestamp: block.timestamp ? BigInt(block.timestamp) : undefined,\n    transactions,\n    totalDifficulty: block.totalDifficulty\n      ? BigInt(block.totalDifficulty)\n      : null,\n  } as Block\n}\n\nexport type DefineBlockErrorType = DefineFormatterErrorType | ErrorType\n\nexport const defineBlock = /*#__PURE__*/ defineFormatter('block', formatBlock)\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { Log } from '../../types/log.js'\nimport type { RpcLog } from '../../types/rpc.js'\nimport type { ExactPartial } from '../../types/utils.js'\n\nexport type FormatLogErrorType = ErrorType\n\nexport function formatLog(\n  log: ExactPartial<RpcLog>,\n  {\n    args,\n    eventName,\n  }: { args?: unknown | undefined; eventName?: string | undefined } = {},\n) {\n  return {\n    ...log,\n    blockHash: log.blockHash ? log.blockHash : null,\n    blockNumber: log.blockNumber ? BigInt(log.blockNumber) : null,\n    logIndex: log.logIndex ? Number(log.logIndex) : null,\n    transactionHash: log.transactionHash ? log.transactionHash : null,\n    transactionIndex: log.transactionIndex\n      ? Number(log.transactionIndex)\n      : null,\n    ...(eventName ? { args, eventName } : {}),\n  } as Log\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type {\n  Chain,\n  ExtractChainFormatterReturnType,\n} from '../../types/chain.js'\nimport type { RpcTransactionReceipt } from '../../types/rpc.js'\nimport type { TransactionReceipt } from '../../types/transaction.js'\nimport type { ExactPartial } from '../../types/utils.js'\nimport { hexToNumber } from '../encoding/fromHex.js'\n\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\nimport { formatLog } from './log.js'\nimport { transactionType } from './transaction.js'\n\nexport type FormattedTransactionReceipt<\n  TChain extends Chain | undefined = undefined,\n> = ExtractChainFormatterReturnType<\n  TChain,\n  'transactionReceipt',\n  TransactionReceipt\n>\n\nexport const receiptStatuses = {\n  '0x0': 'reverted',\n  '0x1': 'success',\n} as const\n\nexport type FormatTransactionReceiptErrorType = ErrorType\n\nexport function formatTransactionReceipt(\n  transactionReceipt: ExactPartial<RpcTransactionReceipt>,\n) {\n  const receipt = {\n    ...transactionReceipt,\n    blockNumber: transactionReceipt.blockNumber\n      ? BigInt(transactionReceipt.blockNumber)\n      : null,\n    contractAddress: transactionReceipt.contractAddress\n      ? transactionReceipt.contractAddress\n      : null,\n    cumulativeGasUsed: transactionReceipt.cumulativeGasUsed\n      ? BigInt(transactionReceipt.cumulativeGasUsed)\n      : null,\n    effectiveGasPrice: transactionReceipt.effectiveGasPrice\n      ? BigInt(transactionReceipt.effectiveGasPrice)\n      : null,\n    gasUsed: transactionReceipt.gasUsed\n      ? BigInt(transactionReceipt.gasUsed)\n      : null,\n    logs: transactionReceipt.logs\n      ? transactionReceipt.logs.map((log) => formatLog(log))\n      : null,\n    to: transactionReceipt.to ? transactionReceipt.to : null,\n    transactionIndex: transactionReceipt.transactionIndex\n      ? hexToNumber(transactionReceipt.transactionIndex)\n      : null,\n    status: transactionReceipt.status\n      ? receiptStatuses[transactionReceipt.status]\n      : null,\n    type: transactionReceipt.type\n      ? transactionType[\n          transactionReceipt.type as keyof typeof transactionType\n        ] || transactionReceipt.type\n      : null,\n  } as TransactionReceipt\n\n  if (transactionReceipt.blobGasPrice)\n    receipt.blobGasPrice = BigInt(transactionReceipt.blobGasPrice)\n  if (transactionReceipt.blobGasUsed)\n    receipt.blobGasUsed = BigInt(transactionReceipt.blobGasUsed)\n\n  return receipt\n}\n\nexport type DefineTransactionReceiptErrorType =\n  | DefineFormatterErrorType\n  | ErrorType\n\nexport const defineTransactionReceipt = /*#__PURE__*/ defineFormatter(\n  'transactionReceipt',\n  formatTransactionReceipt,\n)\n","import type { ChainFormatters } from '../types/chain.js'\nimport type { Hash } from '../types/misc.js'\nimport type { RpcTransaction } from '../types/rpc.js'\nimport { hexToBigInt } from '../utils/encoding/fromHex.js'\nimport { defineBlock } from '../utils/formatters/block.js'\nimport {\n  defineTransaction,\n  formatTransaction,\n} from '../utils/formatters/transaction.js'\nimport { defineTransactionReceipt } from '../utils/formatters/transactionReceipt.js'\nimport type {\n  OpStackBlockOverrides,\n  OpStackRpcBlockOverrides,\n} from './types/block.js'\nimport type {\n  OpStackRpcTransaction,\n  OpStackRpcTransactionReceiptOverrides,\n  OpStackTransaction,\n  OpStackTransactionReceiptOverrides,\n} from './types/transaction.js'\n\nexport const formatters = {\n  block: /*#__PURE__*/ defineBlock({\n    format(\n      args: OpStackRpcBlockOverrides & {\n        transactions: Hash[] | OpStackRpcTransaction[]\n      },\n    ): OpStackBlockOverrides & {\n      transactions: Hash[] | OpStackTransaction[]\n    } {\n      const transactions = args.transactions?.map((transaction) => {\n        if (typeof transaction === 'string') return transaction\n        const formatted = formatTransaction(\n          transaction as RpcTransaction,\n        ) as OpStackTransaction\n        if (formatted.typeHex === '0x7e') {\n          formatted.isSystemTx = transaction.isSystemTx\n          formatted.mint = transaction.mint\n            ? hexToBigInt(transaction.mint)\n            : undefined\n          formatted.sourceHash = transaction.sourceHash\n          formatted.type = 'deposit'\n        }\n        return formatted\n      }) as Hash[] | OpStackTransaction[]\n      return {\n        transactions,\n        stateRoot: args.stateRoot,\n      }\n    },\n  }),\n  transaction: /*#__PURE__*/ defineTransaction({\n    format(args: OpStackRpcTransaction): OpStackTransaction {\n      const transaction = {} as OpStackTransaction\n      if (args.type === '0x7e') {\n        transaction.isSystemTx = args.isSystemTx\n        transaction.mint = args.mint ? hexToBigInt(args.mint) : undefined\n        transaction.sourceHash = args.sourceHash\n        transaction.type = 'deposit'\n      }\n      return transaction\n    },\n  }),\n  transactionReceipt: /*#__PURE__*/ defineTransactionReceipt({\n    format(\n      args: OpStackRpcTransactionReceiptOverrides,\n    ): OpStackTransactionReceiptOverrides {\n      return {\n        l1GasPrice: args.l1GasPrice ? hexToBigInt(args.l1GasPrice) : null,\n        l1GasUsed: args.l1GasUsed ? hexToBigInt(args.l1GasUsed) : null,\n        l1Fee: args.l1Fee ? hexToBigInt(args.l1Fee) : null,\n        l1FeeScalar: args.l1FeeScalar ? Number(args.l1FeeScalar) : null,\n      }\n    },\n  }),\n} as const satisfies ChainFormatters\n","import { BaseError } from './base.js'\n\nexport type InvalidAddressErrorType = InvalidAddressError & {\n  name: 'InvalidAddressError'\n}\nexport class InvalidAddressError extends BaseError {\n  override name = 'InvalidAddressError'\n  constructor({ address }: { address: string }) {\n    super(`Address \"${address}\" is invalid.`, {\n      metaMessages: [\n        '- Address must be a hex value of 20 bytes (40 hex characters).',\n        '- Address must match its checksum counterpart.',\n      ],\n    })\n  }\n}\n","/**\n * Map with a LRU (Least recently used) policy.\n *\n * @link https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU\n */\nexport class LruMap<value = unknown> extends Map<string, value> {\n  maxSize: number\n\n  constructor(size: number) {\n    super()\n    this.maxSize = size\n  }\n\n  override set(key: string, value: value) {\n    super.set(key, value)\n    if (this.maxSize && this.size > this.maxSize)\n      this.delete(this.keys().next().value)\n    return this\n  }\n}\n","import type { Address } from 'abitype'\n\nimport { InvalidAddressError } from '../../errors/address.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type StringToBytesErrorType,\n  stringToBytes,\n} from '../encoding/toBytes.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport { LruMap } from '../lru.js'\nimport { type IsAddressErrorType, isAddress } from './isAddress.js'\n\nexport const checksumAddressCache = /*#__PURE__*/ new LruMap<Address>(8192)\n\nexport type ChecksumAddressErrorType =\n  | Keccak256ErrorType\n  | StringToBytesErrorType\n  | ErrorType\n\nexport function checksumAddress(\n  address_: Address,\n  /**\n   * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the\n   * wider Ethereum ecosystem, meaning it will break when validated against an application/tool\n   * that relies on EIP-55 checksum encoding (checksum without chainId).\n   *\n   * It is highly recommended to not use this feature unless you\n   * know what you are doing.\n   *\n   * See more: https://github.com/ethereum/EIPs/issues/1121\n   */\n  chainId?: number | undefined,\n): Address {\n  if (checksumAddressCache.has(`${address_}.${chainId}`))\n    return checksumAddressCache.get(`${address_}.${chainId}`)!\n\n  const hexAddress = chainId\n    ? `${chainId}${address_.toLowerCase()}`\n    : address_.substring(2).toLowerCase()\n  const hash = keccak256(stringToBytes(hexAddress), 'bytes')\n\n  const address = (\n    chainId ? hexAddress.substring(`${chainId}0x`.length) : hexAddress\n  ).split('')\n  for (let i = 0; i < 40; i += 2) {\n    if (hash[i >> 1] >> 4 >= 8 && address[i]) {\n      address[i] = address[i].toUpperCase()\n    }\n    if ((hash[i >> 1] & 0x0f) >= 8 && address[i + 1]) {\n      address[i + 1] = address[i + 1].toUpperCase()\n    }\n  }\n\n  const result = `0x${address.join('')}` as const\n  checksumAddressCache.set(`${address_}.${chainId}`, result)\n  return result\n}\n\nexport type GetAddressErrorType =\n  | ChecksumAddressErrorType\n  | IsAddressErrorType\n  | ErrorType\n\nexport function getAddress(\n  address: string,\n  /**\n   * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the\n   * wider Ethereum ecosystem, meaning it will break when validated against an application/tool\n   * that relies on EIP-55 checksum encoding (checksum without chainId).\n   *\n   * It is highly recommended to not use this feature unless you\n   * know what you are doing.\n   *\n   * See more: https://github.com/ethereum/EIPs/issues/1121\n   */\n  chainId?: number,\n): Address {\n  if (!isAddress(address, { strict: false }))\n    throw new InvalidAddressError({ address })\n  return checksumAddress(address, chainId)\n}\n","import { keccak_256 } from '@noble/hashes/sha3'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\nimport { type ToBytesErrorType, toBytes } from '../encoding/toBytes.js'\nimport { type ToHexErrorType, toHex } from '../encoding/toHex.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type Keccak256Hash<TTo extends To> =\n  | (TTo extends 'bytes' ? ByteArray : never)\n  | (TTo extends 'hex' ? Hex : never)\n\nexport type Keccak256ErrorType =\n  | IsHexErrorType\n  | ToBytesErrorType\n  | ToHexErrorType\n  | ErrorType\n\nexport function keccak256<TTo extends To = 'hex'>(\n  value: Hex | ByteArray,\n  to_?: TTo | undefined,\n): Keccak256Hash<TTo> {\n  const to = to_ || 'hex'\n  const bytes = keccak_256(\n    isHex(value, { strict: false }) ? toBytes(value) : value,\n  )\n  if (to === 'bytes') return bytes as Keccak256Hash<TTo>\n  return toHex(bytes) as Keccak256Hash<TTo>\n}\n","import type { Address } from 'abitype'\nimport type { ErrorType } from '../../errors/utils.js'\nimport { LruMap } from '../lru.js'\nimport { checksumAddress } from './getAddress.js'\n\nconst addressRegex = /^0x[a-fA-F0-9]{40}$/\n\nexport const isAddressCache = /*#__PURE__*/ new LruMap<boolean>(8192)\n\nexport type IsAddressOptions = {\n  /**\n   * Enables strict mode. Whether or not to compare the address against its checksum.\n   *\n   * @default true\n   */\n  strict?: boolean | undefined\n}\n\nexport type IsAddressErrorType = ErrorType\n\nexport function isAddress(\n  address: string,\n  options?: IsAddressOptions | undefined,\n): address is Address {\n  const { strict = true } = options ?? {}\n\n  if (isAddressCache.has(address)) return isAddressCache.get(address)!\n\n  const result = (() => {\n    if (!addressRegex.test(address)) return false\n    if (address.toLowerCase() === address) return true\n    if (strict) return checksumAddress(address as Address) === address\n    return true\n  })()\n  isAddressCache.set(address, result)\n  return result\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\nexport type ConcatReturnType<TValue extends Hex | ByteArray> =\n  TValue extends Hex ? Hex : ByteArray\n\nexport type ConcatErrorType =\n  | ConcatBytesErrorType\n  | ConcatHexErrorType\n  | ErrorType\n\nexport function concat<TValue extends Hex | ByteArray>(\n  values: readonly TValue[],\n): ConcatReturnType<TValue> {\n  if (typeof values[0] === 'string')\n    return concatHex(values as readonly Hex[]) as ConcatReturnType<TValue>\n  return concatBytes(values as readonly ByteArray[]) as ConcatReturnType<TValue>\n}\n\nexport type ConcatBytesErrorType = ErrorType\n\nexport function concatBytes(values: readonly ByteArray[]): ByteArray {\n  let length = 0\n  for (const arr of values) {\n    length += arr.length\n  }\n  const result = new Uint8Array(length)\n  let offset = 0\n  for (const arr of values) {\n    result.set(arr, offset)\n    offset += arr.length\n  }\n  return result\n}\n\nexport type ConcatHexErrorType = ErrorType\n\nexport function concatHex(values: readonly Hex[]): Hex {\n  return `0x${(values as Hex[]).reduce(\n    (acc, x) => acc + x.replace('0x', ''),\n    '',\n  )}`\n}\n","import { BaseError } from './base.js'\n\nexport type NegativeOffsetErrorType = NegativeOffsetError & {\n  name: 'NegativeOffsetError'\n}\nexport class NegativeOffsetError extends BaseError {\n  override name = 'NegativeOffsetError'\n  constructor({ offset }: { offset: number }) {\n    super(`Offset \\`${offset}\\` cannot be negative.`)\n  }\n}\n\nexport type PositionOutOfBoundsErrorType = PositionOutOfBoundsError & {\n  name: 'PositionOutOfBoundsError'\n}\nexport class PositionOutOfBoundsError extends BaseError {\n  override name = 'PositionOutOfBoundsError'\n  constructor({ length, position }: { length: number; position: number }) {\n    super(\n      `Position \\`${position}\\` is out of bounds (\\`0 < position < ${length}\\`).`,\n    )\n  }\n}\n\nexport type RecursiveReadLimitExceededErrorType =\n  RecursiveReadLimitExceededError & {\n    name: 'RecursiveReadLimitExceededError'\n  }\nexport class RecursiveReadLimitExceededError extends BaseError {\n  override name = 'RecursiveReadLimitExceededError'\n  constructor({ count, limit }: { count: number; limit: number }) {\n    super(\n      `Recursive read limit of \\`${limit}\\` exceeded (recursive read count: \\`${count}\\`).`,\n    )\n  }\n}\n","import {\n  NegativeOffsetError,\n  PositionOutOfBoundsError,\n  RecursiveReadLimitExceededError,\n} from '../errors/cursor.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport type { ByteArray } from '../types/misc.js'\n\nexport type Cursor = {\n  bytes: ByteArray\n  dataView: DataView\n  position: number\n  positionReadCount: Map<number, number>\n  recursiveReadCount: number\n  recursiveReadLimit: number\n  remaining: number\n  assertReadLimit(position?: number): void\n  assertPosition(position: number): void\n  decrementPosition(offset: number): void\n  getReadCount(position?: number): number\n  incrementPosition(offset: number): void\n  inspectByte(position?: number): ByteArray[number]\n  inspectBytes(length: number, position?: number): ByteArray\n  inspectUint8(position?: number): number\n  inspectUint16(position?: number): number\n  inspectUint24(position?: number): number\n  inspectUint32(position?: number): number\n  pushByte(byte: ByteArray[number]): void\n  pushBytes(bytes: ByteArray): void\n  pushUint8(value: number): void\n  pushUint16(value: number): void\n  pushUint24(value: number): void\n  pushUint32(value: number): void\n  readByte(): ByteArray[number]\n  readBytes(length: number, size?: number): ByteArray\n  readUint8(): number\n  readUint16(): number\n  readUint24(): number\n  readUint32(): number\n  setPosition(position: number): () => void\n  _touch(): void\n}\n\nexport type CreateCursorErrorType = ErrorType\n\nexport type CursorErrorType =\n  | CursorAssertPositionErrorType\n  | CursorDecrementPositionErrorType\n  | CursorIncrementPositionErrorType\n  | ErrorType\n\nexport type CursorAssertPositionErrorType = PositionOutOfBoundsError | ErrorType\n\nexport type CursorDecrementPositionErrorType = NegativeOffsetError | ErrorType\n\nexport type CursorIncrementPositionErrorType = NegativeOffsetError | ErrorType\n\nconst staticCursor: Cursor = {\n  bytes: new Uint8Array(),\n  dataView: new DataView(new ArrayBuffer(0)),\n  position: 0,\n  positionReadCount: new Map(),\n  recursiveReadCount: 0,\n  recursiveReadLimit: Number.POSITIVE_INFINITY,\n  assertReadLimit() {\n    if (this.recursiveReadCount >= this.recursiveReadLimit)\n      throw new RecursiveReadLimitExceededError({\n        count: this.recursiveReadCount + 1,\n        limit: this.recursiveReadLimit,\n      })\n  },\n  assertPosition(position) {\n    if (position < 0 || position > this.bytes.length - 1)\n      throw new PositionOutOfBoundsError({\n        length: this.bytes.length,\n        position,\n      })\n  },\n  decrementPosition(offset) {\n    if (offset < 0) throw new NegativeOffsetError({ offset })\n    const position = this.position - offset\n    this.assertPosition(position)\n    this.position = position\n  },\n  getReadCount(position) {\n    return this.positionReadCount.get(position || this.position) || 0\n  },\n  incrementPosition(offset) {\n    if (offset < 0) throw new NegativeOffsetError({ offset })\n    const position = this.position + offset\n    this.assertPosition(position)\n    this.position = position\n  },\n  inspectByte(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position)\n    return this.bytes[position]\n  },\n  inspectBytes(length, position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + length - 1)\n    return this.bytes.subarray(position, position + length)\n  },\n  inspectUint8(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position)\n    return this.bytes[position]\n  },\n  inspectUint16(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + 1)\n    return this.dataView.getUint16(position)\n  },\n  inspectUint24(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + 2)\n    return (\n      (this.dataView.getUint16(position) << 8) +\n      this.dataView.getUint8(position + 2)\n    )\n  },\n  inspectUint32(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + 3)\n    return this.dataView.getUint32(position)\n  },\n  pushByte(byte: ByteArray[number]) {\n    this.assertPosition(this.position)\n    this.bytes[this.position] = byte\n    this.position++\n  },\n  pushBytes(bytes: ByteArray) {\n    this.assertPosition(this.position + bytes.length - 1)\n    this.bytes.set(bytes, this.position)\n    this.position += bytes.length\n  },\n  pushUint8(value: number) {\n    this.assertPosition(this.position)\n    this.bytes[this.position] = value\n    this.position++\n  },\n  pushUint16(value: number) {\n    this.assertPosition(this.position + 1)\n    this.dataView.setUint16(this.position, value)\n    this.position += 2\n  },\n  pushUint24(value: number) {\n    this.assertPosition(this.position + 2)\n    this.dataView.setUint16(this.position, value >> 8)\n    this.dataView.setUint8(this.position + 2, value & ~4294967040)\n    this.position += 3\n  },\n  pushUint32(value: number) {\n    this.assertPosition(this.position + 3)\n    this.dataView.setUint32(this.position, value)\n    this.position += 4\n  },\n  readByte() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectByte()\n    this.position++\n    return value\n  },\n  readBytes(length, size) {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectBytes(length)\n    this.position += size ?? length\n    return value\n  },\n  readUint8() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectUint8()\n    this.position += 1\n    return value\n  },\n  readUint16() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectUint16()\n    this.position += 2\n    return value\n  },\n  readUint24() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectUint24()\n    this.position += 3\n    return value\n  },\n  readUint32() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectUint32()\n    this.position += 4\n    return value\n  },\n  get remaining() {\n    return this.bytes.length - this.position\n  },\n  setPosition(position) {\n    const oldPosition = this.position\n    this.assertPosition(position)\n    this.position = position\n    return () => (this.position = oldPosition)\n  },\n  _touch() {\n    if (this.recursiveReadLimit === Number.POSITIVE_INFINITY) return\n    const count = this.getReadCount()\n    this.positionReadCount.set(this.position, count + 1)\n    if (count > 0) this.recursiveReadCount++\n  },\n}\n\ntype CursorConfig = { recursiveReadLimit?: number | undefined }\n\nexport function createCursor(\n  bytes: ByteArray,\n  { recursiveReadLimit = 8_192 }: CursorConfig = {},\n): Cursor {\n  const cursor: Cursor = Object.create(staticCursor)\n  cursor.bytes = bytes\n  cursor.dataView = new DataView(\n    bytes.buffer,\n    bytes.byteOffset,\n    bytes.byteLength,\n  )\n  cursor.positionReadCount = new Map()\n  cursor.recursiveReadLimit = recursiveReadLimit\n  return cursor\n}\n","import { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport {\n  type CreateCursorErrorType,\n  type Cursor,\n  createCursor,\n} from '../cursor.js'\n\nimport { type HexToBytesErrorType, hexToBytes } from './toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from './toHex.js'\n\nexport type RecursiveArray<T> = T | readonly RecursiveArray<T>[]\n\ntype To = 'hex' | 'bytes'\n\ntype Encodable = {\n  length: number\n  encode(cursor: Cursor): void\n}\n\nexport type ToRlpReturnType<to extends To> =\n  | (to extends 'bytes' ? ByteArray : never)\n  | (to extends 'hex' ? Hex : never)\n\nexport type ToRlpErrorType =\n  | CreateCursorErrorType\n  | BytesToHexErrorType\n  | HexToBytesErrorType\n  | ErrorType\n\nexport function toRlp<to extends To = 'hex'>(\n  bytes: RecursiveArray<ByteArray> | RecursiveArray<Hex>,\n  to: to | To | undefined = 'hex',\n): ToRlpReturnType<to> {\n  const encodable = getEncodable(bytes)\n  const cursor = createCursor(new Uint8Array(encodable.length))\n  encodable.encode(cursor)\n\n  if (to === 'hex') return bytesToHex(cursor.bytes) as ToRlpReturnType<to>\n  return cursor.bytes as ToRlpReturnType<to>\n}\n\nexport type BytesToRlpErrorType = ToRlpErrorType | ErrorType\n\nexport function bytesToRlp<to extends To = 'bytes'>(\n  bytes: RecursiveArray<ByteArray>,\n  to: to | To | undefined = 'bytes',\n): ToRlpReturnType<to> {\n  return toRlp(bytes, to)\n}\n\nexport type HexToRlpErrorType = ToRlpErrorType | ErrorType\n\nexport function hexToRlp<to extends To = 'hex'>(\n  hex: RecursiveArray<Hex>,\n  to: to | To | undefined = 'hex',\n): ToRlpReturnType<to> {\n  return toRlp(hex, to)\n}\n\nfunction getEncodable(\n  bytes: RecursiveArray<ByteArray> | RecursiveArray<Hex>,\n): Encodable {\n  if (Array.isArray(bytes))\n    return getEncodableList(bytes.map((x) => getEncodable(x)))\n  return getEncodableBytes(bytes as any)\n}\n\nfunction getEncodableList(list: Encodable[]): Encodable {\n  const bodyLength = list.reduce((acc, x) => acc + x.length, 0)\n\n  const sizeOfBodyLength = getSizeOfLength(bodyLength)\n  const length = (() => {\n    if (bodyLength <= 55) return 1 + bodyLength\n    return 1 + sizeOfBodyLength + bodyLength\n  })()\n\n  return {\n    length,\n    encode(cursor: Cursor) {\n      if (bodyLength <= 55) {\n        cursor.pushByte(0xc0 + bodyLength)\n      } else {\n        cursor.pushByte(0xc0 + 55 + sizeOfBodyLength)\n        if (sizeOfBodyLength === 1) cursor.pushUint8(bodyLength)\n        else if (sizeOfBodyLength === 2) cursor.pushUint16(bodyLength)\n        else if (sizeOfBodyLength === 3) cursor.pushUint24(bodyLength)\n        else cursor.pushUint32(bodyLength)\n      }\n      for (const { encode } of list) {\n        encode(cursor)\n      }\n    },\n  }\n}\n\nfunction getEncodableBytes(bytesOrHex: ByteArray | Hex): Encodable {\n  const bytes =\n    typeof bytesOrHex === 'string' ? hexToBytes(bytesOrHex) : bytesOrHex\n\n  const sizeOfBytesLength = getSizeOfLength(bytes.length)\n  const length = (() => {\n    if (bytes.length === 1 && bytes[0] < 0x80) return 1\n    if (bytes.length <= 55) return 1 + bytes.length\n    return 1 + sizeOfBytesLength + bytes.length\n  })()\n\n  return {\n    length,\n    encode(cursor: Cursor) {\n      if (bytes.length === 1 && bytes[0] < 0x80) {\n        cursor.pushBytes(bytes)\n      } else if (bytes.length <= 55) {\n        cursor.pushByte(0x80 + bytes.length)\n        cursor.pushBytes(bytes)\n      } else {\n        cursor.pushByte(0x80 + 55 + sizeOfBytesLength)\n        if (sizeOfBytesLength === 1) cursor.pushUint8(bytes.length)\n        else if (sizeOfBytesLength === 2) cursor.pushUint16(bytes.length)\n        else if (sizeOfBytesLength === 3) cursor.pushUint24(bytes.length)\n        else cursor.pushUint32(bytes.length)\n        cursor.pushBytes(bytes)\n      }\n    },\n  }\n}\n\nfunction getSizeOfLength(length: number) {\n  if (length < 2 ** 8) return 1\n  if (length < 2 ** 16) return 2\n  if (length < 2 ** 24) return 3\n  if (length < 2 ** 32) return 4\n  throw new BaseError('Length is too large.')\n}\n","import { gweiUnits } from '../../constants/unit.js'\n\nimport { type FormatUnitsErrorType, formatUnits } from './formatUnits.js'\n\nexport type FormatGweiErrorType = FormatUnitsErrorType\n\n/**\n * Converts numerical wei to a string representation of gwei.\n *\n * - Docs: https://viem.sh/docs/utilities/formatGwei\n *\n * @example\n * import { formatGwei } from 'viem'\n *\n * formatGwei(1000000000n)\n * // '1'\n */\nexport function formatGwei(wei: bigint, unit: 'wei' = 'wei') {\n  return formatUnits(wei, gweiUnits[unit])\n}\n","import type { Account } from '../accounts/types.js'\nimport type { SendTransactionParameters } from '../actions/wallet/sendTransaction.js'\nimport type { BlockTag } from '../types/block.js'\nimport type { Chain } from '../types/chain.js'\nimport type { Hash, Hex } from '../types/misc.js'\nimport type { TransactionType } from '../types/transaction.js'\nimport { formatEther } from '../utils/unit/formatEther.js'\nimport { formatGwei } from '../utils/unit/formatGwei.js'\n\nimport { BaseError } from './base.js'\n\nexport function prettyPrint(\n  args: Record<string, bigint | number | string | undefined | false | unknown>,\n) {\n  const entries = Object.entries(args)\n    .map(([key, value]) => {\n      if (value === undefined || value === false) return null\n      return [key, value]\n    })\n    .filter(Boolean) as [string, string][]\n  const maxLength = entries.reduce((acc, [key]) => Math.max(acc, key.length), 0)\n  return entries\n    .map(([key, value]) => `  ${`${key}:`.padEnd(maxLength + 1)}  ${value}`)\n    .join('\\n')\n}\n\nexport type FeeConflictErrorType = FeeConflictError & {\n  name: 'FeeConflictError'\n}\nexport class FeeConflictError extends BaseError {\n  override name = 'FeeConflictError'\n  constructor() {\n    super(\n      [\n        'Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.',\n        'Use `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others.',\n      ].join('\\n'),\n    )\n  }\n}\n\nexport type InvalidLegacyVErrorType = InvalidLegacyVError & {\n  name: 'InvalidLegacyVError'\n}\nexport class InvalidLegacyVError extends BaseError {\n  override name = 'InvalidLegacyVError'\n\n  constructor({ v }: { v: bigint }) {\n    super(`Invalid \\`v\\` value \"${v}\". Expected 27 or 28.`)\n  }\n}\n\nexport type InvalidSerializableTransactionErrorType =\n  InvalidSerializableTransactionError & {\n    name: 'InvalidSerializableTransactionError'\n  }\nexport class InvalidSerializableTransactionError extends BaseError {\n  override name = 'InvalidSerializableTransactionError'\n\n  constructor({ transaction }: { transaction: Record<string, unknown> }) {\n    super('Cannot infer a transaction type from provided transaction.', {\n      metaMessages: [\n        'Provided Transaction:',\n        '{',\n        prettyPrint(transaction),\n        '}',\n        '',\n        'To infer the type, either provide:',\n        '- a `type` to the Transaction, or',\n        '- an EIP-1559 Transaction with `maxFeePerGas`, or',\n        '- an EIP-2930 Transaction with `gasPrice` & `accessList`, or',\n        '- an EIP-4844 Transaction with `blobs`, `blobVersionedHashes`, `sidecars`, or',\n        '- a Legacy Transaction with `gasPrice`',\n      ],\n    })\n  }\n}\n\nexport type InvalidSerializedTransactionTypeErrorType =\n  InvalidSerializedTransactionTypeError & {\n    name: 'InvalidSerializedTransactionTypeError'\n  }\nexport class InvalidSerializedTransactionTypeError extends BaseError {\n  override name = 'InvalidSerializedTransactionType'\n\n  serializedType: Hex\n\n  constructor({ serializedType }: { serializedType: Hex }) {\n    super(`Serialized transaction type \"${serializedType}\" is invalid.`)\n\n    this.serializedType = serializedType\n  }\n}\n\nexport type InvalidSerializedTransactionErrorType =\n  InvalidSerializedTransactionError & {\n    name: 'InvalidSerializedTransactionError'\n  }\nexport class InvalidSerializedTransactionError extends BaseError {\n  override name = 'InvalidSerializedTransactionError'\n\n  serializedTransaction: Hex\n  type: TransactionType\n\n  constructor({\n    attributes,\n    serializedTransaction,\n    type,\n  }: {\n    attributes: Record<string, unknown>\n    serializedTransaction: Hex\n    type: TransactionType\n  }) {\n    const missing = Object.entries(attributes)\n      .map(([key, value]) => (typeof value === 'undefined' ? key : undefined))\n      .filter(Boolean)\n    super(`Invalid serialized transaction of type \"${type}\" was provided.`, {\n      metaMessages: [\n        `Serialized Transaction: \"${serializedTransaction}\"`,\n        missing.length > 0 ? `Missing Attributes: ${missing.join(', ')}` : '',\n      ].filter(Boolean),\n    })\n\n    this.serializedTransaction = serializedTransaction\n    this.type = type\n  }\n}\n\nexport type InvalidStorageKeySizeErrorType = InvalidStorageKeySizeError & {\n  name: 'InvalidStorageKeySizeError'\n}\nexport class InvalidStorageKeySizeError extends BaseError {\n  override name = 'InvalidStorageKeySizeError'\n\n  constructor({ storageKey }: { storageKey: Hex }) {\n    super(\n      `Size for storage key \"${storageKey}\" is invalid. Expected 32 bytes. Got ${Math.floor(\n        (storageKey.length - 2) / 2,\n      )} bytes.`,\n    )\n  }\n}\n\nexport type TransactionExecutionErrorType = TransactionExecutionError & {\n  name: 'TransactionExecutionError'\n}\nexport class TransactionExecutionError extends BaseError {\n  override cause: BaseError\n\n  override name = 'TransactionExecutionError'\n\n  constructor(\n    cause: BaseError,\n    {\n      account,\n      docsPath,\n      chain,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n    }: Omit<SendTransactionParameters, 'account' | 'chain'> & {\n      account: Account\n      chain?: Chain | undefined\n      docsPath?: string | undefined\n    },\n  ) {\n    const prettyArgs = prettyPrint({\n      chain: chain && `${chain?.name} (id: ${chain?.id})`,\n      from: account?.address,\n      to,\n      value:\n        typeof value !== 'undefined' &&\n        `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n      data,\n      gas,\n      gasPrice:\n        typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n      maxFeePerGas:\n        typeof maxFeePerGas !== 'undefined' &&\n        `${formatGwei(maxFeePerGas)} gwei`,\n      maxPriorityFeePerGas:\n        typeof maxPriorityFeePerGas !== 'undefined' &&\n        `${formatGwei(maxPriorityFeePerGas)} gwei`,\n      nonce,\n    })\n\n    super(cause.shortMessage, {\n      cause,\n      docsPath,\n      metaMessages: [\n        ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n        'Request Arguments:',\n        prettyArgs,\n      ].filter(Boolean) as string[],\n    })\n    this.cause = cause\n  }\n}\n\nexport type TransactionNotFoundErrorType = TransactionNotFoundError & {\n  name: 'TransactionNotFoundError'\n}\nexport class TransactionNotFoundError extends BaseError {\n  override name = 'TransactionNotFoundError'\n  constructor({\n    blockHash,\n    blockNumber,\n    blockTag,\n    hash,\n    index,\n  }: {\n    blockHash?: Hash | undefined\n    blockNumber?: bigint | undefined\n    blockTag?: BlockTag | undefined\n    hash?: Hash | undefined\n    index?: number | undefined\n  }) {\n    let identifier = 'Transaction'\n    if (blockTag && index !== undefined)\n      identifier = `Transaction at block time \"${blockTag}\" at index \"${index}\"`\n    if (blockHash && index !== undefined)\n      identifier = `Transaction at block hash \"${blockHash}\" at index \"${index}\"`\n    if (blockNumber && index !== undefined)\n      identifier = `Transaction at block number \"${blockNumber}\" at index \"${index}\"`\n    if (hash) identifier = `Transaction with hash \"${hash}\"`\n    super(`${identifier} could not be found.`)\n  }\n}\n\nexport type TransactionReceiptNotFoundErrorType =\n  TransactionReceiptNotFoundError & {\n    name: 'TransactionReceiptNotFoundError'\n  }\nexport class TransactionReceiptNotFoundError extends BaseError {\n  override name = 'TransactionReceiptNotFoundError'\n  constructor({ hash }: { hash: Hash }) {\n    super(\n      `Transaction receipt with hash \"${hash}\" could not be found. The Transaction may not be processed on a block yet.`,\n    )\n  }\n}\n\nexport type WaitForTransactionReceiptTimeoutErrorType =\n  WaitForTransactionReceiptTimeoutError & {\n    name: 'WaitForTransactionReceiptTimeoutError'\n  }\nexport class WaitForTransactionReceiptTimeoutError extends BaseError {\n  override name = 'WaitForTransactionReceiptTimeoutError'\n  constructor({ hash }: { hash: Hash }) {\n    super(\n      `Timed out while waiting for transaction with hash \"${hash}\" to be confirmed.`,\n    )\n  }\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { Kzg } from '../../types/kzg.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type HexToBytesErrorType, hexToBytes } from '../encoding/toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type BlobsToCommitmentsParameters<\n  blobs extends readonly ByteArray[] | readonly Hex[] =\n    | readonly ByteArray[]\n    | readonly Hex[],\n  to extends To | undefined = undefined,\n> = {\n  /** Blobs to transform into commitments. */\n  blobs: blobs | readonly ByteArray[] | readonly Hex[]\n  /** KZG implementation. */\n  kzg: Pick<Kzg, 'blobToKzgCommitment'>\n  /** Return type. */\n  to?: to | To | undefined\n}\n\nexport type BlobsToCommitmentsReturnType<to extends To> =\n  | (to extends 'bytes' ? readonly ByteArray[] : never)\n  | (to extends 'hex' ? readonly Hex[] : never)\n\nexport type BlobsToCommitmentsErrorType =\n  | HexToBytesErrorType\n  | BytesToHexErrorType\n  | ErrorType\n\n/**\n * Compute commitments from a list of blobs.\n *\n * @example\n * ```ts\n * import { blobsToCommitments, toBlobs } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * ```\n */\nexport function blobsToCommitments<\n  const blobs extends readonly ByteArray[] | readonly Hex[],\n  to extends To =\n    | (blobs extends readonly Hex[] ? 'hex' : never)\n    | (blobs extends readonly ByteArray[] ? 'bytes' : never),\n>(\n  parameters: BlobsToCommitmentsParameters<blobs, to>,\n): BlobsToCommitmentsReturnType<to> {\n  const { kzg } = parameters\n\n  const to =\n    parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes')\n  const blobs = (\n    typeof parameters.blobs[0] === 'string'\n      ? parameters.blobs.map((x) => hexToBytes(x as any))\n      : parameters.blobs\n  ) as ByteArray[]\n\n  const commitments: ByteArray[] = []\n  for (const blob of blobs)\n    commitments.push(Uint8Array.from(kzg.blobToKzgCommitment(blob)))\n\n  return (to === 'bytes'\n    ? commitments\n    : commitments.map((x) =>\n        bytesToHex(x),\n      )) as {} as BlobsToCommitmentsReturnType<to>\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { Kzg } from '../../types/kzg.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type HexToBytesErrorType, hexToBytes } from '../encoding/toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type blobsToProofsParameters<\n  blobs extends readonly ByteArray[] | readonly Hex[],\n  commitments extends readonly ByteArray[] | readonly Hex[],\n  to extends To =\n    | (blobs extends readonly Hex[] ? 'hex' : never)\n    | (blobs extends readonly ByteArray[] ? 'bytes' : never),\n  ///\n  _blobsType =\n    | (blobs extends readonly Hex[] ? readonly Hex[] : never)\n    | (blobs extends readonly ByteArray[] ? readonly ByteArray[] : never),\n> = {\n  /** Blobs to transform into proofs. */\n  blobs: blobs\n  /** Commitments for the blobs. */\n  commitments: commitments &\n    (commitments extends _blobsType\n      ? {}\n      : `commitments must be the same type as blobs`)\n  /** KZG implementation. */\n  kzg: Pick<Kzg, 'computeBlobKzgProof'>\n  /** Return type. */\n  to?: to | To | undefined\n}\n\nexport type blobsToProofsReturnType<to extends To> =\n  | (to extends 'bytes' ? ByteArray[] : never)\n  | (to extends 'hex' ? Hex[] : never)\n\nexport type blobsToProofsErrorType =\n  | BytesToHexErrorType\n  | HexToBytesErrorType\n  | ErrorType\n\n/**\n * Compute the proofs for a list of blobs and their commitments.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const proofs = blobsToProofs({ blobs, commitments, kzg })\n * ```\n */\nexport function blobsToProofs<\n  const blobs extends readonly ByteArray[] | readonly Hex[],\n  const commitments extends readonly ByteArray[] | readonly Hex[],\n  to extends To =\n    | (blobs extends readonly Hex[] ? 'hex' : never)\n    | (blobs extends readonly ByteArray[] ? 'bytes' : never),\n>(\n  parameters: blobsToProofsParameters<blobs, commitments, to>,\n): blobsToProofsReturnType<to> {\n  const { kzg } = parameters\n\n  const to =\n    parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes')\n\n  const blobs = (\n    typeof parameters.blobs[0] === 'string'\n      ? parameters.blobs.map((x) => hexToBytes(x as any))\n      : parameters.blobs\n  ) as ByteArray[]\n  const commitments = (\n    typeof parameters.commitments[0] === 'string'\n      ? parameters.commitments.map((x) => hexToBytes(x as any))\n      : parameters.commitments\n  ) as ByteArray[]\n\n  const proofs: ByteArray[] = []\n  for (let i = 0; i < blobs.length; i++) {\n    const blob = blobs[i]\n    const commitment = commitments[i]\n    proofs.push(Uint8Array.from(kzg.computeBlobKzgProof(blob, commitment)))\n  }\n\n  return (to === 'bytes'\n    ? proofs\n    : proofs.map((x) => bytesToHex(x))) as {} as blobsToProofsReturnType<to>\n}\n","import { sha256 as noble_sha256 } from '@noble/hashes/sha256'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\nimport { type ToBytesErrorType, toBytes } from '../encoding/toBytes.js'\nimport { type ToHexErrorType, toHex } from '../encoding/toHex.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type Sha256Hash<TTo extends To> =\n  | (TTo extends 'bytes' ? ByteArray : never)\n  | (TTo extends 'hex' ? Hex : never)\n\nexport type Sha256ErrorType =\n  | IsHexErrorType\n  | ToBytesErrorType\n  | ToHexErrorType\n  | ErrorType\n\nexport function sha256<TTo extends To = 'hex'>(\n  value: Hex | ByteArray,\n  to_?: TTo | undefined,\n): Sha256Hash<TTo> {\n  const to = to_ || 'hex'\n  const bytes = noble_sha256(\n    isHex(value, { strict: false }) ? toBytes(value) : value,\n  )\n  if (to === 'bytes') return bytes as Sha256Hash<TTo>\n  return toHex(bytes) as Sha256Hash<TTo>\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\nimport { type Sha256ErrorType, sha256 } from '../hash/sha256.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type CommitmentToVersionedHashParameters<\n  commitment extends Uint8Array | Hex = Uint8Array | Hex,\n  to extends To | undefined = undefined,\n> = {\n  /** Commitment from blob. */\n  commitment: commitment | Uint8Array | Hex\n  /** Return type. */\n  to?: to | To | undefined\n  /** Version to tag onto the hash. */\n  version?: number | undefined\n}\n\nexport type CommitmentToVersionedHashReturnType<to extends To> =\n  | (to extends 'bytes' ? ByteArray : never)\n  | (to extends 'hex' ? Hex : never)\n\nexport type CommitmentToVersionedHashErrorType =\n  | Sha256ErrorType\n  | BytesToHexErrorType\n  | ErrorType\n\n/**\n * Transform a commitment to it's versioned hash.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   commitmentToVersionedHash,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const [commitment] = blobsToCommitments({ blobs, kzg })\n * const versionedHash = commitmentToVersionedHash({ commitment })\n * ```\n */\nexport function commitmentToVersionedHash<\n  const commitment extends Hex | ByteArray,\n  to extends To =\n    | (commitment extends Hex ? 'hex' : never)\n    | (commitment extends ByteArray ? 'bytes' : never),\n>(\n  parameters: CommitmentToVersionedHashParameters<commitment, to>,\n): CommitmentToVersionedHashReturnType<to> {\n  const { commitment, version = 1 } = parameters\n  const to = parameters.to ?? (typeof commitment === 'string' ? 'hex' : 'bytes')\n\n  const versionedHash = sha256(commitment, 'bytes')\n  versionedHash.set([version], 0)\n  return (\n    to === 'bytes' ? versionedHash : bytesToHex(versionedHash)\n  ) as CommitmentToVersionedHashReturnType<to>\n}\n","// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\n\n/** Blob limit per transaction. */\nexport const blobsPerTransaction = 6\n\n/** The number of bytes in a BLS scalar field element. */\nexport const bytesPerFieldElement = 32\n\n/** The number of field elements in a blob. */\nexport const fieldElementsPerBlob = 4096\n\n/** The number of bytes in a blob. */\nexport const bytesPerBlob = bytesPerFieldElement * fieldElementsPerBlob\n\n/** Blob bytes limit per transaction. */\nexport const maxBytesPerTransaction =\n  bytesPerBlob * blobsPerTransaction -\n  // terminator byte (0x80).\n  1 -\n  // zero byte (0x00) appended to each field element.\n  1 * fieldElementsPerBlob * blobsPerTransaction\n","// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\n\n/** The number of bytes in a KZG commitment. */\nexport const bytesPerCommitment = 48\n\n/** The number of bytes in a KZG proof. */\nexport const bytesPerProof = 48\n\nexport const versionedHashVersionKzg = 1\n","import { versionedHashVersionKzg } from '../constants/kzg.js'\nimport type { Hash } from '../types/misc.js'\n\nimport { BaseError } from './base.js'\n\nexport type BlobSizeTooLargeErrorType = BlobSizeTooLargeError & {\n  name: 'BlobSizeTooLargeError'\n}\nexport class BlobSizeTooLargeError extends BaseError {\n  override name = 'BlobSizeTooLargeError'\n  constructor({ maxSize, size }: { maxSize: number; size: number }) {\n    super('Blob size is too large.', {\n      metaMessages: [`Max: ${maxSize} bytes`, `Given: ${size} bytes`],\n    })\n  }\n}\n\nexport type EmptyBlobErrorType = EmptyBlobError & {\n  name: 'EmptyBlobError'\n}\nexport class EmptyBlobError extends BaseError {\n  override name = 'EmptyBlobError'\n  constructor() {\n    super('Blob data must not be empty.')\n  }\n}\n\nexport type InvalidVersionedHashSizeErrorType =\n  InvalidVersionedHashSizeError & {\n    name: 'InvalidVersionedHashSizeError'\n  }\nexport class InvalidVersionedHashSizeError extends BaseError {\n  override name = 'InvalidVersionedHashSizeError'\n  constructor({\n    hash,\n    size,\n  }: {\n    hash: Hash\n    size: number\n  }) {\n    super(`Versioned hash \"${hash}\" size is invalid.`, {\n      metaMessages: ['Expected: 32', `Received: ${size}`],\n    })\n  }\n}\n\nexport type InvalidVersionedHashVersionErrorType =\n  InvalidVersionedHashVersionError & {\n    name: 'InvalidVersionedHashVersionError'\n  }\nexport class InvalidVersionedHashVersionError extends BaseError {\n  override name = 'InvalidVersionedHashVersionError'\n  constructor({\n    hash,\n    version,\n  }: {\n    hash: Hash\n    version: number\n  }) {\n    super(`Versioned hash \"${hash}\" version is invalid.`, {\n      metaMessages: [\n        `Expected: ${versionedHashVersionKzg}`,\n        `Received: ${version}`,\n      ],\n    })\n  }\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { BlobSidecars } from '../../types/eip4844.js'\nimport type { Kzg } from '../../types/kzg.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport type { OneOf } from '../../types/utils.js'\nimport {\n  type BlobsToCommitmentsErrorType,\n  blobsToCommitments,\n} from './blobsToCommitments.js'\nimport { blobsToProofs, type blobsToProofsErrorType } from './blobsToProofs.js'\nimport { type ToBlobsErrorType, toBlobs } from './toBlobs.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type ToBlobSidecarsParameters<\n  data extends Hex | ByteArray | undefined = undefined,\n  blobs extends readonly Hex[] | readonly ByteArray[] | undefined = undefined,\n  to extends To =\n    | (blobs extends readonly Hex[] ? 'hex' : never)\n    | (blobs extends readonly ByteArray[] ? 'bytes' : never),\n  ///\n  _blobsType =\n    | (blobs extends readonly Hex[] ? readonly Hex[] : never)\n    | (blobs extends readonly ByteArray[] ? readonly ByteArray[] : never),\n> = {\n  /** Return type. */\n  to?: to | To | undefined\n} & OneOf<\n  | {\n      /** Data to transform into blobs. */\n      data: data | Hex | ByteArray\n      /** KZG implementation. */\n      kzg: Kzg\n    }\n  | {\n      /** Blobs. */\n      blobs: blobs | readonly Hex[] | readonly ByteArray[]\n      /** Commitment for each blob. */\n      commitments: _blobsType | readonly Hex[] | readonly ByteArray[]\n      /** Proof for each blob. */\n      proofs: _blobsType | readonly Hex[] | readonly ByteArray[]\n    }\n>\n\nexport type ToBlobSidecarsReturnType<to extends To> =\n  | (to extends 'bytes' ? BlobSidecars<ByteArray> : never)\n  | (to extends 'hex' ? BlobSidecars<Hex> : never)\n\nexport type ToBlobSidecarsErrorType =\n  | BlobsToCommitmentsErrorType\n  | ToBlobsErrorType\n  | blobsToProofsErrorType\n  | ErrorType\n\n/**\n * Transforms arbitrary data (or blobs, commitments, & proofs) into a sidecar array.\n *\n * @example\n * ```ts\n * import { toBlobSidecars, stringToHex } from 'viem'\n *\n * const sidecars = toBlobSidecars({ data: stringToHex('hello world') })\n * ```\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   toBlobs,\n *   blobsToProofs,\n *   toBlobSidecars,\n *   stringToHex\n * } from 'viem'\n *\n * const blobs = toBlobs({ data: stringToHex('hello world') })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const proofs = blobsToProofs({ blobs, commitments, kzg })\n *\n * const sidecars = toBlobSidecars({ blobs, commitments, proofs })\n * ```\n */\nexport function toBlobSidecars<\n  const data extends Hex | ByteArray | undefined = undefined,\n  const blobs extends\n    | readonly Hex[]\n    | readonly ByteArray[]\n    | undefined = undefined,\n  to extends To =\n    | (data extends Hex ? 'hex' : never)\n    | (data extends ByteArray ? 'bytes' : never)\n    | (blobs extends readonly Hex[] ? 'hex' : never)\n    | (blobs extends readonly ByteArray[] ? 'bytes' : never),\n>(\n  parameters: ToBlobSidecarsParameters<data, blobs, to>,\n): ToBlobSidecarsReturnType<to> {\n  const { data, kzg, to } = parameters\n  const blobs = parameters.blobs ?? toBlobs({ data: data!, to })\n  const commitments =\n    parameters.commitments ?? blobsToCommitments({ blobs, kzg: kzg!, to })\n  const proofs =\n    parameters.proofs ?? blobsToProofs({ blobs, commitments, kzg: kzg!, to })\n\n  const sidecars: BlobSidecars = []\n  for (let i = 0; i < blobs.length; i++)\n    sidecars.push({\n      blob: blobs[i],\n      commitment: commitments[i],\n      proof: proofs[i],\n    })\n\n  return sidecars as ToBlobSidecarsReturnType<to>\n}\n","import {\n  bytesPerBlob,\n  bytesPerFieldElement,\n  fieldElementsPerBlob,\n  maxBytesPerTransaction,\n} from '../../constants/blob.js'\nimport {\n  BlobSizeTooLargeError,\n  type BlobSizeTooLargeErrorType,\n  EmptyBlobError,\n  type EmptyBlobErrorType,\n} from '../../errors/blob.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { createCursor } from '../cursor.js'\nimport { type SizeErrorType, size } from '../data/size.js'\nimport { type HexToBytesErrorType, hexToBytes } from '../encoding/toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type ToBlobsParameters<\n  data extends Hex | ByteArray = Hex | ByteArray,\n  to extends To | undefined = undefined,\n> = {\n  /** Data to transform to a blob. */\n  data: data | Hex | ByteArray\n  /** Return type. */\n  to?: to | To | undefined\n}\n\nexport type ToBlobsReturnType<to extends To> =\n  | (to extends 'bytes' ? readonly ByteArray[] : never)\n  | (to extends 'hex' ? readonly Hex[] : never)\n\nexport type ToBlobsErrorType =\n  | BlobSizeTooLargeErrorType\n  | BytesToHexErrorType\n  | EmptyBlobErrorType\n  | HexToBytesErrorType\n  | SizeErrorType\n  | ErrorType\n\n/**\n * Transforms arbitrary data to blobs.\n *\n * @example\n * ```ts\n * import { toBlobs, stringToHex } from 'viem'\n *\n * const blobs = toBlobs({ data: stringToHex('hello world') })\n * ```\n */\nexport function toBlobs<\n  const data extends Hex | ByteArray,\n  to extends To =\n    | (data extends Hex ? 'hex' : never)\n    | (data extends ByteArray ? 'bytes' : never),\n>(parameters: ToBlobsParameters<data, to>): ToBlobsReturnType<to> {\n  const to =\n    parameters.to ?? (typeof parameters.data === 'string' ? 'hex' : 'bytes')\n  const data = (\n    typeof parameters.data === 'string'\n      ? hexToBytes(parameters.data)\n      : parameters.data\n  ) as ByteArray\n\n  const size_ = size(data)\n  if (!size_) throw new EmptyBlobError()\n  if (size_ > maxBytesPerTransaction)\n    throw new BlobSizeTooLargeError({\n      maxSize: maxBytesPerTransaction,\n      size: size_,\n    })\n\n  const blobs = []\n\n  let active = true\n  let position = 0\n  while (active) {\n    const blob = createCursor(new Uint8Array(bytesPerBlob))\n\n    let size = 0\n    while (size < fieldElementsPerBlob) {\n      const bytes = data.slice(position, position + (bytesPerFieldElement - 1))\n\n      // Push a zero byte so the field element doesn't overflow the BLS modulus.\n      blob.pushByte(0x00)\n\n      // Push the current segment of data bytes.\n      blob.pushBytes(bytes)\n\n      // If we detect that the current segment of data bytes is less than 31 bytes,\n      // we can stop processing and push a terminator byte to indicate the end of the blob.\n      if (bytes.length < 31) {\n        blob.pushByte(0x80)\n        active = false\n        break\n      }\n\n      size++\n      position += 31\n    }\n\n    blobs.push(blob)\n  }\n\n  return (\n    to === 'bytes'\n      ? blobs.map((x) => x.bytes)\n      : blobs.map((x) => bytesToHex(x.bytes))\n  ) as any\n}\n","import type { Chain } from '../types/chain.js'\n\nimport { BaseError } from './base.js'\n\nexport type ChainDoesNotSupportContractErrorType =\n  ChainDoesNotSupportContract & {\n    name: 'ChainDoesNotSupportContract'\n  }\nexport class ChainDoesNotSupportContract extends BaseError {\n  override name = 'ChainDoesNotSupportContract'\n  constructor({\n    blockNumber,\n    chain,\n    contract,\n  }: {\n    blockNumber?: bigint | undefined\n    chain: Chain\n    contract: { name: string; blockCreated?: number | undefined }\n  }) {\n    super(\n      `Chain \"${chain.name}\" does not support contract \"${contract.name}\".`,\n      {\n        metaMessages: [\n          'This could be due to any of the following:',\n          ...(blockNumber &&\n          contract.blockCreated &&\n          contract.blockCreated > blockNumber\n            ? [\n                `- The contract \"${contract.name}\" was not deployed until block ${contract.blockCreated} (current block ${blockNumber}).`,\n              ]\n            : [\n                `- The chain does not have the contract \"${contract.name}\" configured.`,\n              ]),\n        ],\n      },\n    )\n  }\n}\n\nexport type ChainMismatchErrorType = ChainMismatchError & {\n  name: 'ChainMismatchError'\n}\nexport class ChainMismatchError extends BaseError {\n  override name = 'ChainMismatchError'\n\n  constructor({\n    chain,\n    currentChainId,\n  }: {\n    chain: Chain\n    currentChainId: number\n  }) {\n    super(\n      `The current chain of the wallet (id: ${currentChainId}) does not match the target chain for the transaction (id: ${chain.id} – ${chain.name}).`,\n      {\n        metaMessages: [\n          `Current Chain ID:  ${currentChainId}`,\n          `Expected Chain ID: ${chain.id} – ${chain.name}`,\n        ],\n      },\n    )\n  }\n}\n\nexport type ChainNotFoundErrorType = ChainNotFoundError & {\n  name: 'ChainNotFoundError'\n}\nexport class ChainNotFoundError extends BaseError {\n  override name = 'ChainNotFoundError'\n\n  constructor() {\n    super(\n      [\n        'No chain was provided to the request.',\n        'Please provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient.',\n      ].join('\\n'),\n    )\n  }\n}\n\nexport type ClientChainNotConfiguredErrorType =\n  ClientChainNotConfiguredError & {\n    name: 'ClientChainNotConfiguredError'\n  }\nexport class ClientChainNotConfiguredError extends BaseError {\n  override name = 'ClientChainNotConfiguredError'\n\n  constructor() {\n    super('No chain was provided to the Client.')\n  }\n}\n\nexport type InvalidChainIdErrorType = InvalidChainIdError & {\n  name: 'InvalidChainIdError'\n}\nexport class InvalidChainIdError extends BaseError {\n  override name = 'InvalidChainIdError'\n\n  constructor({ chainId }: { chainId?: number | undefined }) {\n    super(\n      typeof chainId === 'number'\n        ? `Chain ID \"${chainId}\" is invalid.`\n        : 'Chain ID is invalid.',\n    )\n  }\n}\n","import { formatGwei } from '../utils/unit/formatGwei.js'\n\nimport { BaseError } from './base.js'\n\n/**\n * geth:    https://github.com/ethereum/go-ethereum/blob/master/core/error.go\n *          https://github.com/ethereum/go-ethereum/blob/master/core/types/transaction.go#L34-L41\n *\n * erigon:  https://github.com/ledgerwatch/erigon/blob/master/core/error.go\n *          https://github.com/ledgerwatch/erigon/blob/master/core/types/transaction.go#L41-L46\n *\n * anvil:   https://github.com/foundry-rs/foundry/blob/master/anvil/src/eth/error.rs#L108\n */\nexport type ExecutionRevertedErrorType = ExecutionRevertedError & {\n  code: 3\n  name: 'ExecutionRevertedError'\n}\nexport class ExecutionRevertedError extends BaseError {\n  static code = 3\n  static nodeMessage = /execution reverted/\n\n  override name = 'ExecutionRevertedError'\n\n  constructor({\n    cause,\n    message,\n  }: { cause?: BaseError | undefined; message?: string | undefined } = {}) {\n    const reason = message\n      ?.replace('execution reverted: ', '')\n      ?.replace('execution reverted', '')\n    super(\n      `Execution reverted ${\n        reason ? `with reason: ${reason}` : 'for an unknown reason'\n      }.`,\n      {\n        cause,\n      },\n    )\n  }\n}\n\nexport type FeeCapTooHighErrorType = FeeCapTooHighError & {\n  name: 'FeeCapTooHighError'\n}\nexport class FeeCapTooHighError extends BaseError {\n  static nodeMessage =\n    /max fee per gas higher than 2\\^256-1|fee cap higher than 2\\^256-1/\n  override name = 'FeeCapTooHigh'\n  constructor({\n    cause,\n    maxFeePerGas,\n  }: {\n    cause?: BaseError | undefined\n    maxFeePerGas?: bigint | undefined\n  } = {}) {\n    super(\n      `The fee cap (\\`maxFeePerGas\\`${\n        maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''\n      }) cannot be higher than the maximum allowed value (2^256-1).`,\n      {\n        cause,\n      },\n    )\n  }\n}\n\nexport type FeeCapTooLowErrorType = FeeCapTooLowError & {\n  name: 'FeeCapTooLowError'\n}\nexport class FeeCapTooLowError extends BaseError {\n  static nodeMessage =\n    /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/\n  override name = 'FeeCapTooLow'\n  constructor({\n    cause,\n    maxFeePerGas,\n  }: {\n    cause?: BaseError | undefined\n    maxFeePerGas?: bigint | undefined\n  } = {}) {\n    super(\n      `The fee cap (\\`maxFeePerGas\\`${\n        maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)}` : ''\n      } gwei) cannot be lower than the block base fee.`,\n      {\n        cause,\n      },\n    )\n  }\n}\n\nexport type NonceTooHighErrorType = NonceTooHighError & {\n  name: 'NonceTooHighError'\n}\nexport class NonceTooHighError extends BaseError {\n  static nodeMessage = /nonce too high/\n  override name = 'NonceTooHighError'\n  constructor({\n    cause,\n    nonce,\n  }: { cause?: BaseError | undefined; nonce?: number | undefined } = {}) {\n    super(\n      `Nonce provided for the transaction ${\n        nonce ? `(${nonce}) ` : ''\n      }is higher than the next one expected.`,\n      { cause },\n    )\n  }\n}\n\nexport type NonceTooLowErrorType = NonceTooLowError & {\n  name: 'NonceTooLowError'\n}\nexport class NonceTooLowError extends BaseError {\n  static nodeMessage =\n    /nonce too low|transaction already imported|already known/\n  override name = 'NonceTooLowError'\n  constructor({\n    cause,\n    nonce,\n  }: { cause?: BaseError | undefined; nonce?: number | undefined } = {}) {\n    super(\n      [\n        `Nonce provided for the transaction ${\n          nonce ? `(${nonce}) ` : ''\n        }is lower than the current nonce of the account.`,\n        'Try increasing the nonce or find the latest nonce with `getTransactionCount`.',\n      ].join('\\n'),\n      { cause },\n    )\n  }\n}\n\nexport type NonceMaxValueErrorType = NonceMaxValueError & {\n  name: 'NonceMaxValueError'\n}\nexport class NonceMaxValueError extends BaseError {\n  static nodeMessage = /nonce has max value/\n  override name = 'NonceMaxValueError'\n  constructor({\n    cause,\n    nonce,\n  }: { cause?: BaseError | undefined; nonce?: number | undefined } = {}) {\n    super(\n      `Nonce provided for the transaction ${\n        nonce ? `(${nonce}) ` : ''\n      }exceeds the maximum allowed nonce.`,\n      { cause },\n    )\n  }\n}\n\nexport type InsufficientFundsErrorType = InsufficientFundsError & {\n  name: 'InsufficientFundsError'\n}\nexport class InsufficientFundsError extends BaseError {\n  static nodeMessage = /insufficient funds/\n  override name = 'InsufficientFundsError'\n  constructor({ cause }: { cause?: BaseError | undefined } = {}) {\n    super(\n      [\n        'The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.',\n      ].join('\\n'),\n      {\n        cause,\n        metaMessages: [\n          'This error could arise when the account does not have enough funds to:',\n          ' - pay for the total gas fee,',\n          ' - pay for the value to send.',\n          ' ',\n          'The cost of the transaction is calculated as `gas * gas fee + value`, where:',\n          ' - `gas` is the amount of gas needed for transaction to execute,',\n          ' - `gas fee` is the gas fee,',\n          ' - `value` is the amount of ether to send to the recipient.',\n        ],\n      },\n    )\n  }\n}\n\nexport type IntrinsicGasTooHighErrorType = IntrinsicGasTooHighError & {\n  name: 'IntrinsicGasTooHighError'\n}\nexport class IntrinsicGasTooHighError extends BaseError {\n  static nodeMessage = /intrinsic gas too high|gas limit reached/\n  override name = 'IntrinsicGasTooHighError'\n  constructor({\n    cause,\n    gas,\n  }: { cause?: BaseError | undefined; gas?: bigint | undefined } = {}) {\n    super(\n      `The amount of gas ${\n        gas ? `(${gas}) ` : ''\n      }provided for the transaction exceeds the limit allowed for the block.`,\n      {\n        cause,\n      },\n    )\n  }\n}\n\nexport type IntrinsicGasTooLowErrorType = IntrinsicGasTooLowError & {\n  name: 'IntrinsicGasTooLowError'\n}\nexport class IntrinsicGasTooLowError extends BaseError {\n  static nodeMessage = /intrinsic gas too low/\n  override name = 'IntrinsicGasTooLowError'\n  constructor({\n    cause,\n    gas,\n  }: { cause?: BaseError | undefined; gas?: bigint | undefined } = {}) {\n    super(\n      `The amount of gas ${\n        gas ? `(${gas}) ` : ''\n      }provided for the transaction is too low.`,\n      {\n        cause,\n      },\n    )\n  }\n}\n\nexport type TransactionTypeNotSupportedErrorType =\n  TransactionTypeNotSupportedError & {\n    name: 'TransactionTypeNotSupportedError'\n  }\nexport class TransactionTypeNotSupportedError extends BaseError {\n  static nodeMessage = /transaction type not valid/\n  override name = 'TransactionTypeNotSupportedError'\n  constructor({ cause }: { cause?: BaseError | undefined }) {\n    super('The transaction type is not supported for this chain.', {\n      cause,\n    })\n  }\n}\n\nexport type TipAboveFeeCapErrorType = TipAboveFeeCapError & {\n  name: 'TipAboveFeeCapError'\n}\nexport class TipAboveFeeCapError extends BaseError {\n  static nodeMessage =\n    /max priority fee per gas higher than max fee per gas|tip higher than fee cap/\n  override name = 'TipAboveFeeCapError'\n  constructor({\n    cause,\n    maxPriorityFeePerGas,\n    maxFeePerGas,\n  }: {\n    cause?: BaseError | undefined\n    maxPriorityFeePerGas?: bigint | undefined\n    maxFeePerGas?: bigint | undefined\n  } = {}) {\n    super(\n      [\n        `The provided tip (\\`maxPriorityFeePerGas\\`${\n          maxPriorityFeePerGas\n            ? ` = ${formatGwei(maxPriorityFeePerGas)} gwei`\n            : ''\n        }) cannot be higher than the fee cap (\\`maxFeePerGas\\`${\n          maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''\n        }).`,\n      ].join('\\n'),\n      {\n        cause,\n      },\n    )\n  }\n}\n\nexport type UnknownNodeErrorType = UnknownNodeError & {\n  name: 'UnknownNodeError'\n}\nexport class UnknownNodeError extends BaseError {\n  override name = 'UnknownNodeError'\n\n  constructor({ cause }: { cause?: BaseError | undefined }) {\n    super(`An error occurred while executing: ${cause?.shortMessage}`, {\n      cause,\n    })\n  }\n}\n","import {\n  SliceOffsetOutOfBoundsError,\n  type SliceOffsetOutOfBoundsErrorType,\n} from '../../errors/data.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\nimport { type IsHexErrorType, isHex } from './isHex.js'\nimport { type SizeErrorType, size } from './size.js'\n\nexport type SliceReturnType<TValue extends ByteArray | Hex> = TValue extends Hex\n  ? Hex\n  : ByteArray\n\nexport type SliceErrorType =\n  | IsHexErrorType\n  | SliceBytesErrorType\n  | SliceHexErrorType\n  | ErrorType\n\n/**\n * @description Returns a section of the hex or byte array given a start/end bytes offset.\n *\n * @param value The hex or byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function slice<TValue extends ByteArray | Hex>(\n  value: TValue,\n  start?: number | undefined,\n  end?: number | undefined,\n  { strict }: { strict?: boolean | undefined } = {},\n): SliceReturnType<TValue> {\n  if (isHex(value, { strict: false }))\n    return sliceHex(value as Hex, start, end, {\n      strict,\n    }) as SliceReturnType<TValue>\n  return sliceBytes(value as ByteArray, start, end, {\n    strict,\n  }) as SliceReturnType<TValue>\n}\n\nexport type AssertStartOffsetErrorType =\n  | SliceOffsetOutOfBoundsErrorType\n  | SizeErrorType\n  | ErrorType\n\nfunction assertStartOffset(value: Hex | ByteArray, start?: number | undefined) {\n  if (typeof start === 'number' && start > 0 && start > size(value) - 1)\n    throw new SliceOffsetOutOfBoundsError({\n      offset: start,\n      position: 'start',\n      size: size(value),\n    })\n}\n\nexport type AssertEndOffsetErrorType =\n  | SliceOffsetOutOfBoundsErrorType\n  | SizeErrorType\n  | ErrorType\n\nfunction assertEndOffset(\n  value: Hex | ByteArray,\n  start?: number | undefined,\n  end?: number | undefined,\n) {\n  if (\n    typeof start === 'number' &&\n    typeof end === 'number' &&\n    size(value) !== end - start\n  ) {\n    throw new SliceOffsetOutOfBoundsError({\n      offset: end,\n      position: 'end',\n      size: size(value),\n    })\n  }\n}\n\nexport type SliceBytesErrorType =\n  | AssertStartOffsetErrorType\n  | AssertEndOffsetErrorType\n  | ErrorType\n\n/**\n * @description Returns a section of the byte array given a start/end bytes offset.\n *\n * @param value The byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceBytes(\n  value_: ByteArray,\n  start?: number | undefined,\n  end?: number | undefined,\n  { strict }: { strict?: boolean | undefined } = {},\n): ByteArray {\n  assertStartOffset(value_, start)\n  const value = value_.slice(start, end)\n  if (strict) assertEndOffset(value, start, end)\n  return value\n}\n\nexport type SliceHexErrorType =\n  | AssertStartOffsetErrorType\n  | AssertEndOffsetErrorType\n  | ErrorType\n\n/**\n * @description Returns a section of the hex value given a start/end bytes offset.\n *\n * @param value The hex value to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceHex(\n  value_: Hex,\n  start?: number | undefined,\n  end?: number | undefined,\n  { strict }: { strict?: boolean | undefined } = {},\n): Hex {\n  assertStartOffset(value_, start)\n  const value = `0x${value_\n    .replace('0x', '')\n    .slice((start ?? 0) * 2, (end ?? value_.length) * 2)}` as const\n  if (strict) assertEndOffset(value, start, end)\n  return value\n}\n","import { versionedHashVersionKzg } from '../../constants/kzg.js'\nimport {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../../errors/address.js'\nimport { BaseError, type BaseErrorType } from '../../errors/base.js'\nimport {\n  EmptyBlobError,\n  type EmptyBlobErrorType,\n  InvalidVersionedHashSizeError,\n  type InvalidVersionedHashSizeErrorType,\n  InvalidVersionedHashVersionError,\n  type InvalidVersionedHashVersionErrorType,\n} from '../../errors/blob.js'\nimport {\n  InvalidChainIdError,\n  type InvalidChainIdErrorType,\n} from '../../errors/chain.js'\nimport {\n  FeeCapTooHighError,\n  type FeeCapTooHighErrorType,\n  TipAboveFeeCapError,\n  type TipAboveFeeCapErrorType,\n} from '../../errors/node.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  TransactionSerializableEIP1559,\n  TransactionSerializableEIP2930,\n  TransactionSerializableEIP4844,\n  TransactionSerializableLegacy,\n} from '../../types/transaction.js'\nimport { type IsAddressErrorType, isAddress } from '../address/isAddress.js'\nimport { size } from '../data/size.js'\nimport { slice } from '../data/slice.js'\nimport { hexToNumber } from '../encoding/fromHex.js'\n\nexport type AssertTransactionEIP4844ErrorType =\n  | AssertTransactionEIP1559ErrorType\n  | EmptyBlobErrorType\n  | InvalidVersionedHashSizeErrorType\n  | InvalidVersionedHashVersionErrorType\n  | ErrorType\n\nexport function assertTransactionEIP4844(\n  transaction: TransactionSerializableEIP4844,\n) {\n  const { blobVersionedHashes } = transaction\n  if (blobVersionedHashes) {\n    if (blobVersionedHashes.length === 0) throw new EmptyBlobError()\n    for (const hash of blobVersionedHashes) {\n      const size_ = size(hash)\n      const version = hexToNumber(slice(hash, 0, 1))\n      if (size_ !== 32)\n        throw new InvalidVersionedHashSizeError({ hash, size: size_ })\n      if (version !== versionedHashVersionKzg)\n        throw new InvalidVersionedHashVersionError({\n          hash,\n          version,\n        })\n    }\n  }\n  assertTransactionEIP1559(transaction as {} as TransactionSerializableEIP1559)\n}\n\nexport type AssertTransactionEIP1559ErrorType =\n  | BaseErrorType\n  | IsAddressErrorType\n  | InvalidAddressErrorType\n  | InvalidChainIdErrorType\n  | FeeCapTooHighErrorType\n  | TipAboveFeeCapErrorType\n  | ErrorType\n\nexport function assertTransactionEIP1559(\n  transaction: TransactionSerializableEIP1559,\n) {\n  const { chainId, maxPriorityFeePerGas, maxFeePerGas, to } = transaction\n  if (chainId <= 0) throw new InvalidChainIdError({ chainId })\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (maxFeePerGas && maxFeePerGas > 2n ** 256n - 1n)\n    throw new FeeCapTooHighError({ maxFeePerGas })\n  if (\n    maxPriorityFeePerGas &&\n    maxFeePerGas &&\n    maxPriorityFeePerGas > maxFeePerGas\n  )\n    throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas })\n}\n\nexport type AssertTransactionEIP2930ErrorType =\n  | BaseErrorType\n  | IsAddressErrorType\n  | InvalidAddressErrorType\n  | InvalidChainIdErrorType\n  | FeeCapTooHighErrorType\n  | ErrorType\n\nexport function assertTransactionEIP2930(\n  transaction: TransactionSerializableEIP2930,\n) {\n  const { chainId, maxPriorityFeePerGas, gasPrice, maxFeePerGas, to } =\n    transaction\n  if (chainId <= 0) throw new InvalidChainIdError({ chainId })\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (maxPriorityFeePerGas || maxFeePerGas)\n    throw new BaseError(\n      '`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid EIP-2930 Transaction attribute.',\n    )\n  if (gasPrice && gasPrice > 2n ** 256n - 1n)\n    throw new FeeCapTooHighError({ maxFeePerGas: gasPrice })\n}\n\nexport type AssertTransactionLegacyErrorType =\n  | BaseErrorType\n  | IsAddressErrorType\n  | InvalidAddressErrorType\n  | InvalidChainIdErrorType\n  | FeeCapTooHighErrorType\n  | ErrorType\n\nexport function assertTransactionLegacy(\n  transaction: TransactionSerializableLegacy,\n) {\n  const {\n    chainId,\n    maxPriorityFeePerGas,\n    gasPrice,\n    maxFeePerGas,\n    to,\n    accessList,\n  } = transaction\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (typeof chainId !== 'undefined' && chainId <= 0)\n    throw new InvalidChainIdError({ chainId })\n  if (maxPriorityFeePerGas || maxFeePerGas)\n    throw new BaseError(\n      '`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid Legacy Transaction attribute.',\n    )\n  if (gasPrice && gasPrice > 2n ** 256n - 1n)\n    throw new FeeCapTooHighError({ maxFeePerGas: gasPrice })\n  if (accessList)\n    throw new BaseError(\n      '`accessList` is not a valid Legacy Transaction attribute.',\n    )\n}\n","import {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../../errors/address.js'\nimport {\n  InvalidStorageKeySizeError,\n  type InvalidStorageKeySizeErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { AccessList } from '../../types/transaction.js'\nimport { type IsAddressErrorType, isAddress } from '../address/isAddress.js'\nimport type { RecursiveArray } from '../encoding/toRlp.js'\n\nexport type SerializeAccessListErrorType =\n  | InvalidStorageKeySizeErrorType\n  | InvalidAddressErrorType\n  | IsAddressErrorType\n  | ErrorType\n\n/*\n * Serialize an  EIP-2930 access list\n * @remarks\n * Use to create a transaction serializer with support for EIP-2930 access lists\n *\n * @param accessList - Array of objects of address and arrays of Storage Keys\n * @throws InvalidAddressError, InvalidStorageKeySizeError\n * @returns Array of hex strings\n */\nexport function serializeAccessList(\n  accessList?: AccessList | undefined,\n): RecursiveArray<Hex> {\n  if (!accessList || accessList.length === 0) return []\n\n  const serializedAccessList = []\n  for (let i = 0; i < accessList.length; i++) {\n    const { address, storageKeys } = accessList[i]\n\n    for (let j = 0; j < storageKeys.length; j++) {\n      if (storageKeys[j].length - 2 !== 64) {\n        throw new InvalidStorageKeySizeError({ storageKey: storageKeys[j] })\n      }\n    }\n\n    if (!isAddress(address, { strict: false })) {\n      throw new InvalidAddressError({ address })\n    }\n\n    serializedAccessList.push([address, storageKeys])\n  }\n  return serializedAccessList\n}\n","import {\n  InvalidLegacyVError,\n  type InvalidLegacyVErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  ByteArray,\n  Hex,\n  Signature,\n  SignatureLegacy,\n} from '../../types/misc.js'\nimport type {\n  TransactionSerializable,\n  TransactionSerializableEIP1559,\n  TransactionSerializableEIP2930,\n  TransactionSerializableEIP4844,\n  TransactionSerializableGeneric,\n  TransactionSerializableLegacy,\n  TransactionSerialized,\n  TransactionSerializedEIP1559,\n  TransactionSerializedEIP2930,\n  TransactionSerializedEIP4844,\n  TransactionSerializedLegacy,\n  TransactionType,\n} from '../../types/transaction.js'\nimport type { OneOf } from '../../types/utils.js'\nimport {\n  type BlobsToCommitmentsErrorType,\n  blobsToCommitments,\n} from '../blob/blobsToCommitments.js'\nimport {\n  blobsToProofs,\n  type blobsToProofsErrorType,\n} from '../blob/blobsToProofs.js'\nimport {\n  type CommitmentsToVersionedHashesErrorType,\n  commitmentsToVersionedHashes,\n} from '../blob/commitmentsToVersionedHashes.js'\nimport {\n  type ToBlobSidecarsErrorType,\n  toBlobSidecars,\n} from '../blob/toBlobSidecars.js'\nimport { type ConcatHexErrorType, concatHex } from '../data/concat.js'\nimport { trim } from '../data/trim.js'\nimport { type ToHexErrorType, bytesToHex, toHex } from '../encoding/toHex.js'\nimport { type ToRlpErrorType, toRlp } from '../encoding/toRlp.js'\n\nimport {\n  type AssertTransactionEIP1559ErrorType,\n  type AssertTransactionEIP2930ErrorType,\n  type AssertTransactionEIP4844ErrorType,\n  type AssertTransactionLegacyErrorType,\n  assertTransactionEIP1559,\n  assertTransactionEIP2930,\n  assertTransactionEIP4844,\n  assertTransactionLegacy,\n} from './assertTransaction.js'\nimport {\n  type GetTransactionType,\n  type GetTransationTypeErrorType,\n  getTransactionType,\n} from './getTransactionType.js'\nimport {\n  type SerializeAccessListErrorType,\n  serializeAccessList,\n} from './serializeAccessList.js'\n\nexport type SerializedTransactionReturnType<\n  transaction extends TransactionSerializable = TransactionSerializable,\n  ///\n  _transactionType extends TransactionType = GetTransactionType<transaction>,\n> = TransactionSerialized<_transactionType>\n\nexport type SerializeTransactionFn<\n  transaction extends TransactionSerializableGeneric = TransactionSerializable,\n  ///\n  _transactionType extends TransactionType = never,\n> = typeof serializeTransaction<\n  OneOf<TransactionSerializable | transaction>,\n  _transactionType\n>\n\nexport type SerializeTransactionErrorType =\n  | GetTransationTypeErrorType\n  | SerializeTransactionEIP1559ErrorType\n  | SerializeTransactionEIP2930ErrorType\n  | SerializeTransactionEIP4844ErrorType\n  | SerializeTransactionLegacyErrorType\n  | ErrorType\n\nexport function serializeTransaction<\n  const transaction extends TransactionSerializable,\n  ///\n  _transactionType extends TransactionType = GetTransactionType<transaction>,\n>(\n  transaction: transaction,\n  signature?: Signature | undefined,\n): SerializedTransactionReturnType<transaction, _transactionType> {\n  const type = getTransactionType(transaction) as GetTransactionType\n\n  if (type === 'eip1559')\n    return serializeTransactionEIP1559(\n      transaction as TransactionSerializableEIP1559,\n      signature,\n    ) as SerializedTransactionReturnType<transaction>\n\n  if (type === 'eip2930')\n    return serializeTransactionEIP2930(\n      transaction as TransactionSerializableEIP2930,\n      signature,\n    ) as SerializedTransactionReturnType<transaction>\n\n  if (type === 'eip4844')\n    return serializeTransactionEIP4844(\n      transaction as TransactionSerializableEIP4844,\n      signature,\n    ) as SerializedTransactionReturnType<transaction>\n\n  return serializeTransactionLegacy(\n    transaction as TransactionSerializableLegacy,\n    signature as SignatureLegacy,\n  ) as SerializedTransactionReturnType<transaction>\n}\n\ntype SerializeTransactionEIP4844ErrorType =\n  | AssertTransactionEIP4844ErrorType\n  | BlobsToCommitmentsErrorType\n  | CommitmentsToVersionedHashesErrorType\n  | blobsToProofsErrorType\n  | ToBlobSidecarsErrorType\n  | ConcatHexErrorType\n  | InvalidLegacyVErrorType\n  | ToHexErrorType\n  | ToRlpErrorType\n  | SerializeAccessListErrorType\n  | ErrorType\n\nfunction serializeTransactionEIP4844(\n  transaction: TransactionSerializableEIP4844,\n  signature?: Signature | undefined,\n): TransactionSerializedEIP4844 {\n  const {\n    chainId,\n    gas,\n    nonce,\n    to,\n    value,\n    maxFeePerBlobGas,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    accessList,\n    data,\n  } = transaction\n\n  assertTransactionEIP4844(transaction)\n\n  let blobVersionedHashes = transaction.blobVersionedHashes\n  let sidecars = transaction.sidecars\n  // If `blobs` are passed, we will need to compute the KZG commitments & proofs.\n  if (\n    transaction.blobs &&\n    (typeof blobVersionedHashes === 'undefined' ||\n      typeof sidecars === 'undefined')\n  ) {\n    const blobs = (\n      typeof transaction.blobs[0] === 'string'\n        ? transaction.blobs\n        : (transaction.blobs as ByteArray[]).map((x) => bytesToHex(x))\n    ) as Hex[]\n    const kzg = transaction.kzg!\n    const commitments = blobsToCommitments({\n      blobs,\n      kzg,\n    })\n\n    if (typeof blobVersionedHashes === 'undefined')\n      blobVersionedHashes = commitmentsToVersionedHashes({\n        commitments,\n      })\n    if (typeof sidecars === 'undefined') {\n      const proofs = blobsToProofs({ blobs, commitments, kzg })\n      sidecars = toBlobSidecars({ blobs, commitments, proofs })\n    }\n  }\n\n  const serializedAccessList = serializeAccessList(accessList)\n\n  const serializedTransaction = [\n    toHex(chainId),\n    nonce ? toHex(nonce) : '0x',\n    maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n    maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n    gas ? toHex(gas) : '0x',\n    to ?? '0x',\n    value ? toHex(value) : '0x',\n    data ?? '0x',\n    serializedAccessList,\n    maxFeePerBlobGas ? toHex(maxFeePerBlobGas) : '0x',\n    blobVersionedHashes ?? [],\n    ...toYParitySignatureArray(transaction, signature),\n  ] as const\n\n  const blobs: Hex[] = []\n  const commitments: Hex[] = []\n  const proofs: Hex[] = []\n  if (sidecars)\n    for (let i = 0; i < sidecars.length; i++) {\n      const { blob, commitment, proof } = sidecars[i]\n      blobs.push(blob)\n      commitments.push(commitment)\n      proofs.push(proof)\n    }\n\n  return concatHex([\n    '0x03',\n    sidecars\n      ? // If sidecars are enabled, envelope turns into a \"wrapper\":\n        toRlp([serializedTransaction, blobs, commitments, proofs])\n      : // If sidecars are disabled, standard envelope is used:\n        toRlp(serializedTransaction),\n  ]) as TransactionSerializedEIP4844\n}\n\ntype SerializeTransactionEIP1559ErrorType =\n  | AssertTransactionEIP1559ErrorType\n  | ConcatHexErrorType\n  | InvalidLegacyVErrorType\n  | ToHexErrorType\n  | ToRlpErrorType\n  | SerializeAccessListErrorType\n  | ErrorType\n\nfunction serializeTransactionEIP1559(\n  transaction: TransactionSerializableEIP1559,\n  signature?: Signature | undefined,\n): TransactionSerializedEIP1559 {\n  const {\n    chainId,\n    gas,\n    nonce,\n    to,\n    value,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    accessList,\n    data,\n  } = transaction\n\n  assertTransactionEIP1559(transaction)\n\n  const serializedAccessList = serializeAccessList(accessList)\n\n  const serializedTransaction = [\n    toHex(chainId),\n    nonce ? toHex(nonce) : '0x',\n    maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n    maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n    gas ? toHex(gas) : '0x',\n    to ?? '0x',\n    value ? toHex(value) : '0x',\n    data ?? '0x',\n    serializedAccessList,\n    ...toYParitySignatureArray(transaction, signature),\n  ]\n\n  return concatHex([\n    '0x02',\n    toRlp(serializedTransaction),\n  ]) as TransactionSerializedEIP1559\n}\n\ntype SerializeTransactionEIP2930ErrorType =\n  | AssertTransactionEIP2930ErrorType\n  | ConcatHexErrorType\n  | InvalidLegacyVErrorType\n  | ToHexErrorType\n  | ToRlpErrorType\n  | SerializeAccessListErrorType\n  | ErrorType\n\nfunction serializeTransactionEIP2930(\n  transaction: TransactionSerializableEIP2930,\n  signature?: Signature | undefined,\n): TransactionSerializedEIP2930 {\n  const { chainId, gas, data, nonce, to, value, accessList, gasPrice } =\n    transaction\n\n  assertTransactionEIP2930(transaction)\n\n  const serializedAccessList = serializeAccessList(accessList)\n\n  const serializedTransaction = [\n    toHex(chainId),\n    nonce ? toHex(nonce) : '0x',\n    gasPrice ? toHex(gasPrice) : '0x',\n    gas ? toHex(gas) : '0x',\n    to ?? '0x',\n    value ? toHex(value) : '0x',\n    data ?? '0x',\n    serializedAccessList,\n    ...toYParitySignatureArray(transaction, signature),\n  ]\n\n  return concatHex([\n    '0x01',\n    toRlp(serializedTransaction),\n  ]) as TransactionSerializedEIP2930\n}\n\ntype SerializeTransactionLegacyErrorType =\n  | AssertTransactionLegacyErrorType\n  | InvalidLegacyVErrorType\n  | ToHexErrorType\n  | ToRlpErrorType\n  | ErrorType\n\nfunction serializeTransactionLegacy(\n  transaction: TransactionSerializableLegacy,\n  signature?: SignatureLegacy | undefined,\n): TransactionSerializedLegacy {\n  const { chainId = 0, gas, data, nonce, to, value, gasPrice } = transaction\n\n  assertTransactionLegacy(transaction)\n\n  let serializedTransaction = [\n    nonce ? toHex(nonce) : '0x',\n    gasPrice ? toHex(gasPrice) : '0x',\n    gas ? toHex(gas) : '0x',\n    to ?? '0x',\n    value ? toHex(value) : '0x',\n    data ?? '0x',\n  ]\n\n  if (signature) {\n    const v = (() => {\n      // EIP-155 (inferred chainId)\n      if (signature.v >= 35n) {\n        const inferredChainId = (signature.v - 35n) / 2n\n        if (inferredChainId > 0) return signature.v\n        return 27n + (signature.v === 35n ? 0n : 1n)\n      }\n\n      // EIP-155 (explicit chainId)\n      if (chainId > 0)\n        return BigInt(chainId * 2) + BigInt(35n + signature.v - 27n)\n\n      // Pre-EIP-155 (no chainId)\n      const v = 27n + (signature.v === 27n ? 0n : 1n)\n      if (signature.v !== v) throw new InvalidLegacyVError({ v: signature.v })\n      return v\n    })()\n\n    serializedTransaction = [\n      ...serializedTransaction,\n      toHex(v),\n      signature.r,\n      signature.s,\n    ]\n  } else if (chainId > 0) {\n    serializedTransaction = [\n      ...serializedTransaction,\n      toHex(chainId),\n      '0x',\n      '0x',\n    ]\n  }\n\n  return toRlp(serializedTransaction) as TransactionSerializedLegacy\n}\n\nexport function toYParitySignatureArray(\n  transaction: TransactionSerializableGeneric,\n  signature?: Signature | undefined,\n) {\n  const { r, s, v, yParity } = signature ?? transaction\n  if (typeof r === 'undefined') return []\n  if (typeof s === 'undefined') return []\n  if (typeof v === 'undefined' && typeof yParity === 'undefined') return []\n\n  const yParity_ = (() => {\n    if (typeof yParity === 'number') return yParity ? toHex(1) : '0x'\n    if (v === 0n) return '0x'\n    if (v === 1n) return toHex(1)\n\n    return v === 27n ? '0x' : toHex(1)\n  })()\n  return [yParity_, trim(r), trim(s)]\n}\n","import {\n  InvalidSerializableTransactionError,\n  type InvalidSerializableTransactionErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  FeeValuesEIP1559,\n  FeeValuesEIP4844,\n  FeeValuesLegacy,\n} from '../../index.js'\nimport type {\n  TransactionRequestEIP1559,\n  TransactionRequestEIP2930,\n  TransactionRequestEIP4844,\n  TransactionRequestGeneric,\n  TransactionRequestLegacy,\n  TransactionSerializableEIP1559,\n  TransactionSerializableEIP2930,\n  TransactionSerializableEIP4844,\n  TransactionSerializableGeneric,\n  TransactionSerializableLegacy,\n} from '../../types/transaction.js'\nimport type {\n  Assign,\n  ExactPartial,\n  IsNever,\n  OneOf,\n  Opaque,\n} from '../../types/utils.js'\n\ntype BaseProperties = {\n  accessList?: undefined\n  blobs?: undefined\n  blobVersionedHashes?: undefined\n  gasPrice?: undefined\n  maxFeePerBlobGas?: undefined\n  maxFeePerGas?: undefined\n  maxPriorityFeePerGas?: undefined\n  sidecars?: undefined\n}\n\ntype LegacyProperties = Assign<BaseProperties, FeeValuesLegacy>\ntype EIP1559Properties = Assign<\n  BaseProperties,\n  OneOf<\n    | {\n        maxFeePerGas: FeeValuesEIP1559['maxFeePerGas']\n      }\n    | {\n        maxPriorityFeePerGas: FeeValuesEIP1559['maxPriorityFeePerGas']\n      },\n    FeeValuesEIP1559\n  > & {\n    accessList?: TransactionSerializableEIP2930['accessList'] | undefined\n  }\n>\ntype EIP2930Properties = Assign<\n  BaseProperties,\n  ExactPartial<FeeValuesLegacy> & {\n    accessList: TransactionSerializableEIP2930['accessList']\n  }\n>\ntype EIP4844Properties = Assign<\n  BaseProperties,\n  ExactPartial<FeeValuesEIP4844> &\n    OneOf<\n      | {\n          blobs: TransactionSerializableEIP4844['blobs']\n        }\n      | {\n          blobVersionedHashes: TransactionSerializableEIP4844['blobVersionedHashes']\n        }\n      | {\n          sidecars: TransactionSerializableEIP4844['sidecars']\n        },\n      TransactionSerializableEIP4844\n    >\n>\n\nexport type GetTransactionType<\n  transaction extends OneOf<\n    TransactionSerializableGeneric | TransactionRequestGeneric\n  > = TransactionSerializableGeneric,\n  result =\n    | (transaction extends\n        | Opaque<TransactionSerializableLegacy, transaction>\n        | Opaque<TransactionRequestLegacy, transaction>\n        | LegacyProperties\n        ? 'legacy'\n        : never)\n    | (transaction extends\n        | Opaque<TransactionSerializableEIP1559, transaction>\n        | Opaque<TransactionRequestEIP1559, transaction>\n        | EIP1559Properties\n        ? 'eip1559'\n        : never)\n    | (transaction extends\n        | Opaque<TransactionSerializableEIP2930, transaction>\n        | Opaque<TransactionRequestEIP2930, transaction>\n        | EIP2930Properties\n        ? 'eip2930'\n        : never)\n    | (transaction extends\n        | Opaque<TransactionSerializableEIP4844, transaction>\n        | Opaque<TransactionRequestEIP4844, transaction>\n        | EIP4844Properties\n        ? 'eip4844'\n        : never)\n    | (transaction['type'] extends string ? transaction['type'] : never),\n> = IsNever<result> extends false ? result : string\n\nexport type GetTransationTypeErrorType =\n  | InvalidSerializableTransactionErrorType\n  | ErrorType\n\nexport function getTransactionType<\n  const transaction extends OneOf<\n    TransactionSerializableGeneric | TransactionRequestGeneric\n  >,\n>(transaction: transaction): GetTransactionType<transaction> {\n  if (transaction.type)\n    return transaction.type as GetTransactionType<transaction>\n\n  if (\n    typeof transaction.blobs !== 'undefined' ||\n    typeof transaction.blobVersionedHashes !== 'undefined' ||\n    typeof transaction.maxFeePerBlobGas !== 'undefined' ||\n    typeof transaction.sidecars !== 'undefined'\n  )\n    return 'eip4844' as any\n\n  if (\n    typeof transaction.maxFeePerGas !== 'undefined' ||\n    typeof transaction.maxPriorityFeePerGas !== 'undefined'\n  ) {\n    return 'eip1559' as any\n  }\n\n  if (typeof transaction.gasPrice !== 'undefined') {\n    if (typeof transaction.accessList !== 'undefined') return 'eip2930' as any\n    return 'legacy' as any\n  }\n\n  throw new InvalidSerializableTransactionError({ transaction })\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport {\n  type CommitmentToVersionedHashErrorType,\n  commitmentToVersionedHash,\n} from './commitmentToVersionedHash.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type CommitmentsToVersionedHashesParameters<\n  commitments extends readonly Uint8Array[] | readonly Hex[] =\n    | readonly Uint8Array[]\n    | readonly Hex[],\n  to extends To | undefined = undefined,\n> = {\n  /** Commitments from blobs. */\n  commitments: commitments | readonly Uint8Array[] | readonly Hex[]\n  /** Return type. */\n  to?: to | To | undefined\n  /** Version to tag onto the hashes. */\n  version?: number | undefined\n}\n\nexport type CommitmentsToVersionedHashesReturnType<to extends To> =\n  | (to extends 'bytes' ? readonly ByteArray[] : never)\n  | (to extends 'hex' ? readonly Hex[] : never)\n\nexport type CommitmentsToVersionedHashesErrorType =\n  | CommitmentToVersionedHashErrorType\n  | ErrorType\n\n/**\n * Transform a list of commitments to their versioned hashes.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   commitmentsToVersionedHashes,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const versionedHashes = commitmentsToVersionedHashes({ commitments })\n * ```\n */\nexport function commitmentsToVersionedHashes<\n  const commitments extends readonly Uint8Array[] | readonly Hex[],\n  to extends To =\n    | (commitments extends readonly Hex[] ? 'hex' : never)\n    | (commitments extends readonly ByteArray[] ? 'bytes' : never),\n>(\n  parameters: CommitmentsToVersionedHashesParameters<commitments, to>,\n): CommitmentsToVersionedHashesReturnType<to> {\n  const { commitments, version } = parameters\n\n  const to =\n    parameters.to ?? (typeof commitments[0] === 'string' ? 'hex' : 'bytes')\n\n  const hashes: Uint8Array[] | Hex[] = []\n  for (const commitment of commitments) {\n    hashes.push(\n      commitmentToVersionedHash({\n        commitment,\n        to,\n        version,\n      }) as any,\n    )\n  }\n  return hashes as any\n}\n","import { InvalidAddressError } from '../errors/address.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport type { ChainSerializers } from '../types/chain.js'\nimport type { Hex, Signature } from '../types/misc.js'\nimport type { TransactionSerializable } from '../types/transaction.js'\nimport type { RequiredBy } from '../types/utils.js'\nimport { isAddress } from '../utils/address/isAddress.js'\nimport { concatHex } from '../utils/data/concat.js'\nimport { toHex } from '../utils/encoding/toHex.js'\nimport { toRlp } from '../utils/encoding/toRlp.js'\nimport {\n  type SerializeTransactionErrorType as SerializeTransactionErrorType_,\n  serializeTransaction as serializeTransaction_,\n} from '../utils/transaction/serializeTransaction.js'\nimport type {\n  OpStackTransactionSerializable,\n  TransactionSerializableDeposit,\n  TransactionSerializedDeposit,\n} from './types/transaction.js'\n\nexport type SerializeTransactionReturnType = ReturnType<\n  typeof serializeTransaction\n>\n\nexport type SerializeTransactionErrorType =\n  | SerializeTransactionErrorType_\n  | ErrorType\n\nexport function serializeTransaction(\n  transaction: OpStackTransactionSerializable,\n  signature?: Signature,\n) {\n  if (isDeposit(transaction)) return serializeTransactionDeposit(transaction)\n  return serializeTransaction_(\n    transaction as TransactionSerializable,\n    signature,\n  )\n}\n\nexport const serializers = {\n  transaction: serializeTransaction,\n} as const satisfies ChainSerializers\n\n//////////////////////////////////////////////////////////////////////////////\n// Serializers\n\nexport type SerializeTransactionDepositReturnType = TransactionSerializedDeposit\n\nfunction serializeTransactionDeposit(\n  transaction: TransactionSerializableDeposit,\n): SerializeTransactionDepositReturnType {\n  assertTransactionDeposit(transaction)\n\n  const { sourceHash, data, from, gas, isSystemTx, mint, to, value } =\n    transaction\n\n  const serializedTransaction: Hex[] = [\n    sourceHash,\n    from,\n    to ?? '0x',\n    mint ? toHex(mint) : '0x',\n    value ? toHex(value) : '0x',\n    gas ? toHex(gas) : '0x',\n    isSystemTx ? '0x1' : '0x',\n    data ?? '0x',\n  ]\n\n  return concatHex([\n    '0x7e',\n    toRlp(serializedTransaction),\n  ]) as SerializeTransactionDepositReturnType\n}\n\nfunction isDeposit(\n  transaction: OpStackTransactionSerializable,\n): transaction is RequiredBy<TransactionSerializableDeposit, 'type'> {\n  if (transaction.type === 'deposit') return true\n  if (typeof transaction.sourceHash !== 'undefined') return true\n  return false\n}\n\nexport function assertTransactionDeposit(\n  transaction: TransactionSerializableDeposit,\n) {\n  const { from, to } = transaction\n  if (from && !isAddress(from)) throw new InvalidAddressError({ address: from })\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n}\n","import { contracts } from './contracts.js'\nimport { formatters } from './formatters.js'\nimport { serializers } from './serializers.js'\n\nexport const chainConfig = {\n  contracts,\n  formatters,\n  serializers,\n} as const\n","import type { Chain } from '../types/chain.js'\n\n/**\n * Predeploy contracts for OP Stack.\n * @see https://github.com/ethereum-optimism/optimism/blob/develop/specs/predeploys.md\n */\nexport const contracts = {\n  gasPriceOracle: { address: '0x420000000000000000000000000000000000000F' },\n  l1Block: { address: '0x4200000000000000000000000000000000000015' },\n  l2CrossDomainMessenger: {\n    address: '0x4200000000000000000000000000000000000007',\n  },\n  l2Erc721Bridge: { address: '0x4200000000000000000000000000000000000014' },\n  l2StandardBridge: { address: '0x4200000000000000000000000000000000000010' },\n  l2ToL1MessagePasser: {\n    address: '0x4200000000000000000000000000000000000016',\n  },\n} as const satisfies Chain['contracts']\n","import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 1 // mainnet\n\nexport const ancient8 = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 888888888,\n  name: 'Ancient8',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.ancient8.gg'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Ancient8 explorer',\n      url: 'https://scan.ancient8.gg',\n      apiUrl: 'https://scan.ancient8.gg/api',\n    },\n  },\n  contracts: {\n    ...chainConfig.contracts,\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0xB09DC08428C8b4EFB4ff9C0827386CDF34277996',\n      },\n    },\n    portal: {\n      [sourceId]: {\n        address: '0x639F2AECE398Aa76b07e59eF6abe2cFe32bacb68',\n        blockCreated: 19070571,\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0xd5e3eDf5b68135D559D572E26bF863FBC1950033',\n        blockCreated: 19070571,\n      },\n    },\n  },\n  sourceId,\n})\n","import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 11_155_111 // sepolia\n\nexport const ancient8Sepolia = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 28122024,\n  name: 'Ancient8 Testnet',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpcv2-testnet.ancient8.gg'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Ancient8 Celestia Testnet explorer',\n      url: 'https://scanv2-testnet.ancient8.gg',\n      apiUrl: 'https://scanv2-testnet.ancient8.gg/api',\n    },\n  },\n  contracts: {\n    ...chainConfig.contracts,\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0x942fD5017c0F60575930D8574Eaca13BEcD6e1bB',\n      },\n    },\n    portal: {\n      [sourceId]: {\n        address: '0xfa1d9E26A6aCD7b22115D27572c1221B9803c960',\n        blockCreated: 4972908,\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0xF6Bc0146d3c74D48306e79Ae134A260E418C9335',\n        blockCreated: 4972908,\n      },\n    },\n  },\n  sourceId,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const anvil = /*#__PURE__*/ defineChain({\n  id: 31_337,\n  name: 'Anvil',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Ether',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: {\n      http: ['http://127.0.0.1:8545'],\n      webSocket: ['ws://127.0.0.1:8545'],\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const apexTestnet = /*#__PURE__*/ defineChain({\n  id: 3993,\n  name: 'APEX Testnet',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc-testnet.apexlayer.xyz'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://exp-testnet.apexlayer.xyz',\n      apiUrl: 'https://exp-testnet.apexlayer.xyz/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xf7642be33a6b18D16a995657adb5a68CD0438aE2',\n      blockCreated: 283775,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const arbitrum = /*#__PURE__*/ defineChain({\n  id: 42_161,\n  name: 'Arbitrum One',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://arb1.arbitrum.io/rpc'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Arbiscan',\n      url: 'https://arbiscan.io',\n      apiUrl: 'https://api.arbiscan.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 7654707,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const arbitrumGoerli = /*#__PURE__*/ defineChain({\n  id: 421_613,\n  name: 'Arbitrum Goerli',\n  nativeCurrency: {\n    name: 'Arbitrum Goerli Ether',\n    symbol: 'ETH',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://goerli-rollup.arbitrum.io/rpc'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Arbiscan',\n      url: 'https://goerli.arbiscan.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 88114,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const arbitrumNova = /*#__PURE__*/ defineChain({\n  id: 42_170,\n  name: 'Arbitrum Nova',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://nova.arbitrum.io/rpc'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Arbiscan',\n      url: 'https://nova.arbiscan.io',\n      apiUrl: 'https://api-nova.arbiscan.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 1746963,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const astar = /*#__PURE__*/ defineChain({\n  id: 592,\n  name: 'Astar',\n  network: 'astar-mainnet',\n  nativeCurrency: {\n    name: 'Astar',\n    symbol: 'ASTR',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: { http: ['https://astar.api.onfinality.io/public'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Astar Subscan',\n      url: 'https://astar.subscan.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 761794,\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const astarZkEVM = /*#__PURE__*/ defineChain({\n  id: 3_776,\n  name: 'Astar zkEVM',\n  network: 'AstarZkEVM',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.startale.com/astar-zkevm'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Astar zkEVM Explorer',\n      url: 'https://astar-zkevm.explorer.startale.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 93528,\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const astarZkyoto = /*#__PURE__*/ defineChain({\n  id: 6_038_361,\n  name: 'Astar zkEVM Testnet zKyoto',\n  network: 'zKyoto',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.startale.com/zkyoto'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'zKyoto Explorer',\n      url: 'https://zkyoto.explorer.startale.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 196153,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const arbitrumSepolia = /*#__PURE__*/ defineChain({\n  id: 421_614,\n  name: 'Arbitrum Sepolia',\n  nativeCurrency: {\n    name: 'Arbitrum Sepolia Ether',\n    symbol: 'ETH',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://sepolia-rollup.arbitrum.io/rpc'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Arbiscan',\n      url: 'https://sepolia.arbiscan.io',\n      apiUrl: 'https://api-sepolia.arbiscan.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 81930,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const areonNetwork = /*#__PURE__*/ defineChain({\n  id: 463,\n  name: 'Areon Network',\n  nativeCurrency: { decimals: 18, name: 'AREA', symbol: 'AREA' },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet-rpc.areon.network'],\n      webSocket: ['wss://mainnet-ws.areon.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Areonscan',\n      url: 'https://areonscan.com',\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const areonNetworkTestnet = /*#__PURE__*/ defineChain({\n  id: 462,\n  name: 'Areon Network Testnet',\n  nativeCurrency: { decimals: 18, name: 'TAREA', symbol: 'TAREA' },\n  rpcUrls: {\n    default: {\n      http: ['https://testnet-rpc.areon.network'],\n      webSocket: ['wss://testnet-ws.areon.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Areonscan',\n      url: 'https://areonscan.com',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const aurora = /*#__PURE__*/ defineChain({\n  id: 1313161554,\n  name: 'Aurora',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Ether',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: { http: ['https://mainnet.aurora.dev'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Aurorascan',\n      url: 'https://aurorascan.dev',\n      apiUrl: 'https://aurorascan.dev/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 62907816,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const auroraTestnet = /*#__PURE__*/ defineChain({\n  id: 1313161555,\n  name: 'Aurora Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Ether',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: { http: ['https://testnet.aurora.dev'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Aurorascan',\n      url: 'https://testnet.aurorascan.dev',\n      apiUrl: 'https://testnet.aurorascan.dev/api',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const auroria = /*#__PURE__*/ defineChain({\n  id: 205205,\n  name: 'Auroria Testnet',\n  network: 'auroria',\n  nativeCurrency: {\n    name: 'Auroria Stratis',\n    symbol: 'tSTRAX',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://auroria.rpc.stratisevm.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Auroria Testnet Explorer',\n      url: 'https://auroria.explorer.stratisevm.com',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const avalanche = /*#__PURE__*/ defineChain({\n  id: 43_114,\n  name: 'Avalanche',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Avalanche',\n    symbol: 'AVAX',\n  },\n  rpcUrls: {\n    default: { http: ['https://api.avax.network/ext/bc/C/rpc'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'SnowScan',\n      url: 'https://snowscan.xyz',\n      apiUrl: 'https://api.snowscan.xyz/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 11907934,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const avalancheFuji = /*#__PURE__*/ defineChain({\n  id: 43_113,\n  name: 'Avalanche Fuji',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Avalanche Fuji',\n    symbol: 'AVAX',\n  },\n  rpcUrls: {\n    default: { http: ['https://api.avax-test.network/ext/bc/C/rpc'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'SnowScan',\n      url: 'https://testnet.snowscan.xyz',\n      apiUrl: 'https://api-testnet.snowscan.xyz',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 7096959,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const bahamut = /*#__PURE__*/ defineChain({\n  id: 5165,\n  network: 'bahamut',\n  name: 'Bahamut',\n  nativeCurrency: { name: 'Fasttoken', symbol: 'FTN', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: [\n        'https://rpc1.bahamut.io',\n        'https://bahamut-rpc.publicnode.com',\n        'https://rpc2.bahamut.io',\n      ],\n      webSocket: [\n        'wss://ws1.sahara.bahamutchain.com',\n        'wss://bahamut-rpc.publicnode.com',\n        'wss://ws2.sahara.bahamutchain.com',\n      ],\n    },\n    public: {\n      http: [\n        'https://rpc1.bahamut.io',\n        'https://bahamut-rpc.publicnode.com',\n        'https://rpc2.bahamut.io',\n      ],\n      webSocket: [\n        'wss://ws1.sahara.bahamutchain.com',\n        'wss://bahamut-rpc.publicnode.com',\n        'wss://ws2.sahara.bahamutchain.com',\n      ],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Ftnscan',\n      url: 'https://www.ftnscan.com',\n      apiUrl: 'https://www.ftnscan.com/api',\n    },\n  },\n})\n","import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 1 // mainnet\n\nexport const base = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 8453,\n  name: 'Base',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.base.org'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Basescan',\n      url: 'https://basescan.org',\n      apiUrl: 'https://api.basescan.org/api',\n    },\n  },\n  contracts: {\n    ...chainConfig.contracts,\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0x56315b90c40730925ec5485cf004d835058518A0',\n      },\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 5022,\n    },\n    portal: {\n      [sourceId]: {\n        address: '0x49048044D57e1C92A77f79988d21Fa8fAF74E97e',\n        blockCreated: 17482143,\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0x3154Cf16ccdb4C6d922629664174b904d80F2C35',\n        blockCreated: 17482143,\n      },\n    },\n  },\n  sourceId,\n})\n","import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 5 // goerli\n\nexport const baseGoerli = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 84531,\n  name: 'Base Goerli',\n  nativeCurrency: { name: 'Goerli Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: { http: ['https://goerli.base.org'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Basescan',\n      url: 'https://goerli.basescan.org',\n      apiUrl: 'https://goerli.basescan.org/api',\n    },\n  },\n  contracts: {\n    ...chainConfig.contracts,\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0x2A35891ff30313CcFa6CE88dcf3858bb075A2298',\n      },\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 1376988,\n    },\n    portal: {\n      [sourceId]: {\n        address: '0xe93c8cD0D409341205A592f8c4Ac1A5fe5585cfA',\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0xfA6D8Ee5BE770F84FC001D098C4bD604Fe01284a',\n      },\n    },\n  },\n  testnet: true,\n  sourceId,\n})\n","import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 11_155_111 // sepolia\n\nexport const baseSepolia = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 84532,\n  network: 'base-sepolia',\n  name: 'Base Sepolia',\n  nativeCurrency: { name: 'Sepolia Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://sepolia.base.org'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Basescan',\n      url: 'https://sepolia.basescan.org',\n      apiUrl: 'https://api-sepolia.basescan.org/api',\n    },\n  },\n  contracts: {\n    ...chainConfig.contracts,\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0x84457ca9D0163FbC4bbfe4Dfbb20ba46e48DF254',\n      },\n    },\n    portal: {\n      [sourceId]: {\n        address: '0x49f53e41452c74589e85ca1677426ba426459e85',\n        blockCreated: 4446677,\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0xfd0Bf71F60660E2f608ed56e1659C450eB113120',\n        blockCreated: 4446677,\n      },\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 1059647,\n    },\n  },\n  testnet: true,\n  sourceId,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const beam = /*#__PURE__*/ defineChain({\n  id: 4337,\n  name: 'Beam',\n  network: 'beam',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Beam',\n    symbol: 'BEAM',\n  },\n  rpcUrls: {\n    public: {\n      http: ['https://build.onbeam.com/rpc'],\n      webSocket: ['wss://build.onbeam.com/ws'],\n    },\n    default: {\n      http: ['https://build.onbeam.com/rpc'],\n      webSocket: ['wss://build.onbeam.com/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Beam Explorer',\n      url: 'https://subnets.avax.network/beam',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0x4956f15efdc3dc16645e90cc356eafa65ffc65ec',\n      blockCreated: 1,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const beamTestnet = /*#__PURE__*/ defineChain({\n  id: 13337,\n  name: 'Beam Testnet',\n  network: 'beam',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Beam',\n    symbol: 'BEAM',\n  },\n  rpcUrls: {\n    public: {\n      http: ['https://build.onbeam.com/rpc/testnet'],\n      webSocket: ['wss://build.onbeam.com/ws/testnet'],\n    },\n    default: {\n      http: ['https://build.onbeam.com/rpc/testnet'],\n      webSocket: ['wss://build.onbeam.com/ws/testnet'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Beam Explorer',\n      url: 'https://subnets-test.avax.network/beam',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0x9bf49b704ee2a095b95c1f2d4eb9010510c41c9e',\n      blockCreated: 3,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const bearNetworkChainMainnet = /*#__PURE__*/ defineChain({\n  id: 641230,\n  name: 'Bear Network Chain Mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'BearNetworkChain',\n    symbol: 'BRNKC',\n  },\n  rpcUrls: {\n    default: { http: ['https://brnkc-mainnet.bearnetwork.net'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'BrnkScan',\n      url: 'https://brnkscan.bearnetwork.net',\n      apiUrl: 'https://brnkscan.bearnetwork.net/api',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const bearNetworkChainTestnet = /*#__PURE__*/ defineChain({\n  id: 751230,\n  name: 'Bear Network Chain Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'tBRNKC',\n    symbol: 'tBRNKC',\n  },\n  rpcUrls: {\n    default: { http: ['https://brnkc-test.bearnetwork.net'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'BrnkTestScan',\n      url: 'https://brnktest-scan.bearnetwork.net',\n      apiUrl: 'https://brnktest-scan.bearnetwork.net/api',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const berachainTestnet = /*#__PURE__*/ defineChain({\n  id: 80085,\n  name: 'Berachain Artio',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'BERA Token',\n    symbol: 'BERA',\n  },\n  rpcUrls: {\n    default: { http: ['https://artio.rpc.berachain.com'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Berachain',\n      url: 'https://artio.beratrail.io',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const bevmMainnet = /*#__PURE__*/ defineChain({\n  id: 11501,\n  name: 'BEVM Mainnet',\n  nativeCurrency: { name: 'Bitcoin', symbol: 'BTC', decimals: 18 },\n  rpcUrls: {\n    default: { http: ['https://rpc-mainnet-1.bevm.io'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Bevmscan',\n      url: 'https://scan-mainnet.bevm.io',\n      apiUrl: 'https://scan-mainnet-api.bevm.io/api',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const bitTorrent = /*#__PURE__*/ defineChain({\n  id: 199,\n  name: 'BitTorrent',\n  network: 'bittorrent-chain-mainnet',\n  nativeCurrency: { name: 'BitTorrent', symbol: 'BTT', decimals: 18 },\n  rpcUrls: {\n    default: { http: ['https://rpc.bittorrentchain.io'] },\n    public: { http: ['https://rpc.bittorrentchain.io'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Bttcscan',\n      url: 'https://bttcscan.com',\n      apiUrl: 'https://api.bttcscan.com/api',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const bitTorrentTestnet = /*#__PURE__*/ defineChain({\n  id: 1028,\n  name: 'BitTorrent Chain Testnet',\n  network: 'bittorrent-chain-testnet',\n  nativeCurrency: { name: 'BitTorrent', symbol: 'BTT', decimals: 18 },\n  rpcUrls: {\n    default: { http: ['https://testrpc.bittorrentchain.io'] },\n    public: { http: ['https://testrpc.bittorrentchain.io'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Bttcscan',\n      url: 'https://testnet.bttcscan.com',\n      apiUrl: 'https://testnet.bttcscan.com/api',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 1 // mainnet\n\nexport const blast = /*#__PURE__*/ defineChain({\n  id: 81457,\n  name: 'Blast',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Ether',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.blast.io'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blastscan',\n      url: 'https://blastscan.io',\n      apiUrl: 'https://api.blastscan.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 212929,\n    },\n  },\n  sourceId,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 11_155_111 // sepolia\n\nexport const blastSepolia = /*#__PURE__*/ defineChain({\n  id: 168_587_773,\n  name: 'Blast Sepolia',\n  nativeCurrency: {\n    name: 'Ether',\n    symbol: 'ETH',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://sepolia.blast.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blastscan',\n      url: 'https://sepolia.blastscan.io',\n      apiUrl: 'https://api-sepolia.blastscan.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 756690,\n    },\n  },\n  testnet: true,\n  sourceId,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const bob = defineChain({\n  id: 60808,\n  name: 'BOB',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'ETH',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.gobob.xyz'],\n      webSocket: ['wss://rpc.gobob.xyz'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://explorer.gobob.xyz',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0x63f8279bccDb75c0F38e0CD6B6A0c72a0a760FF9',\n      blockCreated: 457045,\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const boba = /*#__PURE__*/ defineChain({\n  id: 288,\n  name: 'Boba Network',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Ether',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: { http: ['https://mainnet.boba.network'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'BOBAScan',\n      url: 'https://bobascan.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 446859,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const bronos = /*#__PURE__*/ defineChain({\n  id: 1039,\n  name: 'Bronos',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'BRO',\n    symbol: 'BRO',\n  },\n  rpcUrls: {\n    default: { http: ['https://evm.bronos.org'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'BronoScan',\n      url: 'https://broscan.bronos.org',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const bronosTestnet = /*#__PURE__*/ defineChain({\n  id: 1038,\n  name: 'Bronos Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Bronos Coin',\n    symbol: 'tBRO',\n  },\n  rpcUrls: {\n    default: { http: ['https://evm-testnet.bronos.org'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'BronoScan',\n      url: 'https://tbroscan.bronos.org',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const bsc = /*#__PURE__*/ defineChain({\n  id: 56,\n  name: 'BNB Smart Chain',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'BNB',\n    symbol: 'BNB',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.ankr.com/bsc'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'BscScan',\n      url: 'https://bscscan.com',\n      apiUrl: 'https://api.bscscan.com/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 15921452,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const bscTestnet = /*#__PURE__*/ defineChain({\n  id: 97,\n  name: 'Binance Smart Chain Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'BNB',\n    symbol: 'tBNB',\n  },\n  rpcUrls: {\n    default: { http: ['https://data-seed-prebsc-1-s1.bnbchain.org:8545'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'BscScan',\n      url: 'https://testnet.bscscan.com',\n      apiUrl: 'https://testnet.bscscan.com/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 17422483,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const bscGreenfield = /*#__PURE__*/ defineChain({\n  id: 1017,\n  name: 'BNB Greenfield Chain',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'BNB',\n    symbol: 'BNB',\n  },\n  rpcUrls: {\n    default: { http: ['https://greenfield-chain.bnbchain.org'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'BNB Greenfield Mainnet Scan',\n      url: 'https://greenfieldscan.com',\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const btr = /*#__PURE__*/ defineChain({\n  id: 200901,\n  name: 'Bitlayer',\n  nativeCurrency: {\n    name: 'Ether',\n    symbol: 'ETH',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: [\n        'https://rpc.bitlayer.org',\n        'https://rpc.bitlayer-rpc.com',\n        'https://rpc.ankr.com/bitlayer',\n      ],\n      webSocket: ['wss://ws.bitlayer.org', 'wss://ws.bitlayer-rpc.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'btrscan',\n      url: 'https://www.btrscan.com',\n      apiUrl: 'https://www.btrscan.com/apis',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const btrTestnet = /*#__PURE__*/ defineChain({\n  id: 200810,\n  name: 'Bitlayer Testnet',\n  nativeCurrency: {\n    name: 'Ether',\n    symbol: 'ETH',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://testnet-rpc.bitlayer.org'],\n      webSocket: [\n        'wss://testnet-ws.bitlayer.org',\n        'wss://testnet-ws.bitlayer-rpc.com',\n      ],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'btrscan',\n      url: 'https://testnet-scan.bitlayer.org',\n      apiUrl: 'https://testnet-scan.bitlayer.org/apis',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const bxn = /*#__PURE__*/ defineChain({\n  id: 4999,\n  name: 'BlackFort Exchange Network',\n  nativeCurrency: { name: 'BlackFort Token', symbol: 'BXN', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.blackfort.network/rpc'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://explorer.blackfort.network',\n      apiUrl: 'https://explorer.blackfort.network/api',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const bxnTestnet = /*#__PURE__*/ defineChain({\n  id: 4777,\n  name: 'BlackFort Exchange Network Testnet',\n  nativeCurrency: {\n    name: 'BlackFort Testnet Token',\n    symbol: 'TBXN',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://testnet.blackfort.network/rpc'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://testnet-explorer.blackfort.network',\n      apiUrl: 'https://testnet-explorer.blackfort.network/api',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const canto = /*#__PURE__*/ defineChain({\n  id: 7_700,\n  name: 'Canto',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Canto',\n    symbol: 'CANTO',\n  },\n  rpcUrls: {\n    default: { http: ['https://canto.gravitychain.io'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Tuber.Build (Blockscout)',\n      url: 'https://tuber.build',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 2905789,\n    },\n  },\n})\n","import type { Client } from '../clients/createClient.js'\nimport type {\n  Address,\n  ChainEstimateFeesPerGasFnParameters,\n  ChainFees,\n  Hex,\n} from '../index.js'\n\nimport type { formatters } from './formatters.js'\n\nexport const fees: ChainFees<typeof formatters> = {\n  /*\n   * Estimates the fees per gas for a transaction.\n\n   * If the transaction is to be paid in a token (feeCurrency is present) then the fees \n   * are estimated in the value of the token. Otherwise falls back to the default\n   * estimation by returning null.\n   * \n   * @param params fee estimation function parameters\n   */\n  estimateFeesPerGas: async (\n    params: ChainEstimateFeesPerGasFnParameters<typeof formatters>,\n  ) => {\n    if (!params.request?.feeCurrency) return null\n\n    const [maxFeePerGas, maxPriorityFeePerGas] = await Promise.all([\n      estimateFeePerGasInFeeCurrency(params.client, params.request.feeCurrency),\n      estimateMaxPriorityFeePerGasInFeeCurrency(\n        params.client,\n        params.request.feeCurrency,\n      ),\n    ])\n\n    return {\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n    }\n  },\n}\n\ntype RequestGasPriceInFeeCurrencyParams = {\n  Method: 'eth_gasPrice'\n  Parameters: [Address]\n  ReturnType: Hex\n}\n\n/*\n * Estimate the fee per gas in the value of the fee token\n\n *\n * @param client - Client to use\n * @param feeCurrency -  Address of a whitelisted fee token\n * @returns The fee per gas in wei in the value of the  fee token\n *\n */\nasync function estimateFeePerGasInFeeCurrency(\n  client: Client,\n  feeCurrency: Address,\n) {\n  const fee = await client.request<RequestGasPriceInFeeCurrencyParams>({\n    method: 'eth_gasPrice',\n    params: [feeCurrency],\n  })\n  return BigInt(fee)\n}\n\ntype RequestMaxGasPriceInFeeCurrencyParams = {\n  Method: 'eth_maxPriorityFeePerGas'\n  Parameters: [Address]\n  ReturnType: Hex\n}\n\n/*\n * Estimate the max priority fee per gas in the value of the fee token\n\n *\n * @param client - Client to use\n * @param feeCurrency -  Address of a whitelisted fee token\n * @returns The fee per gas in wei in the value of the  fee token\n *\n */\nasync function estimateMaxPriorityFeePerGasInFeeCurrency(\n  client: Client,\n  feeCurrency: Address,\n) {\n  const feesPerGas =\n    await client.request<RequestMaxGasPriceInFeeCurrencyParams>({\n      method: 'eth_maxPriorityFeePerGas',\n      params: [feeCurrency],\n    })\n  return BigInt(feesPerGas)\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type {\n  Chain,\n  ExtractChainFormatterParameters,\n} from '../../types/chain.js'\nimport type { ByteArray } from '../../types/misc.js'\nimport type { RpcTransactionRequest } from '../../types/rpc.js'\nimport type { TransactionRequest } from '../../types/transaction.js'\nimport type { ExactPartial } from '../../types/utils.js'\nimport { bytesToHex, numberToHex } from '../encoding/toHex.js'\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\n\nexport type FormattedTransactionRequest<\n  TChain extends Chain | undefined = Chain | undefined,\n> = ExtractChainFormatterParameters<\n  TChain,\n  'transactionRequest',\n  TransactionRequest\n>\n\nexport const rpcTransactionType = {\n  legacy: '0x0',\n  eip2930: '0x1',\n  eip1559: '0x2',\n  eip4844: '0x3',\n} as const\n\nexport type FormatTransactionRequestErrorType = ErrorType\n\nexport function formatTransactionRequest(\n  request: ExactPartial<TransactionRequest>,\n) {\n  const rpcRequest = {} as RpcTransactionRequest\n\n  if (typeof request.accessList !== 'undefined')\n    rpcRequest.accessList = request.accessList\n  if (typeof request.blobVersionedHashes !== 'undefined')\n    rpcRequest.blobVersionedHashes = request.blobVersionedHashes\n  if (typeof request.blobs !== 'undefined') {\n    if (typeof request.blobs[0] !== 'string')\n      rpcRequest.blobs = (request.blobs as ByteArray[]).map((x) =>\n        bytesToHex(x),\n      )\n    else rpcRequest.blobs = request.blobs\n  }\n  if (typeof request.data !== 'undefined') rpcRequest.data = request.data\n  if (typeof request.from !== 'undefined') rpcRequest.from = request.from\n  if (typeof request.gas !== 'undefined')\n    rpcRequest.gas = numberToHex(request.gas)\n  if (typeof request.gasPrice !== 'undefined')\n    rpcRequest.gasPrice = numberToHex(request.gasPrice)\n  if (typeof request.maxFeePerBlobGas !== 'undefined')\n    rpcRequest.maxFeePerBlobGas = numberToHex(request.maxFeePerBlobGas)\n  if (typeof request.maxFeePerGas !== 'undefined')\n    rpcRequest.maxFeePerGas = numberToHex(request.maxFeePerGas)\n  if (typeof request.maxPriorityFeePerGas !== 'undefined')\n    rpcRequest.maxPriorityFeePerGas = numberToHex(request.maxPriorityFeePerGas)\n  if (typeof request.nonce !== 'undefined')\n    rpcRequest.nonce = numberToHex(request.nonce)\n  if (typeof request.to !== 'undefined') rpcRequest.to = request.to\n  if (typeof request.type !== 'undefined')\n    rpcRequest.type = rpcTransactionType[request.type]\n  if (typeof request.value !== 'undefined')\n    rpcRequest.value = numberToHex(request.value)\n\n  return rpcRequest\n}\n\nexport type DefineTransactionRequestErrorType =\n  | DefineFormatterErrorType\n  | ErrorType\n\nexport const defineTransactionRequest = /*#__PURE__*/ defineFormatter(\n  'transactionRequest',\n  formatTransactionRequest,\n)\n","import type { Address } from 'abitype'\nimport { trim } from '../utils/data/trim.js'\nimport type {\n  CeloTransactionRequest,\n  CeloTransactionSerializable,\n  TransactionSerializableCIP64,\n} from './types.js'\n\nexport function isEmpty(\n  value: string | undefined | number | BigInt,\n): value is undefined {\n  return (\n    value === 0 ||\n    value === 0n ||\n    value === undefined ||\n    value === null ||\n    value === '0' ||\n    value === '' ||\n    (typeof value === 'string' &&\n      (trim(value as Address).toLowerCase() === '0x' ||\n        trim(value as Address).toLowerCase() === '0x00'))\n  )\n}\n\nexport function isPresent(\n  value: string | undefined | number | BigInt,\n): value is string | number | BigInt {\n  return !isEmpty(value)\n}\n\nexport function isEIP1559(\n  transaction: CeloTransactionSerializable | CeloTransactionRequest,\n): boolean {\n  return (\n    typeof transaction.maxFeePerGas !== 'undefined' &&\n    typeof transaction.maxPriorityFeePerGas !== 'undefined'\n  )\n}\n\nexport function isCIP64(\n  transaction: CeloTransactionSerializable | CeloTransactionRequest,\n): transaction is TransactionSerializableCIP64 {\n  /*\n   * Enable end user to force the tx to be considered as a CIP-64.\n   *\n   * The preliminary type will be determined as \"eip1559\" by src/utils/transaction/getTransactionType.ts\n   * and so we need the logic below to check for the specific value instead of checking if just any\n   * transaction type is provided. If that's anything else than \"cip64\" then we need to reevaluate the\n   * type based on the transaction fields.\n   *\n   * Modify with caution and according to https://github.com/celo-org/celo-proposals/blob/master/CIPs/cip-0064.md\n   */\n  if (transaction.type === 'cip64') {\n    return true\n  }\n\n  return isEIP1559(transaction) && isPresent(transaction.feeCurrency)\n}\n","import { InvalidAddressError } from '../errors/address.js'\nimport { BaseError } from '../errors/base.js'\nimport { InvalidChainIdError } from '../errors/chain.js'\nimport { FeeCapTooHighError, TipAboveFeeCapError } from '../errors/node.js'\nimport type { ChainSerializers } from '../types/chain.js'\nimport type { Signature } from '../types/misc.js'\nimport { isAddress } from '../utils/address/isAddress.js'\nimport { concatHex } from '../utils/data/concat.js'\nimport { toHex } from '../utils/encoding/toHex.js'\nimport { toRlp } from '../utils/encoding/toRlp.js'\nimport { serializeAccessList } from '../utils/transaction/serializeAccessList.js'\nimport {\n  serializeTransaction as serializeTransaction_,\n  toYParitySignatureArray,\n} from '../utils/transaction/serializeTransaction.js'\nimport type {\n  CeloTransactionSerializable,\n  TransactionSerializableCIP42,\n  TransactionSerializableCIP64,\n  TransactionSerializedCIP64,\n} from './types.js'\nimport { isCIP64, isEmpty, isPresent } from './utils.js'\n\nexport function serializeTransaction(\n  transaction: CeloTransactionSerializable,\n  signature?: Signature | undefined,\n) {\n  if (isCIP64(transaction))\n    return serializeTransactionCIP64(transaction, signature)\n\n  return serializeTransaction_(transaction, signature)\n}\n\nexport const serializers = {\n  transaction: serializeTransaction,\n} as const satisfies ChainSerializers\n\n//////////////////////////////////////////////////////////////////////////////\n// Serializers\n\nexport type SerializeTransactionCIP64ReturnType = TransactionSerializedCIP64\n\nfunction serializeTransactionCIP64(\n  transaction: TransactionSerializableCIP64,\n  signature?: Signature | undefined,\n): SerializeTransactionCIP64ReturnType {\n  assertTransactionCIP64(transaction)\n  const {\n    chainId,\n    gas,\n    nonce,\n    to,\n    value,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    accessList,\n    feeCurrency,\n    data,\n  } = transaction\n\n  const serializedTransaction = [\n    toHex(chainId),\n    nonce ? toHex(nonce) : '0x',\n    maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n    maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n    gas ? toHex(gas) : '0x',\n    to ?? '0x',\n    value ? toHex(value) : '0x',\n    data ?? '0x',\n    serializeAccessList(accessList),\n    feeCurrency!,\n    ...toYParitySignatureArray(transaction, signature),\n  ]\n\n  return concatHex([\n    '0x7b',\n    toRlp(serializedTransaction),\n  ]) as SerializeTransactionCIP64ReturnType\n}\n\n// maxFeePerGas must be less than 2^256 - 1\nconst MAX_MAX_FEE_PER_GAS = 2n ** 256n - 1n\n\nexport function assertTransactionCIP42(\n  transaction: TransactionSerializableCIP42,\n) {\n  const {\n    chainId,\n    maxPriorityFeePerGas,\n    gasPrice,\n    maxFeePerGas,\n    to,\n    feeCurrency,\n    gatewayFee,\n    gatewayFeeRecipient,\n  } = transaction\n  if (chainId <= 0) throw new InvalidChainIdError({ chainId })\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (gasPrice)\n    throw new BaseError(\n      '`gasPrice` is not a valid CIP-42 Transaction attribute.',\n    )\n\n  if (isPresent(maxFeePerGas) && maxFeePerGas > MAX_MAX_FEE_PER_GAS)\n    throw new FeeCapTooHighError({ maxFeePerGas })\n\n  if (\n    isPresent(maxPriorityFeePerGas) &&\n    isPresent(maxFeePerGas) &&\n    maxPriorityFeePerGas > maxFeePerGas\n  )\n    throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas })\n\n  if (\n    (isPresent(gatewayFee) && isEmpty(gatewayFeeRecipient)) ||\n    (isPresent(gatewayFeeRecipient) && isEmpty(gatewayFee))\n  ) {\n    throw new BaseError(\n      '`gatewayFee` and `gatewayFeeRecipient` must be provided together.',\n    )\n  }\n\n  if (isPresent(feeCurrency) && !isAddress(feeCurrency)) {\n    throw new BaseError(\n      '`feeCurrency` MUST be a token address for CIP-42 transactions.',\n    )\n  }\n\n  if (isPresent(gatewayFeeRecipient) && !isAddress(gatewayFeeRecipient)) {\n    throw new InvalidAddressError(gatewayFeeRecipient)\n  }\n\n  if (isEmpty(feeCurrency) && isEmpty(gatewayFeeRecipient)) {\n    throw new BaseError(\n      'Either `feeCurrency` or `gatewayFeeRecipient` must be provided for CIP-42 transactions.',\n    )\n  }\n}\n\nexport function assertTransactionCIP64(\n  transaction: TransactionSerializableCIP64,\n) {\n  const {\n    chainId,\n    maxPriorityFeePerGas,\n    gasPrice,\n    maxFeePerGas,\n    to,\n    feeCurrency,\n  } = transaction\n\n  if (chainId <= 0) throw new InvalidChainIdError({ chainId })\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n\n  if (gasPrice)\n    throw new BaseError(\n      '`gasPrice` is not a valid CIP-64 Transaction attribute.',\n    )\n\n  if (isPresent(maxFeePerGas) && maxFeePerGas > MAX_MAX_FEE_PER_GAS)\n    throw new FeeCapTooHighError({ maxFeePerGas })\n  if (\n    isPresent(maxPriorityFeePerGas) &&\n    isPresent(maxFeePerGas) &&\n    maxPriorityFeePerGas > maxFeePerGas\n  )\n    throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas })\n\n  if (isPresent(feeCurrency) && !isAddress(feeCurrency)) {\n    throw new BaseError(\n      '`feeCurrency` MUST be a token address for CIP-64 transactions.',\n    )\n  }\n\n  if (isEmpty(feeCurrency)) {\n    throw new BaseError(\n      '`feeCurrency` must be provided for CIP-64 transactions.',\n    )\n  }\n}\n","import { fees } from './fees.js'\nimport { formatters } from './formatters.js'\nimport { serializers } from './serializers.js'\n\nexport const chainConfig = {\n  formatters,\n  serializers,\n  fees,\n} as const\n","import type { ChainFormatters } from '../types/chain.js'\nimport type { Hash } from '../types/misc.js'\nimport type { RpcTransaction } from '../types/rpc.js'\nimport { hexToBigInt } from '../utils/encoding/fromHex.js'\nimport { defineBlock } from '../utils/formatters/block.js'\nimport {\n  defineTransaction,\n  formatTransaction,\n} from '../utils/formatters/transaction.js'\nimport { defineTransactionRequest } from '../utils/formatters/transactionRequest.js'\nimport type {\n  CeloBlockOverrides,\n  CeloRpcTransaction,\n  CeloRpcTransactionRequest,\n  CeloTransaction,\n  CeloTransactionRequest,\n} from './types.js'\nimport { isCIP64 } from './utils.js'\n\nexport const formatters = {\n  block: /*#__PURE__*/ defineBlock({\n    exclude: ['difficulty', 'gasLimit', 'mixHash', 'nonce', 'uncles'],\n    format(\n      args: CeloBlockOverrides & {\n        transactions: Hash[] | CeloRpcTransaction[]\n      },\n    ): CeloBlockOverrides & {\n      transactions: Hash[] | CeloTransaction[]\n    } {\n      const transactions = args.transactions?.map((transaction) => {\n        if (typeof transaction === 'string') return transaction\n        return {\n          ...formatTransaction(transaction as RpcTransaction),\n          feeCurrency: transaction.feeCurrency,\n          ...(transaction.type !== '0x7b'\n            ? {\n                gatewayFee: transaction.gatewayFee\n                  ? hexToBigInt(transaction.gatewayFee)\n                  : null,\n                gatewayFeeRecipient: transaction.gatewayFeeRecipient || null,\n              }\n            : {}),\n        }\n      }) as Hash[] | CeloTransaction[]\n      return {\n        randomness: args.randomness,\n        transactions,\n      }\n    },\n  }),\n  transaction: /*#__PURE__*/ defineTransaction({\n    format(args: CeloRpcTransaction): CeloTransaction {\n      const transaction = { feeCurrency: args.feeCurrency } as CeloTransaction\n\n      if (args.type === '0x7b') transaction.type = 'cip64'\n      else {\n        if (args.type === '0x7c') transaction.type = 'cip42'\n\n        transaction.gatewayFee = args.gatewayFee\n          ? hexToBigInt(args.gatewayFee)\n          : null\n        transaction.gatewayFeeRecipient = args.gatewayFeeRecipient\n      }\n\n      return transaction\n    },\n  }),\n\n  transactionRequest: /*#__PURE__*/ defineTransactionRequest({\n    format(args: CeloTransactionRequest): CeloRpcTransactionRequest {\n      const request = {\n        feeCurrency: args.feeCurrency,\n      } as CeloRpcTransactionRequest\n\n      if (isCIP64(args)) {\n        request.type = '0x7b'\n      }\n\n      return request\n    },\n  }),\n} as const satisfies ChainFormatters\n","import { chainConfig } from '../../celo/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const celo = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 42_220,\n  name: 'Celo',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'CELO',\n    symbol: 'CELO',\n  },\n  rpcUrls: {\n    default: { http: ['https://forno.celo.org'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Celo Explorer',\n      url: 'https://celoscan.io',\n      apiUrl: 'https://api.celoscan.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 13112599,\n    },\n  },\n  testnet: false,\n})\n","import { chainConfig } from '../../celo/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const celoAlfajores = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 44_787,\n  name: 'Alfajores',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'CELO',\n    symbol: 'A-CELO',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://alfajores-forno.celo-testnet.org'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Celo Explorer',\n      url: 'https://explorer.celo.org/alfajores',\n      apiUrl: 'https://explorer.celo.org/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 14569001,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const chiliz = /*#__PURE__*/ defineChain({\n  id: 88_888,\n  name: 'Chiliz Chain',\n  network: 'chiliz-chain',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'CHZ',\n    symbol: 'CHZ',\n  },\n  rpcUrls: {\n    default: {\n      http: [\n        'https://rpc.ankr.com/chiliz',\n        'https://chiliz-rpc.publicnode.com',\n      ],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Chiliz Explorer',\n      url: 'https://scan.chiliz.com',\n      apiUrl: 'https://scan.chiliz.com/api',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const classic = /*#__PURE__*/ defineChain({\n  id: 61,\n  name: 'Ethereum Classic',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'ETC',\n    symbol: 'ETC',\n  },\n  rpcUrls: {\n    default: { http: ['https://etc.rivet.link'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://blockscout.com/etc/mainnet',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const confluxESpace = /*#__PURE__*/ defineChain({\n  id: 1_030,\n  name: 'Conflux eSpace',\n  nativeCurrency: { name: 'Conflux', symbol: 'CFX', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://evm.confluxrpc.org'],\n      webSocket: ['wss://evm.confluxrpc.org/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'ConfluxScan',\n      url: 'https://evm.confluxscan.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xEFf0078910f638cd81996cc117bccD3eDf2B072F',\n      blockCreated: 68602935,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const confluxESpaceTestnet = /*#__PURE__*/ defineChain({\n  id: 71,\n  name: 'Conflux eSpace Testnet',\n  network: 'cfx-espace-testnet',\n  testnet: true,\n  nativeCurrency: { name: 'Conflux', symbol: 'CFX', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://evmtestnet.confluxrpc.org'],\n      webSocket: ['wss://evmtestnet.confluxrpc.org/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'ConfluxScan',\n      url: 'https://evmtestnet.confluxscan.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xEFf0078910f638cd81996cc117bccD3eDf2B072F',\n      blockCreated: 117499050,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const coreDao = /*#__PURE__*/ defineChain({\n  id: 1116,\n  name: 'Core Dao',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Core',\n    symbol: 'CORE',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.coredao.org'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'CoreDao',\n      url: 'https://scan.coredao.org',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 11_907_934,\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const cronos = /*#__PURE__*/ defineChain({\n  id: 25,\n  name: 'Cronos Mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Cronos',\n    symbol: 'CRO',\n  },\n  rpcUrls: {\n    default: { http: ['https://evm.cronos.org'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Cronos Explorer',\n      url: 'https://explorer.cronos.org',\n      apiUrl: 'https://explorer-api.cronos.org/mainnet/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 1963112,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const cronosTestnet = /*#__PURE__*/ defineChain({\n  id: 338,\n  name: 'Cronos Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'CRO',\n    symbol: 'tCRO',\n  },\n  rpcUrls: {\n    default: { http: ['https://evm-t3.cronos.org'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Cronos Explorer',\n      url: 'https://cronos.org/explorer/testnet3',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 10191251,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const crossbell = /*#__PURE__*/ defineChain({\n  id: 3_737,\n  name: 'Crossbell',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'CSB',\n    symbol: 'CSB',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.crossbell.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'CrossScan',\n      url: 'https://scan.crossbell.io',\n      apiUrl: 'https://scan.crossbell.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 38_246_031,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const cyber = /*#__PURE__*/ defineChain({\n  id: 7_560,\n  name: 'Cyber',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://cyber.alt.technology'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://cyberscan.co',\n      apiUrl: 'https://cyberscan.co/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 0,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const cyberTestnet = /*#__PURE__*/ defineChain({\n  id: 111_557_560,\n  name: 'Cyber Testnet',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://cyber-testnet.alt.technology'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://testnet.cyberscan.co',\n      apiUrl: 'https://testnet.cyberscan.co/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xffc391F0018269d4758AEA1a144772E8FB99545E',\n      blockCreated: 304545,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const darwinia = /*#__PURE__*/ defineChain({\n  id: 46,\n  name: 'Darwinia Network',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'RING',\n    symbol: 'RING',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.darwinia.network'],\n      webSocket: ['wss://rpc.darwinia.network'],\n    },\n  },\n  blockExplorers: {\n    default: { name: 'Explorer', url: 'https://darwinia.subscan.io' },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 69420,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const defichainEvm = /*#__PURE__*/ defineChain({\n  id: 1130,\n  network: 'defichain-evm',\n  name: 'DeFiChain EVM Mainnet',\n  nativeCurrency: {\n    name: 'DeFiChain',\n    symbol: 'DFI',\n    decimals: 8,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://eth.mainnet.ocean.jellyfishsdk.com'],\n    },\n    public: {\n      http: ['https://eth.mainnet.ocean.jellyfishsdk.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'DeFiScan',\n      url: 'https://meta.defiscan.live',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 137852,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const defichainEvmTestnet = /*#__PURE__*/ defineChain({\n  id: 1131,\n  network: 'defichain-evm-testnet',\n  name: 'DeFiChain EVM Testnet',\n  nativeCurrency: {\n    name: 'DeFiChain',\n    symbol: 'DFI',\n    decimals: 8,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://eth.testnet.ocean.jellyfishsdk.com'],\n    },\n    public: {\n      http: ['https://eth.testnet.ocean.jellyfishsdk.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'DeFiScan',\n      url: 'https://meta.defiscan.live/?network=TestNet',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 156462,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const degen = /*#__PURE__*/ defineChain({\n  id: 666666666,\n  name: 'Degen',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Degen',\n    symbol: 'DEGEN',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.degen.tips'],\n      webSocket: ['wss://rpc.degen.tips'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Degen Chain Explorer',\n      url: 'https://explorer.degen.tips',\n      apiUrl: 'https://explorer.degen.tips/api/v2',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const dfk = /*#__PURE__*/ defineChain({\n  id: 53_935,\n  name: 'DFK Chain',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Jewel',\n    symbol: 'JEWEL',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://subnets.avax.network/defi-kingdoms/dfk-chain/rpc'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'DFKSubnetScan',\n      url: 'https://subnets.avax.network/defi-kingdoms',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 14790551,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const dodochainTestnet = defineChain({\n  id: 53457,\n  name: 'DODOchain Testnet',\n  nativeCurrency: { decimals: 18, name: 'DODO', symbol: 'DODO' },\n  rpcUrls: {\n    default: {\n      http: ['https://dodochain-testnet.alt.technology'],\n      webSocket: ['wss://dodochain-testnet.alt.technology/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'DODOchain Testnet (Sepolia) Explorer',\n      url: 'https://testnet-scan.dodochain.com',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const dogechain = /*#__PURE__*/ defineChain({\n  id: 2_000,\n  name: 'Dogechain',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Dogechain',\n    symbol: 'DC',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.dogechain.dog'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'DogeChainExplorer',\n      url: 'https://explorer.dogechain.dog',\n      apiUrl: 'https://explorer.dogechain.dog/api',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const dreyerxMainnet = /*#__PURE__*/ defineChain({\n  id: 23451,\n  name: 'DreyerX Mainnet',\n  nativeCurrency: {\n    name: 'DreyerX',\n    symbol: 'DRX',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.dreyerx.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'DreyerX Scan',\n      url: 'https://scan.dreyerx.com',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const edgeless = /*#__PURE__*/ defineChain({\n  id: 2_026,\n  name: 'Edgeless Network',\n  nativeCurrency: {\n    name: 'Edgeless Wrapped ETH',\n    symbol: 'EwETH',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.edgeless.network/http'],\n      webSocket: ['wss://rpc.edgeless.network/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Edgeless Explorer',\n      url: 'https://explorer.edgeless.network',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const edgelessTestnet = /*#__PURE__*/ defineChain({\n  id: 202,\n  name: 'Edgeless Testnet',\n  nativeCurrency: {\n    name: 'Edgeless Wrapped ETH',\n    symbol: 'EwETH',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://edgeless-testnet.rpc.caldera.xyz/http'],\n      webSocket: ['wss://edgeless-testnet.rpc.caldera.xyz/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Edgeless Testnet Explorer',\n      url: 'https://testnet.explorer.edgeless.network',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const edgeware = /*#__PURE__*/ defineChain({\n  id: 2021,\n  name: 'Edgeware EdgeEVM Mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Edgeware',\n    symbol: 'EDG',\n  },\n  rpcUrls: {\n    default: { http: ['https://edgeware-evm.jelliedowl.net'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Edgscan by Bharathcoorg',\n      url: 'https://edgscan.live',\n      apiUrl: 'https://edgscan.live/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 18117872,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const edgewareTestnet = /*#__PURE__*/ defineChain({\n  id: 2022,\n  name: 'Beresheet BereEVM Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Testnet EDG',\n    symbol: 'tEDG',\n  },\n  rpcUrls: {\n    default: { http: ['https://beresheet-evm.jelliedowl.net'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Edgscan by Bharathcoorg',\n      url: 'https://testnet.edgscan.live',\n      apiUrl: 'https://testnet.edgscan.live/api',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const eon = /*#__PURE__*/ defineChain({\n  id: 7_332,\n  name: 'Horizen EON',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'ZEN',\n    symbol: 'ZEN',\n  },\n  rpcUrls: {\n    default: { http: ['https://eon-rpc.horizenlabs.io/ethv1'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'EON Explorer',\n      url: 'https://eon-explorer.horizenlabs.io',\n    },\n  },\n  contracts: {},\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const eos = /*#__PURE__*/ defineChain({\n  id: 17777,\n  name: 'EOS EVM',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'EOS',\n    symbol: 'EOS',\n  },\n  rpcUrls: {\n    default: { http: ['https://api.evm.eosnetwork.com'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'EOS EVM Explorer',\n      url: 'https://explorer.evm.eosnetwork.com',\n      apiUrl: 'https://explorer.evm.eosnetwork.com/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 7943933,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const eosTestnet = /*#__PURE__*/ defineChain({\n  id: 15557,\n  name: 'EOS EVM Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'EOS',\n    symbol: 'EOS',\n  },\n  rpcUrls: {\n    default: { http: ['https://api.testnet.evm.eosnetwork.com'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'EOS EVM Testnet Explorer',\n      url: 'https://explorer.testnet.evm.eosnetwork.com',\n      apiUrl: 'https://explorer.testnet.evm.eosnetwork.com/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 9067940,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const etherlinkTestnet = /*#__PURE__*/ defineChain({\n  id: 128123,\n  name: 'Etherlink Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Tez',\n    symbol: 'XTZ',\n  },\n  rpcUrls: {\n    default: { http: ['https://node.ghostnet.etherlink.com'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Etherlink Testnet',\n      url: 'https://testnet-explorer.etherlink.com',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const evmos = /*#__PURE__*/ defineChain({\n  id: 9_001,\n  name: 'Evmos',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Evmos',\n    symbol: 'EVMOS',\n  },\n  rpcUrls: {\n    default: { http: ['https://eth.bd.evmos.org:8545'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Evmos Block Explorer',\n      url: 'https://escan.live',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const evmosTestnet = /*#__PURE__*/ defineChain({\n  id: 9_000,\n  name: 'Evmos Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Evmos',\n    symbol: 'EVMOS',\n  },\n  rpcUrls: {\n    default: { http: ['https://eth.bd.evmos.dev:8545'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Evmos Testnet Block Explorer',\n      url: 'https://evm.evmos.dev/',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const ekta = /*#__PURE__*/ defineChain({\n  id: 1994,\n  name: 'Ekta',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'EKTA',\n    symbol: 'EKTA',\n  },\n  rpcUrls: {\n    default: { http: ['https://main.ekta.io'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Ektascan',\n      url: 'https://ektascan.io',\n      apiUrl: 'https://ektascan.io/api',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const ektaTestnet = /*#__PURE__*/ defineChain({\n  id: 1004,\n  name: 'Ekta Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'EKTA',\n    symbol: 'EKTA',\n  },\n  rpcUrls: {\n    default: { http: ['https://test.ekta.io:8545'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Test Ektascan',\n      url: 'https://test.ektascan.io',\n      apiUrl: 'https://test.ektascan.io/api',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const fantom = /*#__PURE__*/ defineChain({\n  id: 250,\n  name: 'Fantom',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Fantom',\n    symbol: 'FTM',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.ankr.com/fantom'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'FTMScan',\n      url: 'https://ftmscan.com',\n      apiUrl: 'https://api.ftmscan.com/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 33001987,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const fantomSonicTestnet = /*#__PURE__*/ defineChain({\n  id: 64_240,\n  name: 'Fantom Sonic Open Testnet',\n  network: 'fantom-sonic-testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Fantom',\n    symbol: 'FTM',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpcapi.sonic.fantom.network'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Fantom Sonic Open Testnet Explorer',\n      url: 'https://public-sonic.fantom.network',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const fantomTestnet = /*#__PURE__*/ defineChain({\n  id: 4_002,\n  name: 'Fantom Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Fantom',\n    symbol: 'FTM',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.testnet.fantom.network'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'FTMScan',\n      url: 'https://testnet.ftmscan.com',\n      apiUrl: 'https://testnet.ftmscan.com/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 8328688,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const fibo = /*#__PURE__*/ defineChain({\n  id: 12306,\n  name: 'Fibo Chain',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'fibo',\n    symbol: 'FIBO',\n  },\n  rpcUrls: {\n    default: { http: ['https://network.hzroc.art'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'FiboScan',\n      url: 'https://scan.fibochain.org',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const filecoin = /*#__PURE__*/ defineChain({\n  id: 314,\n  name: 'Filecoin Mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'filecoin',\n    symbol: 'FIL',\n  },\n  rpcUrls: {\n    default: { http: ['https://api.node.glif.io/rpc/v1'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Filfox',\n      url: 'https://filfox.info/en',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 3328594,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const filecoinCalibration = /*#__PURE__*/ defineChain({\n  id: 314_159,\n  name: 'Filecoin Calibration',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'testnet filecoin',\n    symbol: 'tFIL',\n  },\n  rpcUrls: {\n    default: { http: ['https://api.calibration.node.glif.io/rpc/v1'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Filscan',\n      url: 'https://calibration.filscan.io',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const filecoinHyperspace = /*#__PURE__*/ defineChain({\n  id: 314_1,\n  name: 'Filecoin Hyperspace',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'testnet filecoin',\n    symbol: 'tFIL',\n  },\n  rpcUrls: {\n    default: { http: ['https://api.hyperspace.node.glif.io/rpc/v1'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Filfox',\n      url: 'https://hyperspace.filfox.info/en',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const flare = /*#__PURE__*/ defineChain({\n  id: 14,\n  name: 'Flare Mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'flare',\n    symbol: 'FLR',\n  },\n  rpcUrls: {\n    default: { http: ['https://flare-api.flare.network/ext/C/rpc'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Flare Explorer',\n      url: 'https://flare-explorer.flare.network',\n      apiUrl: 'https://flare-explorer.flare.network/api',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const flareTestnet = /*#__PURE__*/ defineChain({\n  id: 114,\n  name: 'Coston2',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'coston2flare',\n    symbol: 'C2FLR',\n  },\n  rpcUrls: {\n    default: { http: ['https://coston2-api.flare.network/ext/C/rpc'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Coston2 Explorer',\n      url: 'https://coston2-explorer.flare.network',\n      apiUrl: 'https://coston2-explorer.flare.network/api',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const flowPreviewnet = /*#__PURE__*/ defineChain({\n  id: 646,\n  name: 'FlowEVM Previewnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Flow',\n    symbol: 'FLOW',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://previewnet.evm.nodes.onflow.org'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Previewnet Explorer',\n      url: 'https://previewnet.flowdiver.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 6205,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const flowMainnet = /*#__PURE__*/ defineChain({\n  id: 747,\n  name: 'FlowEVM Mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Flow',\n    symbol: 'FLOW',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.evm.nodes.onflow.org'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Mainnet Explorer',\n      url: 'https://flowdiver.io',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const flowTestnet = /*#__PURE__*/ defineChain({\n  id: 545,\n  name: 'FlowEVM Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Flow',\n    symbol: 'FLOW',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://testnet.evm.nodes.onflow.org'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Flow Diver',\n      url: 'https://testnet.flowdiver.io',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const foundry = /*#__PURE__*/ defineChain({\n  id: 31_337,\n  name: 'Foundry',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Ether',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: {\n      http: ['http://127.0.0.1:8545'],\n      webSocket: ['ws://127.0.0.1:8545'],\n    },\n  },\n})\n","import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 1 // mainnet\n\nexport const fraxtal = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 252,\n  name: 'Fraxtal',\n  nativeCurrency: { name: 'Frax Ether', symbol: 'frxETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.frax.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'fraxscan',\n      url: 'https://fraxscan.com',\n      apiUrl: 'https://api.fraxscan.com/api',\n    },\n  },\n  contracts: {\n    ...chainConfig.contracts,\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0x66CC916Ed5C6C2FA97014f7D1cD141528Ae171e4',\n      },\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n    },\n    portal: {\n      [sourceId]: {\n        address: '0x36cb65c1967A0Fb0EEE11569C51C2f2aA1Ca6f6D',\n        blockCreated: 19135323,\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0x34C0bD5877A5Ee7099D0f5688D65F4bB9158BDE2',\n        blockCreated: 19135323,\n      },\n    },\n  },\n  sourceId,\n})\n","import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 17000 // holesky\n\nexport const fraxtalTestnet = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 2522,\n  name: 'Fraxtal Testnet',\n  nativeCurrency: { name: 'Frax Ether', symbol: 'frxETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.testnet.frax.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'fraxscan testnet',\n      url: 'https://holesky.fraxscan.com',\n      apiUrl: 'https://api-holesky.fraxscan.com/api',\n    },\n  },\n  contracts: {\n    ...chainConfig.contracts,\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0x715EA64DA13F4d0831ece4Ad3E8c1aa013167F32',\n      },\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n    },\n    portal: {\n      [sourceId]: {\n        address: '0xB9c64BfA498d5b9a8398Ed6f46eb76d90dE5505d',\n        blockCreated: 318416,\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0x0BaafC217162f64930909aD9f2B27125121d6332',\n        blockCreated: 318416,\n      },\n    },\n  },\n  sourceId,\n})\n","import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 11_155_111 // sepolia\n\nexport const funkiSepolia = defineChain({\n  ...chainConfig,\n  id: 3397901,\n  network: 'funkiSepolia',\n  name: 'Funki Sepolia Sandbox',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://funki-testnet.alt.technology'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Funki Sepolia Sandbox Explorer',\n      url: 'https://sepolia-sandbox.funkichain.com/',\n    },\n  },\n  testnet: true,\n  contracts: {\n    ...chainConfig.contracts,\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 1620204,\n    },\n  },\n  sourceId,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const fuse = /*#__PURE__*/ defineChain({\n  id: 122,\n  name: 'Fuse',\n  nativeCurrency: { name: 'Fuse', symbol: 'FUSE', decimals: 18 },\n  rpcUrls: {\n    default: { http: ['https://rpc.fuse.io'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Fuse Explorer',\n      url: 'https://explorer.fuse.io',\n      apiUrl: 'https://explorer.fuse.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 16146628,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const fuseSparknet = /*#__PURE__*/ defineChain({\n  id: 123,\n  name: 'Fuse Sparknet',\n  nativeCurrency: { name: 'Spark', symbol: 'SPARK', decimals: 18 },\n  rpcUrls: {\n    default: { http: ['https://rpc.fusespark.io'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Sparkent Explorer',\n      url: 'https://explorer.fusespark.io',\n      apiUrl: 'https://explorer.fusespark.io/api',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const iotex = /*#__PURE__*/ defineChain({\n  id: 4_689,\n  name: 'IoTeX',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'IoTeX',\n    symbol: 'IOTX',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://babel-api.mainnet.iotex.io'],\n      webSocket: ['wss://babel-api.mainnet.iotex.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'IoTeXScan',\n      url: 'https://iotexscan.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 22163670,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const iotexTestnet = /*#__PURE__*/ defineChain({\n  id: 4_690,\n  name: 'IoTeX Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'IoTeX',\n    symbol: 'IOTX',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://babel-api.testnet.iotex.io'],\n      webSocket: ['wss://babel-api.testnet.iotex.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'IoTeXScan',\n      url: 'https://testnet.iotexscan.io',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const jbc = /*#__PURE__*/ defineChain({\n  id: 8899,\n  name: 'JIBCHAIN L1',\n  network: 'jbc',\n  nativeCurrency: { name: 'JBC', symbol: 'JBC', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc-l1.jibchain.net'],\n    },\n    public: {\n      http: ['https://rpc-l1.jibchain.net'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://exp-l1.jibchain.net',\n      apiUrl: 'https://exp-l1.jibchain.net/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xc0C8C486D1466C57Efe13C2bf000d4c56F47CBdC',\n      blockCreated: 2299048,\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const jbcTestnet = /*#__PURE__*/ defineChain({\n  id: 88991,\n  name: 'Jibchain Testnet',\n  nativeCurrency: { name: 'tJBC', symbol: 'tJBC', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.testnet.jibchain.net'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://exp.testnet.jibchain.net',\n      apiUrl: 'https://exp.testnet.jibchain.net/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xa1a858ad9041B4741e620355a3F96B3c78e70ecE',\n      blockCreated: 32848,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const karura = /*#__PURE__*/ defineChain({\n  id: 686,\n  name: 'Karura',\n  network: 'karura',\n  nativeCurrency: {\n    name: 'Karura',\n    symbol: 'KAR',\n    decimals: 18,\n  },\n  rpcUrls: {\n    public: {\n      http: ['https://eth-rpc-karura.aca-api.network'],\n      webSocket: ['wss://eth-rpc-karura.aca-api.network'],\n    },\n    default: {\n      http: ['https://eth-rpc-karura.aca-api.network'],\n      webSocket: ['wss://eth-rpc-karura.aca-api.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Karura Blockscout',\n      url: 'https://blockscout.karura.network',\n      apiUrl: 'https://blockscout.karura.network/api',\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const gobi = /*#__PURE__*/ defineChain({\n  id: 1_663,\n  name: 'Horizen Gobi Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Test ZEN',\n    symbol: 'tZEN',\n  },\n  rpcUrls: {\n    default: { http: ['https://gobi-testnet.horizenlabs.io/ethv1'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Gobi Explorer',\n      url: 'https://gobi-explorer.horizen.io',\n    },\n  },\n  contracts: {},\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const goerli = /*#__PURE__*/ defineChain({\n  id: 5,\n  name: 'Goerli',\n  nativeCurrency: { name: 'Goerli Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.ankr.com/eth_goerli'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Etherscan',\n      url: 'https://goerli.etherscan.io',\n      apiUrl: 'https://api-goerli.etherscan.io/api',\n    },\n  },\n  contracts: {\n    ensRegistry: {\n      address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n    },\n    ensUniversalResolver: {\n      address: '0xfc4AC75C46C914aF5892d6d3eFFcebD7917293F1',\n      blockCreated: 10_339_206,\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 6507670,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const gnosis = /*#__PURE__*/ defineChain({\n  id: 100,\n  name: 'Gnosis',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Gnosis',\n    symbol: 'xDAI',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.gnosischain.com'],\n      webSocket: ['wss://rpc.gnosischain.com/wss'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Gnosisscan',\n      url: 'https://gnosisscan.io',\n      apiUrl: 'https://api.gnosisscan.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 21022491,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const gnosisChiado = /*#__PURE__*/ defineChain({\n  id: 10_200,\n  name: 'Gnosis Chiado',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Gnosis',\n    symbol: 'xDAI',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.chiadochain.net'],\n      webSocket: ['wss://rpc.chiadochain.net/wss'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://blockscout.chiadochain.net',\n      apiUrl: 'https://blockscout.chiadochain.net/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 4967313,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const hardhat = /*#__PURE__*/ defineChain({\n  id: 31_337,\n  name: 'Hardhat',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Ether',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: { http: ['http://127.0.0.1:8545'] },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const harmonyOne = /*#__PURE__*/ defineChain({\n  id: 1_666_600_000,\n  name: 'Harmony One',\n  nativeCurrency: {\n    name: 'Harmony',\n    symbol: 'ONE',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.ankr.com/harmony'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Harmony Explorer',\n      url: 'https://explorer.harmony.one',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 24185753,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const haqqMainnet = /*#__PURE__*/ defineChain({\n  id: 11235,\n  name: 'HAQQ Mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Islamic Coin',\n    symbol: 'ISLM',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.eth.haqq.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'HAQQ Explorer',\n      url: 'https://explorer.haqq.network',\n      apiUrl: 'https://explorer.haqq.network/api',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const haqqTestedge2 = /*#__PURE__*/ defineChain({\n  id: 54211,\n  name: 'HAQQ Testedge 2',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Islamic Coin',\n    symbol: 'ISLMT',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.eth.testedge2.haqq.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'HAQQ Explorer',\n      url: 'https://explorer.testedge2.haqq.network',\n      apiUrl: 'https://explorer.testedge2.haqq.network/api',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const hedera = /*#__PURE__*/ defineChain({\n  id: 295,\n  name: 'Hedera Mainnet',\n  network: 'hedera-mainnet',\n  nativeCurrency: {\n    symbol: 'HBAR',\n    name: 'HBAR',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.hashio.io/api'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Hashscan',\n      url: 'https://hashscan.io/mainnet',\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const hederaTestnet = /*#__PURE__*/ defineChain({\n  id: 296,\n  name: 'Hedera Testnet',\n  network: 'hedera-testnet',\n  nativeCurrency: {\n    symbol: 'HBAR',\n    name: 'HBAR',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://testnet.hashio.io/api'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Hashscan',\n      url: 'https://hashscan.io/testnet',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const hederaPreviewnet = /*#__PURE__*/ defineChain({\n  id: 297,\n  name: 'Hedera Previewnet',\n  network: 'hedera-previewnet',\n  nativeCurrency: {\n    symbol: 'HBAR',\n    name: 'HBAR',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://previewnet.hashio.io/api'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Hashscan',\n      url: 'https://hashscan.io/previewnet',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const holesky = /*#__PURE__*/ defineChain({\n  id: 17000,\n  name: 'Holesky',\n  nativeCurrency: { name: 'Holesky Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://ethereum-holesky-rpc.publicnode.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Etherscan',\n      url: 'https://holesky.etherscan.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 77,\n    },\n    ensRegistry: {\n      address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n      blockCreated: 801613,\n    },\n    ensUniversalResolver: {\n      address: '0xa6AC935D4971E3CD133b950aE053bECD16fE7f3b',\n      blockCreated: 973484,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const immutableZkEvm = /*#__PURE__*/ defineChain({\n  id: 13371,\n  name: 'Immutable zkEVM',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Immutable Coin',\n    symbol: 'IMX',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.immutable.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Immutable Explorer',\n      url: 'https://explorer.immutable.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0x236bdA4589e44e6850f5aC6a74BfCa398a86c6c0',\n      blockCreated: 4335972,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const immutableZkEvmTestnet = /*#__PURE__*/ defineChain({\n  id: 13473,\n  name: 'Immutable zkEVM Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Immutable Coin',\n    symbol: 'IMX',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.testnet.immutable.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Immutable Testnet Explorer',\n      url: 'https://explorer.testnet.immutable.com/',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0x2CC787Ed364600B0222361C4188308Fa8E68bA60',\n      blockCreated: 5977391,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const inEVM = /*#__PURE__*/ defineChain({\n  id: 2525,\n  name: 'inEVM Mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Injective',\n    symbol: 'INJ',\n  },\n  rpcUrls: {\n    default: { http: ['https://mainnet.rpc.inevm.com/http'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'inEVM Explorer',\n      url: 'https://inevm.calderaexplorer.xyz',\n      apiUrl: 'https://inevm.calderaexplorer.xyz/api/v2',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 118606,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const kakarotSepolia = /*#__PURE__*/ defineChain({\n  id: 107107114116,\n  name: 'Kakarot Sepolia',\n  nativeCurrency: {\n    name: 'Ether',\n    symbol: 'ETH',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://sepolia-rpc.kakarot.org'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Kakarot Scan',\n      url: 'https://sepolia.kakarotscan.org',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const kava = /*#__PURE__*/ defineChain({\n  id: 2222,\n  name: 'Kava EVM',\n  network: 'kava-mainnet',\n  nativeCurrency: {\n    name: 'Kava',\n    symbol: 'KAVA',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: { http: ['https://evm.kava.io'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Kava EVM Explorer',\n      url: 'https://kavascan.com',\n      apiUrl: 'https://kavascan.com/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 3661165,\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const kavaTestnet = /*#__PURE__*/ defineChain({\n  id: 2221,\n  name: 'Kava EVM Testnet',\n  network: 'kava-testnet',\n  nativeCurrency: {\n    name: 'Kava',\n    symbol: 'KAVA',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: { http: ['https://evm.testnet.kava.io'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Kava EVM Testnet Explorer',\n      url: 'https://testnet.kavascan.com/',\n      apiUrl: 'https://testnet.kavascan.com/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xDf1D724A7166261eEB015418fe8c7679BBEa7fd6',\n      blockCreated: 7242179,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const kcc = /*#__PURE__*/ defineChain({\n  id: 321,\n  name: 'KCC Mainnet',\n  network: 'KCC Mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'KCS',\n    symbol: 'KCS',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://kcc-rpc.com'],\n    },\n    public: {\n      http: ['https://kcc-rpc.com'],\n    },\n  },\n  blockExplorers: {\n    default: { name: 'KCC Explorer', url: 'https://explorer.kcc.io' },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 11760430,\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const klaytn = /*#__PURE__*/ defineChain({\n  id: 8_217,\n  name: 'Klaytn',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Klaytn',\n    symbol: 'KLAY',\n  },\n  rpcUrls: {\n    default: { http: ['https://public-en-cypress.klaytn.net'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'KlaytnScope',\n      url: 'https://scope.klaytn.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 96002415,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const klaytnBaobab = /*#__PURE__*/ defineChain({\n  id: 1_001,\n  name: 'Klaytn Baobab Testnet',\n  network: 'klaytn-baobab',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Baobab Klaytn',\n    symbol: 'KLAY',\n  },\n  rpcUrls: {\n    default: { http: ['https://public-en-baobab.klaytn.net'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'KlaytnScope',\n      url: 'https://baobab.klaytnscope.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 123390593,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const kroma = /*#__PURE__*/ defineChain({\n  id: 255,\n  name: 'Kroma',\n  nativeCurrency: { name: 'ETH', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://api.kroma.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Kroma Explorer',\n      url: 'https://blockscout.kroma.network',\n      apiUrl: 'https://blockscout.kroma.network/api',\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const kromaSepolia = /*#__PURE__*/ defineChain({\n  id: 2358,\n  name: 'Kroma Sepolia',\n  nativeCurrency: { name: 'Sepolia Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://api.sepolia.kroma.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Kroma Sepolia Explorer',\n      url: 'https://blockscout.sepolia.kroma.network',\n      apiUrl: 'https://blockscout.sepolia.kroma.network/api',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const l3x = /*#__PURE__*/ defineChain({\n  id: 12324,\n  name: 'L3X Protocol',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc-mainnet.l3x.com'],\n      webSocket: ['wss://rpc-mainnet.l3x.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'L3X Mainnet Explorer',\n      url: 'https://explorer.l3x.com',\n      apiUrl: 'https://explorer.l3x.com/api/v2',\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const l3xTestnet = /*#__PURE__*/ defineChain({\n  id: 12325,\n  name: 'L3X Protocol Testnet',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc-testnet.l3x.com'],\n      webSocket: ['wss://rpc-testnet.l3x.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'L3X Testnet Explorer',\n      url: 'https://explorer-testnet.l3x.com',\n      apiUrl: 'https://explorer-testnet.l3x.com/api/v2',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const lightlinkPegasus = /*#__PURE__*/ defineChain({\n  id: 1_891,\n  name: 'LightLink Pegasus Testnet',\n  network: 'lightlink-pegasus',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Ether',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://replicator.pegasus.lightlink.io/rpc/v1'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'LightLink Pegasus Explorer',\n      url: 'https://pegasus.lightlink.io',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const lightlinkPhoenix = /*#__PURE__*/ defineChain({\n  id: 1_890,\n  name: 'LightLink Phoenix Mainnet',\n  network: 'lightlink-phoenix',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Ether',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://replicator.phoenix.lightlink.io/rpc/v1'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'LightLink Phoenix Explorer',\n      url: 'https://phoenix.lightlink.io',\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const linea = /*#__PURE__*/ defineChain({\n  id: 59_144,\n  name: 'Linea Mainnet',\n  nativeCurrency: { name: 'Linea Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.linea.build'],\n      webSocket: ['wss://rpc.linea.build'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Etherscan',\n      url: 'https://lineascan.build',\n      apiUrl: 'https://api.lineascan.build/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 42,\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const lineaGoerli = /*#__PURE__*/ defineChain({\n  id: 59_140,\n  name: 'Linea Goerli Testnet',\n  nativeCurrency: { name: 'Linea Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.goerli.linea.build'],\n      webSocket: ['wss://rpc.goerli.linea.build'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Etherscan',\n      url: 'https://goerli.lineascan.build',\n      apiUrl: 'https://api-goerli.lineascan.build/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 498623,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const lineaSepolia = /*#__PURE__*/ defineChain({\n  id: 59_141,\n  name: 'Linea Sepolia Testnet',\n  nativeCurrency: { name: 'Linea Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.sepolia.linea.build'],\n      webSocket: ['wss://rpc.sepolia.linea.build'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Etherscan',\n      url: 'https://sepolia.lineascan.build',\n      apiUrl: 'https://api-sepolia.lineascan.build/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 227427,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const lineaTestnet = /*#__PURE__*/ defineChain({\n  id: 59_140,\n  name: 'Linea Goerli Testnet',\n  nativeCurrency: { name: 'Linea Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.goerli.linea.build'],\n      webSocket: ['wss://rpc.goerli.linea.build'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Etherscan',\n      url: 'https://goerli.lineascan.build',\n      apiUrl: 'https://goerli.lineascan.build/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 498623,\n    },\n  },\n  testnet: true,\n})\n","import { maxUint16 } from '../../constants/number.js'\n\nexport const gasPerPubdataDefault = 50000n\nexport const maxBytecodeSize = maxUint16 * 32n\n","import type { ChainFormatters } from '../types/chain.js'\nimport type { Hash } from '../types/misc.js'\nimport { hexToBigInt, hexToNumber } from '../utils/encoding/fromHex.js'\nimport { hexToBytes } from '../utils/encoding/toBytes.js'\nimport { toHex } from '../utils/encoding/toHex.js'\nimport { defineBlock } from '../utils/formatters/block.js'\nimport { formatLog } from '../utils/formatters/log.js'\nimport { defineTransaction } from '../utils/formatters/transaction.js'\nimport { defineTransactionReceipt } from '../utils/formatters/transactionReceipt.js'\nimport { defineTransactionRequest } from '../utils/formatters/transactionRequest.js'\nimport { gasPerPubdataDefault } from './constants/number.js'\nimport type {\n  ZkSyncBlockOverrides,\n  ZkSyncRpcBlockOverrides,\n} from './types/block.js'\nimport type { ZkSyncL2ToL1Log, ZkSyncLog } from './types/log.js'\nimport type {\n  ZkSyncRpcTransaction,\n  ZkSyncRpcTransactionReceiptOverrides,\n  ZkSyncRpcTransactionRequest,\n  ZkSyncTransaction,\n  ZkSyncTransactionReceipt,\n  ZkSyncTransactionRequest,\n} from './types/transaction.js'\n\nexport const formatters = {\n  block: /*#__PURE__*/ defineBlock({\n    format(\n      args: ZkSyncRpcBlockOverrides & {\n        transactions: Hash[] | ZkSyncRpcTransaction[]\n      },\n    ): ZkSyncBlockOverrides & {\n      transactions: Hash[] | ZkSyncTransaction[]\n    } {\n      const transactions = args.transactions?.map((transaction) => {\n        if (typeof transaction === 'string') return transaction\n        const formatted = formatters.transaction?.format(\n          transaction as ZkSyncRpcTransaction,\n        ) as ZkSyncTransaction\n        if (formatted.typeHex === '0x71') formatted.type = 'eip712'\n        else if (formatted.typeHex === '0xff') formatted.type = 'priority'\n        return formatted\n      }) as Hash[] | ZkSyncTransaction[]\n      return {\n        l1BatchNumber: args.l1BatchNumber\n          ? hexToBigInt(args.l1BatchNumber)\n          : null,\n        l1BatchTimestamp: args.l1BatchTimestamp\n          ? hexToBigInt(args.l1BatchTimestamp)\n          : null,\n        transactions,\n      }\n    },\n  }),\n  transaction: /*#__PURE__*/ defineTransaction({\n    format(args: ZkSyncRpcTransaction): ZkSyncTransaction {\n      const transaction = {} as ZkSyncTransaction\n      if (args.type === '0x71') transaction.type = 'eip712'\n      else if (args.type === '0xff') transaction.type = 'priority'\n      return {\n        ...transaction,\n        l1BatchNumber: args.l1BatchNumber\n          ? hexToBigInt(args.l1BatchNumber)\n          : null,\n        l1BatchTxIndex: args.l1BatchTxIndex\n          ? hexToBigInt(args.l1BatchTxIndex)\n          : null,\n      } as ZkSyncTransaction\n    },\n  }),\n  transactionReceipt: /*#__PURE__*/ defineTransactionReceipt({\n    format(\n      args: ZkSyncRpcTransactionReceiptOverrides,\n    ): ZkSyncTransactionReceipt {\n      return {\n        l1BatchNumber: args.l1BatchNumber\n          ? hexToBigInt(args.l1BatchNumber)\n          : null,\n        l1BatchTxIndex: args.l1BatchTxIndex\n          ? hexToBigInt(args.l1BatchTxIndex)\n          : null,\n        logs: args.logs.map((log) => {\n          return {\n            ...formatLog(log),\n            l1BatchNumber: log.l1BatchNumber\n              ? hexToBigInt(log.l1BatchNumber)\n              : null,\n            transactionLogIndex: hexToNumber(log.transactionLogIndex),\n            logType: log.logType,\n          }\n        }) as ZkSyncLog[],\n        l2ToL1Logs: args.l2ToL1Logs.map((l2ToL1Log) => {\n          return {\n            blockNumber: hexToBigInt(l2ToL1Log.blockHash),\n            blockHash: l2ToL1Log.blockHash,\n            l1BatchNumber: hexToBigInt(l2ToL1Log.l1BatchNumber),\n            transactionIndex: hexToBigInt(l2ToL1Log.transactionIndex),\n            shardId: hexToBigInt(l2ToL1Log.shardId),\n            isService: l2ToL1Log.isService,\n            sender: l2ToL1Log.sender,\n            key: l2ToL1Log.key,\n            value: l2ToL1Log.value,\n            transactionHash: l2ToL1Log.transactionHash,\n            logIndex: hexToBigInt(l2ToL1Log.logIndex),\n          }\n        }) as ZkSyncL2ToL1Log[],\n      } as ZkSyncTransactionReceipt\n    },\n  }),\n  transactionRequest: /*#__PURE__*/ defineTransactionRequest({\n    exclude: [\n      'customSignature',\n      'factoryDeps',\n      'gasPerPubdata',\n      'paymaster',\n      'paymasterInput',\n    ],\n    format(args: ZkSyncTransactionRequest): ZkSyncRpcTransactionRequest {\n      if (\n        args.gasPerPubdata ||\n        (args.paymaster && args.paymasterInput) ||\n        args.factoryDeps ||\n        args.customSignature\n      )\n        return {\n          eip712Meta: {\n            ...(args.gasPerPubdata\n              ? { gasPerPubdata: toHex(args.gasPerPubdata) }\n              : { gasPerPubdata: toHex(gasPerPubdataDefault) }),\n            ...(args.paymaster && args.paymasterInput\n              ? {\n                  paymasterParams: {\n                    paymaster: args.paymaster,\n                    paymasterInput: Array.from(hexToBytes(args.paymasterInput)),\n                  },\n                }\n              : {}),\n            ...(args.factoryDeps\n              ? {\n                  factoryDeps: args.factoryDeps.map((dep) =>\n                    Array.from(hexToBytes(dep)),\n                  ),\n                }\n              : {}),\n            ...(args.customSignature\n              ? {\n                  customSignature: Array.from(hexToBytes(args.customSignature)),\n                }\n              : {}),\n          },\n          type: '0x71',\n        } as unknown as ZkSyncRpcTransactionRequest\n      return {} as ZkSyncRpcTransactionRequest\n    },\n  }),\n} as const satisfies ChainFormatters\n","import { BaseError } from '../../errors/base.js'\n\nexport type InvalidEip712TransactionErrorType =\n  InvalidEip712TransactionError & {\n    name: 'InvalidEip712TransactionError'\n  }\nexport class InvalidEip712TransactionError extends BaseError {\n  override name = 'InvalidEip712TransactionError'\n\n  constructor() {\n    super(\n      [\n        'Transaction is not an EIP712 transaction.',\n        '',\n        'Transaction must:',\n        '  - include `type: \"eip712\"`',\n        '  - include one of the following: `customSignature`, `paymaster`, `paymasterInput`, `gasPerPubdata`, `factoryDeps`',\n      ].join('\\n'),\n    )\n  }\n}\n","import type { ExactPartial } from '../../types/utils.js'\nimport type { ZkSyncTransactionSerializable } from '../types/transaction.js'\n\nexport function isEIP712Transaction(\n  transaction: ExactPartial<ZkSyncTransactionSerializable>,\n) {\n  if (transaction.type === 'eip712') return true\n  if (\n    ('customSignature' in transaction && transaction.customSignature) ||\n    ('paymaster' in transaction && transaction.paymaster) ||\n    ('paymasterInput' in transaction && transaction.paymasterInput) ||\n    ('gasPerPubdata' in transaction &&\n      typeof transaction.gasPerPubdata === 'bigint') ||\n    ('factoryDeps' in transaction && transaction.factoryDeps)\n  )\n    return true\n  return false\n}\n","import { InvalidAddressError } from '../../errors/address.js'\nimport { BaseError } from '../../errors/base.js'\nimport { InvalidChainIdError } from '../../errors/chain.js'\nimport type { ExactPartial } from '../../types/utils.js'\nimport { isAddress } from '../../utils/address/isAddress.js'\nimport { InvalidEip712TransactionError } from '../errors/transaction.js'\nimport type {\n  ZkSyncTransactionSerializable,\n  ZkSyncTransactionSerializableEIP712,\n} from '../types/transaction.js'\nimport { isEIP712Transaction } from './isEip712Transaction.js'\n\nexport function assertEip712Transaction(\n  transaction: ExactPartial<ZkSyncTransactionSerializable>,\n) {\n  const { chainId, to, from, paymaster, paymasterInput } =\n    transaction as ZkSyncTransactionSerializableEIP712\n\n  if (!isEIP712Transaction(transaction))\n    throw new InvalidEip712TransactionError()\n  if (!chainId || chainId <= 0) throw new InvalidChainIdError({ chainId })\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (from && !isAddress(from)) throw new InvalidAddressError({ address: from })\n  if (paymaster && !isAddress(paymaster))\n    throw new InvalidAddressError({ address: paymaster })\n  if (paymaster && !paymasterInput) {\n    throw new BaseError(\n      '`paymasterInput` must be provided when `paymaster` is defined',\n    )\n  }\n  if (!paymaster && paymasterInput) {\n    throw new BaseError(\n      '`paymaster` must be provided when `paymasterInput` is defined',\n    )\n  }\n}\n","import type { Signature } from '../index.js'\nimport type { ChainSerializers } from '../types/chain.js'\nimport type { TransactionSerializable } from '../types/transaction.js'\nimport { concatHex } from '../utils/data/concat.js'\nimport { toHex } from '../utils/encoding/toHex.js'\nimport { toRlp } from '../utils/encoding/toRlp.js'\nimport { serializeTransaction as serializeTransaction_ } from '../utils/transaction/serializeTransaction.js'\nimport { gasPerPubdataDefault } from './constants/number.js'\nimport type {\n  ZkSyncTransactionSerializable,\n  ZkSyncTransactionSerializableEIP712,\n  ZkSyncTransactionSerializedEIP712,\n} from './types/transaction.js'\nimport { assertEip712Transaction } from './utils/assertEip712Transaction.js'\nimport { isEIP712Transaction } from './utils/isEip712Transaction.js'\n\nexport function serializeTransaction(\n  transaction: ZkSyncTransactionSerializable,\n  signature?: Signature | undefined,\n) {\n  if (isEIP712Transaction(transaction))\n    return serializeTransactionEIP712(\n      transaction as ZkSyncTransactionSerializableEIP712,\n    )\n  return serializeTransaction_(\n    transaction as TransactionSerializable,\n    signature,\n  )\n}\n\nexport const serializers = {\n  transaction: serializeTransaction,\n} as const satisfies ChainSerializers\n\nexport type SerializeTransactionEIP712ReturnType =\n  ZkSyncTransactionSerializedEIP712\n\nfunction serializeTransactionEIP712(\n  transaction: ZkSyncTransactionSerializableEIP712,\n): SerializeTransactionEIP712ReturnType {\n  const {\n    chainId,\n    gas,\n    nonce,\n    to,\n    from,\n    value,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    customSignature,\n    factoryDeps,\n    paymaster,\n    paymasterInput,\n    gasPerPubdata,\n    data,\n  } = transaction\n\n  assertEip712Transaction(transaction)\n\n  const serializedTransaction = [\n    nonce ? toHex(nonce) : '0x',\n    maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n    maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n    gas ? toHex(gas) : '0x',\n    to ?? '0x',\n    value ? toHex(value) : '0x',\n    data ?? '0x0',\n    toHex(chainId),\n    toHex(''),\n    toHex(''),\n    toHex(chainId),\n    from ?? '0x',\n    gasPerPubdata ? toHex(gasPerPubdata) : toHex(gasPerPubdataDefault),\n    factoryDeps ?? [],\n    customSignature ?? '0x', // EIP712 signature\n    paymaster && paymasterInput ? [paymaster, paymasterInput] : [],\n  ]\n\n  return concatHex([\n    '0x71',\n    toRlp(serializedTransaction),\n  ]) as SerializeTransactionEIP712ReturnType\n}\n","import { BaseError } from '../../errors/base.js'\n\nexport type BytecodeLengthExceedsMaxSizeErrorType =\n  BytecodeLengthExceedsMaxSizeError & {\n    name: 'BytecodeLengthExceedsMaxSizeError'\n  }\n\nexport class BytecodeLengthExceedsMaxSizeError extends BaseError {\n  override name = 'BytecodeLengthExceedsMaxSizeError'\n  constructor({\n    givenLength,\n    maxBytecodeSize,\n  }: { givenLength: number; maxBytecodeSize: bigint }) {\n    super(\n      `Bytecode cannot be longer than ${maxBytecodeSize} bytes. Given length: ${givenLength}`,\n    )\n  }\n}\n\nexport type BytecodeLengthInWordsMustBeOddErrorType =\n  BytecodeLengthInWordsMustBeOddError & {\n    name: 'BytecodeLengthInWordsMustBeOddError'\n  }\n\nexport class BytecodeLengthInWordsMustBeOddError extends BaseError {\n  override name = 'BytecodeLengthInWordsMustBeOddError'\n  constructor({ givenLengthInWords }: { givenLengthInWords: number }) {\n    super(\n      `Bytecode length in 32-byte words must be odd. Given length in words: ${givenLengthInWords}`,\n    )\n  }\n}\n\nexport type BytecodeLengthMustBeDivisibleBy32ErrorType =\n  BytecodeLengthMustBeDivisibleBy32Error & {\n    name: 'BytecodeLengthMustBeDivisibleBy32Error'\n  }\n\nexport class BytecodeLengthMustBeDivisibleBy32Error extends BaseError {\n  override name = 'BytecodeLengthMustBeDivisibleBy32Error'\n  constructor({ givenLength }: { givenLength: number }) {\n    super(\n      `The bytecode length in bytes must be divisible by 32. Given length: ${givenLength}`,\n    )\n  }\n}\n","import { formatters } from './formatters.js'\nimport { serializers } from './serializers.js'\nimport { getEip712Domain } from './utils/getEip712Domain.js'\n\nexport const chainConfig = {\n  formatters,\n  serializers,\n  custom: {\n    getEip712Domain,\n  },\n} as const\n","import { toHex } from '../../utils/encoding/toHex.js'\nimport { gasPerPubdataDefault } from '../constants/number.js'\nimport type { EIP712DomainFn } from '../types/eip712.js'\nimport type {\n  ZkSyncEIP712TransactionSignable,\n  ZkSyncTransactionSerializable,\n  ZkSyncTransactionSerializableEIP712,\n} from '../types/transaction.js'\nimport { assertEip712Transaction } from './assertEip712Transaction.js'\nimport { hashBytecode } from './hashBytecode.js'\n\nexport const getEip712Domain: EIP712DomainFn<\n  ZkSyncTransactionSerializable,\n  ZkSyncEIP712TransactionSignable\n> = (transaction) => {\n  assertEip712Transaction(transaction)\n\n  const message = transactionToMessage(\n    transaction as ZkSyncTransactionSerializableEIP712,\n  )\n\n  return {\n    domain: {\n      name: 'zkSync',\n      version: '2',\n      chainId: transaction.chainId,\n    },\n    types: {\n      Transaction: [\n        { name: 'txType', type: 'uint256' },\n        { name: 'from', type: 'uint256' },\n        { name: 'to', type: 'uint256' },\n        { name: 'gasLimit', type: 'uint256' },\n        { name: 'gasPerPubdataByteLimit', type: 'uint256' },\n        { name: 'maxFeePerGas', type: 'uint256' },\n        { name: 'maxPriorityFeePerGas', type: 'uint256' },\n        { name: 'paymaster', type: 'uint256' },\n        { name: 'nonce', type: 'uint256' },\n        { name: 'value', type: 'uint256' },\n        { name: 'data', type: 'bytes' },\n        { name: 'factoryDeps', type: 'bytes32[]' },\n        { name: 'paymasterInput', type: 'bytes' },\n      ],\n    },\n    primaryType: 'Transaction',\n    message: message,\n  }\n}\n\n//////////////////////////////////////////////////////////////////////////////\n// Utilities\n\nfunction transactionToMessage(\n  transaction: ZkSyncTransactionSerializableEIP712,\n): ZkSyncEIP712TransactionSignable {\n  const {\n    gas,\n    nonce,\n    to,\n    from,\n    value,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    factoryDeps,\n    paymaster,\n    paymasterInput,\n    gasPerPubdata,\n    data,\n  } = transaction\n\n  return {\n    txType: 113n,\n    from: BigInt(from),\n    to: to ? BigInt(to) : 0n,\n    gasLimit: gas ?? 0n,\n    gasPerPubdataByteLimit: gasPerPubdata ?? gasPerPubdataDefault,\n    maxFeePerGas: maxFeePerGas ?? 0n,\n    maxPriorityFeePerGas: maxPriorityFeePerGas ?? 0n,\n    paymaster: paymaster ? BigInt(paymaster) : 0n,\n    nonce: nonce ? BigInt(nonce) : 0n,\n    value: value ?? 0n,\n    data: data ? data : '0x0',\n    factoryDeps: factoryDeps?.map((dep) => toHex(hashBytecode(dep))) ?? [],\n    paymasterInput: paymasterInput ? paymasterInput : '0x',\n  }\n}\n","import type { Hex } from '../../types/misc.js'\nimport { pad } from '../../utils/data/pad.js'\nimport { toBytes } from '../../utils/encoding/toBytes.js'\nimport { sha256 } from '../../utils/hash/sha256.js'\nimport { maxBytecodeSize } from '../constants/number.js'\nimport {\n  BytecodeLengthExceedsMaxSizeError,\n  BytecodeLengthInWordsMustBeOddError,\n  BytecodeLengthMustBeDivisibleBy32Error,\n} from '../errors/bytecode.js'\n\nexport function hashBytecode(bytecode: Hex): Uint8Array {\n  const bytecodeBytes = toBytes(bytecode)\n  if (bytecodeBytes.length % 32 !== 0)\n    throw new BytecodeLengthMustBeDivisibleBy32Error({\n      givenLength: bytecodeBytes.length,\n    })\n\n  if (bytecodeBytes.length > maxBytecodeSize)\n    throw new BytecodeLengthExceedsMaxSizeError({\n      givenLength: bytecodeBytes.length,\n      maxBytecodeSize,\n    })\n\n  const hashStr = sha256(bytecodeBytes)\n  const hash = toBytes(hashStr)\n\n  // Note that the length of the bytecode\n  // should be provided in 32-byte words.\n  const bytecodeLengthInWords = bytecodeBytes.length / 32\n  if (bytecodeLengthInWords % 2 === 0) {\n    throw new BytecodeLengthInWordsMustBeOddError({\n      givenLengthInWords: bytecodeLengthInWords,\n    })\n  }\n\n  const bytecodeLength = toBytes(bytecodeLengthInWords)\n\n  // The bytecode should always take the first 2 bytes of the bytecode hash,\n  // so we pad it from the left in case the length is smaller than 2 bytes.\n  const bytecodeLengthPadded = pad(bytecodeLength, { size: 2 })\n\n  const codeHashVersion = new Uint8Array([1, 0])\n  hash.set(codeHashVersion, 0)\n  hash.set(bytecodeLengthPadded, 2)\n\n  return hash\n}\n","import { defineChain } from '../../utils/chain/defineChain.js'\nimport { chainConfig } from '../../zksync/chainConfig.js'\n\nexport const lisk = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 1135,\n  name: 'Lisk',\n  network: 'lisk',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Ether',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.api.lisk.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://blockscout.lisk.com',\n      apiUrl: 'https://blockscout.lisk.com/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xA9d71E1dd7ca26F26e656E66d6AA81ed7f745bf0',\n    },\n  },\n})\n","import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 11_155_111 // sepolia\n\nexport const liskSepolia = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 4202,\n  network: 'lisk-sepolia',\n  name: 'Lisk Sepolia',\n  nativeCurrency: { name: 'Sepolia Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.sepolia-api.lisk.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://sepolia-blockscout.lisk.com',\n      apiUrl: 'https://sepolia-blockscout.lisk.com/api',\n    },\n  },\n  contracts: {\n    ...chainConfig.contracts,\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0xA0E35F56C318DE1bD5D9ca6A94Fe7e37C5663348',\n      },\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n    },\n    portal: {\n      [sourceId]: {\n        address: '0xe3d90F21490686Ec7eF37BE788E02dfC12787264',\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0x1Fb30e446eA791cd1f011675E5F3f5311b70faF5',\n      },\n    },\n  },\n  testnet: true,\n  sourceId,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const localhost = /*#__PURE__*/ defineChain({\n  id: 1_337,\n  name: 'Localhost',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Ether',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: { http: ['http://127.0.0.1:8545'] },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const lukso = /*#__PURE__*/ defineChain({\n  id: 42,\n  network: 'lukso',\n  name: 'LUKSO',\n  nativeCurrency: {\n    name: 'LUKSO',\n    symbol: 'LYX',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.mainnet.lukso.network'],\n      webSocket: ['wss://ws-rpc.mainnet.lukso.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'LUKSO Mainnet Explorer',\n      url: 'https://explorer.execution.mainnet.lukso.network',\n      apiUrl: 'https://api.explorer.execution.mainnet.lukso.network/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 468183,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const luksoTestnet = /*#__PURE__*/ defineChain({\n  id: 4201,\n  name: 'LUKSO Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'LUKSO Testnet',\n    symbol: 'LYXt',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.testnet.lukso.network'],\n      webSocket: ['wss://ws-rpc.testnet.lukso.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'LUKSO Testnet Explorer',\n      url: 'https://explorer.execution.testnet.lukso.network',\n      apiUrl: 'https://api.explorer.execution.testnet.lukso.network/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 605348,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const mainnet = /*#__PURE__*/ defineChain({\n  id: 1,\n  name: 'Ethereum',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://cloudflare-eth.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Etherscan',\n      url: 'https://etherscan.io',\n      apiUrl: 'https://api.etherscan.io/api',\n    },\n  },\n  contracts: {\n    ensRegistry: {\n      address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n    },\n    ensUniversalResolver: {\n      address: '0xce01f8eee7E479C928F8919abD53E553a36CeF67',\n      blockCreated: 19_258_213,\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 14_353_601,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const mandala = /*#__PURE__*/ defineChain({\n  id: 595,\n  name: 'Mandala TC9',\n  network: 'mandala',\n  nativeCurrency: {\n    name: 'Mandala',\n    symbol: 'mACA',\n    decimals: 18,\n  },\n  rpcUrls: {\n    public: {\n      http: ['https://eth-rpc-tc9.aca-staging.network'],\n      webSocket: ['wss://eth-rpc-tc9.aca-staging.network'],\n    },\n    default: {\n      http: ['https://eth-rpc-tc9.aca-staging.network'],\n      webSocket: ['wss://eth-rpc-tc9.aca-staging.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Mandala Blockscout',\n      url: 'https://blockscout.mandala.aca-staging.network',\n      apiUrl: 'https://blockscout.mandala.aca-staging.network/api',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const manta = /*#__PURE__*/ defineChain({\n  id: 169,\n  name: 'Manta Pacific Mainnet',\n  network: 'manta',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'ETH',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: { http: ['https://pacific-rpc.manta.network/http'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Manta Explorer',\n      url: 'https://pacific-explorer.manta.network',\n      apiUrl: 'https://pacific-explorer.manta.network/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 332890,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const mantaSepoliaTestnet = /*#__PURE__*/ defineChain({\n  id: 3_441_006,\n  name: 'Manta Pacific Sepolia Testnet',\n  network: 'manta-sepolia',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'ETH',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://pacific-rpc.sepolia-testnet.manta.network/http'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Manta Sepolia Testnet Explorer',\n      url: 'https://pacific-explorer.sepolia-testnet.manta.network',\n      apiUrl: 'https://pacific-explorer.sepolia-testnet.manta.network/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca54918f7B525C8df894668846506767412b53E3',\n      blockCreated: 479584,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const mantaTestnet = /*#__PURE__*/ defineChain({\n  id: 3_441_005,\n  name: 'Manta Pacific Testnet',\n  network: 'manta-testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'ETH',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: { http: ['https://manta-testnet.calderachain.xyz/http'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Manta Testnet Explorer',\n      url: 'https://pacific-explorer.testnet.manta.network',\n      apiUrl: 'https://pacific-explorer.testnet.manta.network/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0x211B1643b95Fe76f11eD8880EE810ABD9A4cf56C',\n      blockCreated: 419915,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const mantle = /*#__PURE__*/ defineChain({\n  id: 5000,\n  name: 'Mantle',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'MNT',\n    symbol: 'MNT',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.mantle.xyz'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Mantle Explorer',\n      url: 'https://mantlescan.xyz/',\n      apiUrl: 'https://api.mantlescan.xyz/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 304717,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const mantleSepoliaTestnet = /*#__PURE__*/ defineChain({\n  id: 5003,\n  name: 'Mantle Sepolia Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'MNT',\n    symbol: 'MNT',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.sepolia.mantle.xyz'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Mantle Testnet Explorer',\n      url: 'https://explorer.sepolia.mantle.xyz/',\n      apiUrl: 'https://explorer.sepolia.mantle.xyz/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 4584012,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const mantleTestnet = /*#__PURE__*/ defineChain({\n  id: 5001,\n  name: 'Mantle Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'MNT',\n    symbol: 'MNT',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.testnet.mantle.xyz'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Mantle Testnet Explorer',\n      url: 'https://explorer.testnet.mantle.xyz',\n      apiUrl: 'https://explorer.testnet.mantle.xyz/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 561333,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const merlin = /*#__PURE__*/ defineChain({\n  id: 4200,\n  name: 'Merlin',\n  nativeCurrency: {\n    name: 'BTC',\n    symbol: 'BTC',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.merlinchain.io'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'blockscout',\n      url: 'https://scan.merlinchain.io',\n      apiUrl: 'https://scan.merlinchain.io/api',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const metachain = /*#__PURE__*/ defineChain({\n  id: 571,\n  name: 'MetaChain Mainnet',\n  nativeCurrency: { name: 'Metatime Coin', symbol: 'MTC', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.metatime.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'MetaExplorer',\n      url: 'https://explorer.metatime.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0x0000000000000000000000000000000000003001',\n      blockCreated: 0,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const metachainIstanbul = /*#__PURE__*/ defineChain({\n  id: 1_453,\n  name: 'MetaChain Istanbul',\n  nativeCurrency: { name: 'Metatime Coin', symbol: 'MTC', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://istanbul-rpc.metachain.dev'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'MetaExplorer',\n      url: 'https://istanbul-explorer.metachain.dev',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0x0000000000000000000000000000000000003001',\n      blockCreated: 0,\n    },\n  },\n  testnet: true,\n})\n","import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 1 // mainnet\n\nexport const metalL2 = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 1750,\n  name: 'Metal L2',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Ether',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.metall2.com'],\n      webSocket: ['wss://rpc.metall2.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Explorer',\n      url: 'https://explorer.metall2.com',\n      apiUrl: 'https://explorer.metall2.com/api',\n    },\n  },\n  contracts: {\n    ...chainConfig.contracts,\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0x3B1F7aDa0Fcc26B13515af752Dd07fB1CAc11426',\n      },\n    },\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 0,\n    },\n    portal: {\n      [sourceId]: {\n        address: '0x3F37aBdE2C6b5B2ed6F8045787Df1ED1E3753956',\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0x6d0f65D59b55B0FEC5d2d15365154DcADC140BF3',\n      },\n    },\n  },\n  sourceId,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const meter = /*#__PURE__*/ defineChain({\n  id: 82,\n  name: 'Meter',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'MTR',\n    symbol: 'MTR',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.meter.io'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'MeterScan',\n      url: 'https://scan.meter.io',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const meterTestnet = /*#__PURE__*/ defineChain({\n  id: 83,\n  name: 'Meter Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'MTR',\n    symbol: 'MTR',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpctest.meter.io'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'MeterTestnetScan',\n      url: 'https://scan-warringstakes.meter.io',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const metis = /*#__PURE__*/ defineChain({\n  id: 1_088,\n  name: 'Metis',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Metis',\n    symbol: 'METIS',\n  },\n  rpcUrls: {\n    default: { http: ['https://andromeda.metis.io/?owner=1088'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Metis Explorer',\n      url: 'https://explorer.metis.io',\n      apiUrl:\n        'https://api.routescan.io/v2/network/mainnet/evm/43114/etherscan/api',\n    },\n    blockscout: {\n      name: 'Andromeda Explorer',\n      url: 'https://andromeda-explorer.metis.io',\n      apiUrl: 'https://andromeda-explorer.metis.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 2338552,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const metisGoerli = /*#__PURE__*/ defineChain({\n  id: 599,\n  name: 'Metis Goerli',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Metis Goerli',\n    symbol: 'METIS',\n  },\n  rpcUrls: {\n    default: { http: ['https://goerli.gateway.metisdevops.link'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Metis Goerli Explorer',\n      url: 'https://goerli.explorer.metisdevops.link',\n      apiUrl: 'https://goerli.explorer.metisdevops.link/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 1006207,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const mev = /*#__PURE__*/ defineChain({\n  id: 7518,\n  name: 'MEVerse Chain Mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'MEVerse',\n    symbol: 'MEV',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.meversemainnet.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Explorer',\n      url: 'https://www.meversescan.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 86881340,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const mevTestnet = /*#__PURE__*/ defineChain({\n  id: 4759,\n  name: 'MEVerse Chain Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'MEVerse',\n    symbol: 'MEV',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.meversetestnet.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Explorer',\n      url: 'https://testnet.meversescan.io/',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 64371115,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const mintSepoliaTestnet = /*#__PURE__*/ defineChain({\n  id: 1686,\n  name: 'Mint Sepolia Testnet',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://testnet-rpc.mintchain.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Mintchain Testnet explorer',\n      url: 'https://testnet-explorer.mintchain.io',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 1 // mainnet\n\nexport const mode = /*#__PURE__*/ defineChain({\n  id: 34443,\n  name: 'Mode Mainnet',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.mode.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Modescan',\n      url: 'https://modescan.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 2465882,\n    },\n  },\n  sourceId,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 11_155_111 // sepolia\n\nexport const modeTestnet = /*#__PURE__*/ defineChain({\n  id: 919,\n  name: 'Mode Testnet',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://sepolia.mode.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://sepolia.explorer.mode.network',\n      apiUrl: 'https://sepolia.explorer.mode.network/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xBAba8373113Fb7a68f195deF18732e01aF8eDfCF',\n      blockCreated: 3019007,\n    },\n  },\n  testnet: true,\n  sourceId,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const moonbaseAlpha = /*#__PURE__*/ defineChain({\n  id: 1287,\n  name: 'Moonbase Alpha',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'DEV',\n    symbol: 'DEV',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.api.moonbase.moonbeam.network'],\n      webSocket: ['wss://wss.api.moonbase.moonbeam.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Moonscan',\n      url: 'https://moonbase.moonscan.io',\n      apiUrl: 'https://moonbase.moonscan.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 1850686,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const moonbeam = /*#__PURE__*/ defineChain({\n  id: 1284,\n  name: 'Moonbeam',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'GLMR',\n    symbol: 'GLMR',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://moonbeam.public.blastapi.io'],\n      webSocket: ['wss://moonbeam.public.blastapi.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Moonscan',\n      url: 'https://moonscan.io',\n      apiUrl: 'https://api-moonbeam.moonscan.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 609002,\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const moonbeamDev = /*#__PURE__*/ defineChain({\n  id: 1281,\n  name: 'Moonbeam Development Node',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'DEV',\n    symbol: 'DEV',\n  },\n  rpcUrls: {\n    default: {\n      http: ['http://127.0.0.1:9944'],\n      webSocket: ['wss://127.0.0.1:9944'],\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const moonriver = /*#__PURE__*/ defineChain({\n  id: 1285,\n  name: 'Moonriver',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'MOVR',\n    symbol: 'MOVR',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://moonriver.public.blastapi.io'],\n      webSocket: ['wss://moonriver.public.blastapi.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Moonscan',\n      url: 'https://moonriver.moonscan.io',\n      apiUrl: 'https://api-moonriver.moonscan.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 1597904,\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const morphSepolia = /*#__PURE__*/ defineChain({\n  id: 2710,\n  name: 'Morph Sepolia',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc-testnet.morphl2.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Morph Testnet Explorer',\n      url: 'https://explorer-testnet.morphl2.io',\n      apiUrl: 'https://explorer-api-testnet.morphl2.io/api',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const nautilus = /*#__PURE__*/ defineChain({\n  id: 22222,\n  name: 'Nautilus Mainnet',\n  nativeCurrency: { name: 'ZBC', symbol: 'ZBC', decimals: 9 },\n  rpcUrls: {\n    default: {\n      http: ['https://api.nautilus.nautchain.xyz'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'NautScan',\n      url: 'https://nautscan.com',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const neonDevnet = /*#__PURE__*/ defineChain({\n  id: 245_022_926,\n  name: 'Neon EVM DevNet',\n  nativeCurrency: { name: 'NEON', symbol: 'NEON', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://devnet.neonevm.org'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Neonscan',\n      url: 'https://devnet.neonscan.org',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 205206112,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const neonMainnet = /*#__PURE__*/ defineChain({\n  id: 245_022_934,\n  network: 'neonMainnet',\n  name: 'Neon EVM MainNet',\n  nativeCurrency: { name: 'NEON', symbol: 'NEON', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://neon-proxy-mainnet.solana.p2p.org'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Neonscan',\n      url: 'https://neonscan.org',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 206545524,\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const nexi = /*#__PURE__*/ defineChain({\n  id: 4242,\n  name: 'Nexi',\n  nativeCurrency: { name: 'Nexi', symbol: 'NEXI', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.chain.nexi.technology'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'NexiScan',\n      url: 'https://www.nexiscan.com',\n      apiUrl: 'https://www.nexiscan.com/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0x0277A46Cc69A57eE3A6C8c158bA874832F718B8E',\n      blockCreated: 25770160,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const nexilix = /*#__PURE__*/ defineChain({\n  id: 240,\n  name: 'Nexilix Smart Chain',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Nexilix',\n    symbol: 'NEXILIX',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpcurl.pos.nexilix.com'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'NexilixScan',\n      url: 'https://scan.nexilix.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0x58381c8e2BF9d0C2C4259cA14BdA9Afe02831244',\n      blockCreated: 74448,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const oasys = /*#__PURE__*/ defineChain({\n  id: 248,\n  name: 'Oasys',\n  nativeCurrency: { name: 'Oasys', symbol: 'OAS', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.mainnet.oasys.games'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'OasysScan',\n      url: 'https://scan.oasys.games',\n      apiUrl: 'https://scan.oasys.games/api',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const oasisTestnet = /*#__PURE__*/ defineChain({\n  id: 4090,\n  network: 'oasis-testnet',\n  name: 'Oasis Testnet',\n  nativeCurrency: { name: 'Fasttoken', symbol: 'FTN', decimals: 18 },\n  rpcUrls: {\n    default: { http: ['https://rpc1.oasis.bahamutchain.com'] },\n    public: { http: ['https://rpc1.oasis.bahamutchain.com'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Ftnscan',\n      url: 'https://oasis.ftnscan.com',\n      apiUrl: 'https://oasis.ftnscan.com/api',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const okc = /*#__PURE__*/ defineChain({\n  id: 66,\n  name: 'OKC',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'OKT',\n    symbol: 'OKT',\n  },\n  rpcUrls: {\n    default: { http: ['https://exchainrpc.okex.org'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'oklink',\n      url: 'https://www.oklink.com/okc',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 10364792,\n    },\n  },\n})\n","import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 1 // mainnet\n\nexport const optimism = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 10,\n  name: 'OP Mainnet',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.optimism.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Optimism Explorer',\n      url: 'https://optimistic.etherscan.io',\n      apiUrl: 'https://api-optimistic.etherscan.io/api',\n    },\n  },\n  contracts: {\n    ...chainConfig.contracts,\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0xdfe97868233d1aa22e815a266982f2cf17685a27',\n      },\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 4286263,\n    },\n    portal: {\n      [sourceId]: {\n        address: '0xbEb5Fc579115071764c7423A4f12eDde41f106Ed',\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1',\n      },\n    },\n  },\n  sourceId,\n})\n","import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 5 // goerli\n\nexport const optimismGoerli = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 420,\n  name: 'Optimism Goerli',\n  nativeCurrency: { name: 'Goerli Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://goerli.optimism.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Etherscan',\n      url: 'https://goerli-optimism.etherscan.io',\n      apiUrl: 'https://goerli-optimism.etherscan.io/api',\n    },\n  },\n  contracts: {\n    ...chainConfig.contracts,\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0',\n      },\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 49461,\n    },\n    portal: {\n      [sourceId]: {\n        address: '0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383',\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0x636Af16bf2f682dD3109e60102b8E1A089FedAa8',\n      },\n    },\n  },\n  testnet: true,\n  sourceId,\n})\n","import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 11_155_111 // sepolia\n\nexport const optimismSepolia = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 11155420,\n  name: 'OP Sepolia',\n  nativeCurrency: { name: 'Sepolia Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://sepolia.optimism.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://optimism-sepolia.blockscout.com',\n      apiUrl: 'https://optimism-sepolia.blockscout.com/api',\n    },\n  },\n  contracts: {\n    ...chainConfig.contracts,\n    disputeGameFactory: {\n      [sourceId]: {\n        address: '0x05F9613aDB30026FFd634f38e5C4dFd30a197Fa1',\n      },\n    },\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0x90E9c4f8a994a250F6aEfd61CAFb4F2e895D458F',\n      },\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 1620204,\n    },\n    portal: {\n      [sourceId]: {\n        address: '0x16Fc5058F25648194471939df75CF27A2fdC48BC',\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0xFBb0621E0B23b5478B630BD55a5f21f67730B0F1',\n      },\n    },\n  },\n  testnet: true,\n  sourceId,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const opBNB = /*#__PURE__*/ defineChain({\n  id: 204,\n  name: 'opBNB',\n  nativeCurrency: {\n    name: 'BNB',\n    symbol: 'BNB',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: { http: ['https://opbnb-mainnet-rpc.bnbchain.org'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'opbnbscan',\n      url: 'https://mainnet.opbnbscan.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 512881,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const opBNBTestnet = /*#__PURE__*/ defineChain({\n  id: 5611,\n  name: 'opBNB Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'tBNB',\n    symbol: 'tBNB',\n  },\n  rpcUrls: {\n    default: { http: ['https://opbnb-testnet-rpc.bnbchain.org'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'opbnbscan',\n      url: 'https://testnet.opbnbscan.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 3705108,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const oortMainnetDev = /*#__PURE__*/ defineChain({\n  id: 9700,\n  name: 'OORT MainnetDev',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'OORT',\n    symbol: 'OORT',\n  },\n  rpcUrls: {\n    default: { http: ['https://dev-rpc.oortech.com'] },\n  },\n  blockExplorers: {\n    oort: {\n      name: 'OORT MainnetDev Explorer',\n      url: 'https://dev-scan.oortech.com',\n    },\n    default: {\n      name: 'OORT MainnetDev Explorer',\n      url: 'https://dev-scan.oortech.com',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const otimDevnet = /*#__PURE__*/ defineChain({\n  id: 41144114,\n  name: 'Otim Devnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'ETH',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: {\n      http: ['http://devnet.otim.xyz'],\n    },\n  },\n  contracts: {\n    batchInvoker: {\n      address: '0x5FbDB2315678afecb367f032d93F642f64180aa3',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const palm = /*#__PURE__*/ defineChain({\n  id: 11_297_108_109,\n  name: 'Palm',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'PALM',\n    symbol: 'PALM',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://palm-mainnet.public.blastapi.io'],\n      webSocket: ['wss://palm-mainnet.public.blastapi.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Chainlens',\n      url: 'https://palm.chainlens.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 15429248,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const palmTestnet = /*#__PURE__*/ defineChain({\n  id: 11_297_108_099,\n  name: 'Palm Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'PALM',\n    symbol: 'PALM',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://palm-mainnet.public.blastapi.io'],\n      webSocket: ['wss://palm-mainnet.public.blastapi.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Chainlens',\n      url: 'https://palm.chainlens.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 15429248,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\nimport { chainConfig } from '../../zksync/chainConfig.js'\n\nexport const playfiAlbireo = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 1_612_127,\n  name: 'PlayFi Albireo Testnet',\n  network: 'albireo',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://albireo-rpc.playfi.ai'],\n      webSocket: ['wss://albireo-rpc-ws.playfi.ai/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'PlayFi Albireo Explorer',\n      url: 'https://albireo-explorer.playfi.ai',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xF9cda624FBC7e059355ce98a31693d299FACd963',\n    },\n  },\n  testnet: true,\n})\n","import { formatters } from '../../op-stack/formatters.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 1 // mainnet\n\nexport const pgn = /*#__PURE__*/ defineChain({\n  id: 424,\n  network: 'pgn',\n  name: 'PGN',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.publicgoods.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'PGN Explorer',\n      url: 'https://explorer.publicgoods.network',\n      apiUrl: 'https://explorer.publicgoods.network/api',\n    },\n    blocksout: {\n      name: 'PGN Explorer',\n      url: 'https://explorer.publicgoods.network',\n      apiUrl: 'https://explorer.publicgoods.network/api',\n    },\n  },\n  contracts: {\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0x9E6204F750cD866b299594e2aC9eA824E2e5f95c',\n      },\n    },\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 3380209,\n    },\n    portal: {\n      [sourceId]: {\n        address: '0xb26Fd985c5959bBB382BAFdD0b879E149e48116c',\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0xD0204B9527C1bA7bD765Fa5CCD9355d38338272b',\n      },\n    },\n  },\n  formatters,\n  sourceId,\n})\n","import { formatters } from '../../op-stack/formatters.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 11_155_111 // sepolia\n\nexport const pgnTestnet = /*#__PURE__*/ defineChain({\n  id: 58008,\n  network: 'pgn-testnet',\n  name: 'PGN ',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://sepolia.publicgoods.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'PGN Testnet Explorer',\n      url: 'https://explorer.sepolia.publicgoods.network',\n      apiUrl: 'https://explorer.sepolia.publicgoods.network/api',\n    },\n    blocksout: {\n      name: 'PGN Testnet Explorer',\n      url: 'https://explorer.sepolia.publicgoods.network',\n      apiUrl: 'https://explorer.sepolia.publicgoods.network/api',\n    },\n  },\n  contracts: {\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0xD5bAc3152ffC25318F848B3DD5dA6C85171BaEEe',\n      },\n    },\n    portal: {\n      [sourceId]: {\n        address: '0xF04BdD5353Bb0EFF6CA60CfcC78594278eBfE179',\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0xFaE6abCAF30D23e233AC7faF747F2fC3a5a6Bfa3',\n      },\n    },\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 3754925,\n    },\n  },\n  formatters,\n  sourceId,\n  testnet: true,\n})\n","// src/chains/definitions/phoenix.ts\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const phoenix = /*#__PURE__*/ defineChain({\n  id: 13381,\n  name: 'Phoenix Blockchain',\n  nativeCurrency: { name: 'Phoenix', symbol: 'PHX', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.phoenixplorer.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Phoenixplorer',\n      url: 'https://phoenixplorer.com',\n      apiUrl: 'https://phoenixplorer.com/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0x498cF757a575cFF2c2Ed9f532f56Efa797f86442',\n      blockCreated: 5620192,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const plinga = /*#__PURE__*/ defineChain({\n  id: 242,\n  name: 'Plinga',\n  nativeCurrency: { name: 'Plinga', symbol: 'PLINGA', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpcurl.mainnet.plgchain.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Plgscan',\n      url: 'https://www.plgscan.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0x0989576160f2e7092908BB9479631b901060b6e4',\n      blockCreated: 204489,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 11_155_111 // sepolia\n\nexport const plumeTestnet = /*#__PURE__*/ defineChain({\n  id: 161_221_135,\n  name: 'Plume Testnet',\n  nativeCurrency: {\n    name: 'Plume Sepolia Ether',\n    symbol: 'ETH',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://testnet-rpc.plumenetwork.xyz/http'],\n      webSocket: ['wss://testnet-rpc.plumenetwork.xyz/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://testnet-explorer.plumenetwork.xyz',\n      apiUrl: 'https://testnet-explorer.plumenetwork.xyz/api',\n    },\n  },\n  testnet: true,\n  sourceId,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const polygon = /*#__PURE__*/ defineChain({\n  id: 137,\n  name: 'Polygon',\n  nativeCurrency: { name: 'MATIC', symbol: 'MATIC', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://polygon-rpc.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'PolygonScan',\n      url: 'https://polygonscan.com',\n      apiUrl: 'https://api.polygonscan.com/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 25770160,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const polygonAmoy = /*#__PURE__*/ defineChain({\n  id: 80_002,\n  name: 'Polygon Amoy',\n  nativeCurrency: { name: 'MATIC', symbol: 'MATIC', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc-amoy.polygon.technology'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'PolygonScan',\n      url: 'https://amoy.polygonscan.com/',\n      apiUrl: 'https://api-amoy.polygonscan.com/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 3127388,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const polygonMumbai = /*#__PURE__*/ defineChain({\n  id: 80_001,\n  name: 'Polygon Mumbai',\n  nativeCurrency: { name: 'MATIC', symbol: 'MATIC', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.ankr.com/polygon_mumbai'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'PolygonScan',\n      url: 'https://mumbai.polygonscan.com',\n      apiUrl: 'https://api-testnet.polygonscan.com/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 25770160,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const polygonZkEvm = /*#__PURE__*/ defineChain({\n  id: 1101,\n  name: 'Polygon zkEVM',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://zkevm-rpc.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'PolygonScan',\n      url: 'https://zkevm.polygonscan.com',\n      apiUrl: 'https://api-zkevm.polygonscan.com/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 57746,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const polygonZkEvmCardona = /*#__PURE__*/ defineChain({\n  id: 2442,\n  name: 'Polygon zkEVM Cardona',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.cardona.zkevm-rpc.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'PolygonScan',\n      url: 'https://cardona-zkevm.polygonscan.com',\n      apiUrl: 'https://cardona-zkevm.polygonscan.com/api',\n    },\n  },\n  testnet: true,\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 114091,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const polygonZkEvmTestnet = /*#__PURE__*/ defineChain({\n  id: 1442,\n  name: 'Polygon zkEVM Testnet',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.public.zkevm-test.net'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'PolygonScan',\n      url: 'https://testnet-zkevm.polygonscan.com',\n      apiUrl: 'https://testnet-zkevm.polygonscan.com/api',\n    },\n  },\n  testnet: true,\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 525686,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const pulsechain = /*#__PURE__*/ defineChain({\n  id: 369,\n  name: 'PulseChain',\n  nativeCurrency: { name: 'Pulse', symbol: 'PLS', decimals: 18 },\n  testnet: false,\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.pulsechain.com'],\n      webSocket: ['wss://ws.pulsechain.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'PulseScan',\n      url: 'https://scan.pulsechain.com',\n      apiUrl: 'https://api.scan.pulsechain.com/api',\n    },\n  },\n  contracts: {\n    ensRegistry: {\n      address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 14353601,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const pulsechainV4 = /*#__PURE__*/ defineChain({\n  id: 943,\n  name: 'PulseChain V4',\n  testnet: true,\n  nativeCurrency: { name: 'V4 Pulse', symbol: 'v4PLS', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.v4.testnet.pulsechain.com'],\n      webSocket: ['wss://ws.v4.testnet.pulsechain.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'PulseScan',\n      url: 'https://scan.v4.testnet.pulsechain.com',\n      apiUrl: 'https://scan.v4.testnet.pulsechain.com/api',\n    },\n  },\n  contracts: {\n    ensRegistry: {\n      address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 14353601,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const qMainnet = /*#__PURE__*/ defineChain({\n  id: 35441,\n  name: 'Q Mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Q',\n    symbol: 'Q',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.q.org'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Q Mainnet Explorer',\n      url: 'https://explorer.q.org',\n      apiUrl: 'https://explorer.q.org/api',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const qTestnet = /*#__PURE__*/ defineChain({\n  id: 35443,\n  name: 'Q Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Q',\n    symbol: 'Q',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.qtestnet.org'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Q Testnet Explorer',\n      url: 'https://explorer.qtestnet.org',\n      apiUrl: 'https://explorer.qtestnet.org/api',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const reyaNetwork = /*#__PURE__*/ defineChain({\n  id: 1729,\n  name: 'Reya Network',\n  nativeCurrency: { decimals: 18, name: 'Ether', symbol: 'ETH' },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.reya.network'],\n      webSocket: ['wss://ws.reya.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Reya Network Explorer',\n      url: 'https://explorer.reya.network',\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const rollux = /*#__PURE__*/ defineChain({\n  id: 570,\n  name: 'Rollux Mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Syscoin',\n    symbol: 'SYS',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.rollux.com'],\n      webSocket: ['wss://rpc.rollux.com/wss'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'RolluxExplorer',\n      url: 'https://explorer.rollux.com',\n      apiUrl: 'https://explorer.rollux.com/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 119222,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const rolluxTestnet = /*#__PURE__*/ defineChain({\n  id: 57000,\n  name: 'Rollux Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Syscoin',\n    symbol: 'SYS',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc-tanenbaum.rollux.com/'],\n      webSocket: ['wss://rpc-tanenbaum.rollux.com/wss'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'RolluxTestnetExplorer',\n      url: 'https://rollux.tanenbaum.io',\n      apiUrl: 'https://rollux.tanenbaum.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 1813675,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const ronin = /*#__PURE__*/ defineChain({\n  id: 2020,\n  name: 'Ronin',\n  nativeCurrency: { name: 'RON', symbol: 'RON', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://api.roninchain.com/rpc'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Ronin Explorer',\n      url: 'https://app.roninchain.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 26023535,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const rootstock = /*#__PURE__*/ defineChain({\n  id: 30,\n  name: 'Rootstock Mainnet',\n  network: 'rootstock',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Rootstock Bitcoin',\n    symbol: 'RBTC',\n  },\n  rpcUrls: {\n    default: { http: ['https://public-node.rsk.co'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'RSK Explorer',\n      url: 'https://explorer.rsk.co',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 4249540,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const rootstockTestnet = /*#__PURE__*/ defineChain({\n  id: 31,\n  name: 'Rootstock Testnet',\n  network: 'rootstock',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Rootstock Bitcoin',\n    symbol: 'tRBTC',\n  },\n  rpcUrls: {\n    default: { http: ['https://public-node.testnet.rsk.co'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'RSK Explorer',\n      url: 'https://explorer.testnet.rootstock.io',\n    },\n  },\n})\n","import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 1 // mainnet\n\nexport const rss3 = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 12_553,\n  name: 'RSS3 VSL Mainnet',\n  nativeCurrency: { name: 'RSS3', symbol: 'RSS3', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.rss3.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'RSS3 VSL Mainnet Scan',\n      url: 'https://scan.rss3.io',\n      apiUrl: 'https://scan.rss3.io/api',\n    },\n  },\n  contracts: {\n    ...chainConfig.contracts,\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0xE6f24d2C32B3109B18ed33cF08eFb490b1e09C10',\n      },\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 14193,\n    },\n    portal: {\n      [sourceId]: {\n        address: '0x6A12432491bbbE8d3babf75F759766774C778Db4',\n        blockCreated: 19387057,\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0x4cbab69108Aa72151EDa5A3c164eA86845f18438',\n      },\n    },\n  },\n  sourceId,\n})\n","import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 11_155_111 // sepolia\n\nexport const rss3Sepolia = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 2_331,\n  name: 'RSS3 VSL Sepolia Testnet',\n  nativeCurrency: { name: 'RSS3', symbol: 'RSS3', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.testnet.rss3.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'RSS3 VSL Sepolia Testnet Scan',\n      url: 'https://scan.testnet.rss3.io',\n      apiUrl: 'https://scan.testnet.rss3.io/api',\n    },\n  },\n  contracts: {\n    ...chainConfig.contracts,\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0xDb5c46C3Eaa6Ed6aE8b2379785DF7dd029C0dC81',\n      },\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 55697,\n    },\n    portal: {\n      [sourceId]: {\n        address: '0xcBD77E8E1E7F06B25baDe67142cdE82652Da7b57',\n        blockCreated: 5345035,\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0xdDD29bb63B0839FB1cE0eE439Ff027738595D07B',\n      },\n    },\n  },\n  testnet: true,\n  sourceId,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const saigon = /*#__PURE__*/ defineChain({\n  id: 2021,\n  name: 'Saigon Testnet',\n  nativeCurrency: { name: 'RON', symbol: 'RON', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://saigon-testnet.roninchain.com/rpc'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Saigon Explorer',\n      url: 'https://saigon-app.roninchain.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 18736871,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const sapphire = /*#__PURE__*/ defineChain({\n  id: 23294,\n  name: 'Oasis Sapphire',\n  network: 'sapphire',\n  nativeCurrency: { name: 'Sapphire Rose', symbol: 'ROSE', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://sapphire.oasis.io'],\n      webSocket: ['wss://sapphire.oasis.io/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Oasis Explorer',\n      url: 'https://explorer.oasis.io/mainnet/sapphire',\n    },\n    blockscout: {\n      name: 'Oasis Sapphire Explorer',\n      url: 'https://old-explorer.sapphire.oasis.io',\n      apiUrl: 'https://old-explorer.sapphire.oasis.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 734531,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const sapphireTestnet = /*#__PURE__*/ defineChain({\n  id: 23295,\n  name: 'Oasis Sapphire Testnet',\n  network: 'sapphire-testnet',\n  nativeCurrency: { name: 'Sapphire Test Rose', symbol: 'TEST', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://testnet.sapphire.oasis.dev'],\n      webSocket: ['wss://testnet.sapphire.oasis.dev/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Oasis Explorer',\n      url: 'https://explorer.oasis.io/testnet/sapphire',\n    },\n    blockscout: {\n      name: 'Oasis Sapphire Testnet Explorer',\n      url: 'https://testnet.old-explorer.sapphire.oasis.dev',\n      apiUrl: 'https://testnet.old-explorer.sapphire.oasis.dev/api',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const scroll = /*#__PURE__*/ defineChain({\n  id: 534_352,\n  name: 'Scroll',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.scroll.io'],\n      webSocket: ['wss://wss-rpc.scroll.io/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Scrollscan',\n      url: 'https://scrollscan.com',\n      apiUrl: 'https://api.scrollscan.com/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 14,\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const scrollSepolia = /*#__PURE__*/ defineChain({\n  id: 534_351,\n  name: 'Scroll Sepolia',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://sepolia-rpc.scroll.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://sepolia-blockscout.scroll.io',\n      apiUrl: 'https://sepolia-blockscout.scroll.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 9473,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const scrollTestnet = /*#__PURE__*/ defineChain({\n  id: 534_353,\n  name: 'Scroll Testnet',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://alpha-rpc.scroll.io/l2'],\n      webSocket: ['wss://alpha-rpc.scroll.io/l2/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://blockscout.scroll.io',\n      apiUrl: 'https://blockscout.scroll.io/api',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const seiDevnet = /*#__PURE__*/ defineChain({\n  id: 713_715,\n  name: 'Sei Devnet',\n  nativeCurrency: { name: 'Sei', symbol: 'SEI', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://evm-rpc-arctic-1.sei-apis.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Seitrace',\n      url: 'https://seitrace.com',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const sepolia = /*#__PURE__*/ defineChain({\n  id: 11_155_111,\n  name: 'Sepolia',\n  nativeCurrency: { name: 'Sepolia Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.sepolia.org'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Etherscan',\n      url: 'https://sepolia.etherscan.io',\n      apiUrl: 'https://api-sepolia.etherscan.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 751532,\n    },\n    ensRegistry: { address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e' },\n    ensUniversalResolver: {\n      address: '0xc8Af999e38273D658BE1b921b88A9Ddf005769cC',\n      blockCreated: 5_317_080,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const shimmer = /*#__PURE__*/ defineChain({\n  id: 148,\n  name: 'Shimmer',\n  network: 'shimmer',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Shimmer',\n    symbol: 'SMR',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://json-rpc.evm.shimmer.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Shimmer Network Explorer',\n      url: 'https://explorer.evm.shimmer.network',\n      apiUrl: 'https://explorer.evm.shimmer.network/api',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const shimmerTestnet = /*#__PURE__*/ defineChain({\n  id: 1073,\n  name: 'Shimmer Testnet',\n  network: 'shimmer-testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Shimmer',\n    symbol: 'SMR',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://json-rpc.evm.testnet.shimmer.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Shimmer Network Explorer',\n      url: 'https://explorer.evm.testnet.shimmer.network',\n      apiUrl: 'https://explorer.evm.testnet.shimmer.network/api',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../../utils/chain/defineChain.js'\n\nexport const skaleBlockBrawlers = /*#__PURE__*/ defineChain({\n  id: 391_845_894,\n  name: 'SKALE | Block Brawlers',\n  nativeCurrency: { name: 'BRAWL', symbol: 'BRAWL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.skalenodes.com/v1/frayed-decent-antares'],\n      webSocket: ['wss://mainnet.skalenodes.com/v1/ws/frayed-decent-antares'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://frayed-decent-antares.explorer.mainnet.skalenodes.com',\n    },\n  },\n  contracts: {},\n})\n","import { defineChain } from '../../../utils/chain/defineChain.js'\n\nexport const skaleCalypso = /*#__PURE__*/ defineChain({\n  id: 1_564_830_818,\n  name: 'SKALE | Calypso NFT Hub',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.skalenodes.com/v1/honorable-steel-rasalhague'],\n      webSocket: [\n        'wss://mainnet.skalenodes.com/v1/ws/honorable-steel-rasalhague',\n      ],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://honorable-steel-rasalhague.explorer.mainnet.skalenodes.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 3107626,\n    },\n  },\n})\n","import { defineChain } from '../../../utils/chain/defineChain.js'\n\nexport const skaleCalypsoTestnet = /*#__PURE__*/ defineChain({\n  id: 974_399_131,\n  name: 'SKALE Calypso Testnet',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://testnet.skalenodes.com/v1/giant-half-dual-testnet'],\n      webSocket: ['wss://testnet.skalenodes.com/v1/ws/giant-half-dual-testnet'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://giant-half-dual-testnet.explorer.testnet.skalenodes.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 103_220,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../../utils/chain/defineChain.js'\n\nexport const skaleCryptoBlades = /*#__PURE__*/ defineChain({\n  id: 1_026_062_157,\n  name: 'SKALE | CryptoBlades',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.skalenodes.com/v1/affectionate-immediate-pollux'],\n      webSocket: [\n        'wss://mainnet.skalenodes.com/v1/ws/affectionate-immediate-pollux',\n      ],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://affectionate-immediate-pollux.explorer.mainnet.skalenodes.com',\n    },\n  },\n  contracts: {},\n})\n","import { defineChain } from '../../../utils/chain/defineChain.js'\n\nexport const skaleCryptoColosseum = /*#__PURE__*/ defineChain({\n  id: 1_032_942_172,\n  name: 'SKALE | Crypto Colosseum',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.skalenodes.com/v1/haunting-devoted-deneb'],\n      webSocket: ['wss://mainnet.skalenodes.com/v1/ws/haunting-devoted-deneb'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://haunting-devoted-deneb.explorer.mainnet.skalenodes.com',\n    },\n  },\n  contracts: {},\n})\n","import { defineChain } from '../../../utils/chain/defineChain.js'\n\nexport const skaleEuropa = /*#__PURE__*/ defineChain({\n  id: 2_046_399_126,\n  name: 'SKALE | Europa Liquidity Hub',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.skalenodes.com/v1/elated-tan-skat'],\n      webSocket: ['wss://mainnet.skalenodes.com/v1/ws/elated-tan-skat'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://elated-tan-skat.explorer.mainnet.skalenodes.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 3113495,\n    },\n  },\n})\n","import { defineChain } from '../../../utils/chain/defineChain.js'\n\nexport const skaleEuropaTestnet = /*#__PURE__*/ defineChain({\n  id: 1_444_673_419,\n  name: 'SKALE Europa Testnet',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://testnet.skalenodes.com/v1/juicy-low-small-testnet'],\n      webSocket: ['wss://testnet.skalenodes.com/v1/ws/juicy-low-small-testnet'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://juicy-low-small-testnet.explorer.testnet.skalenodes.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 110_858,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../../utils/chain/defineChain.js'\n\nexport const skaleExorde = /*#__PURE__*/ defineChain({\n  id: 2_139_927_552,\n  name: 'SKALE | Exorde',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.skalenodes.com/v1/light-vast-diphda'],\n      webSocket: ['wss://mainnet.skalenodes.com/v1/ws/light-vast-diphda'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://light-vast-diphda.explorer.mainnet.skalenodes.com',\n    },\n  },\n  contracts: {},\n})\n","import { defineChain } from '../../../utils/chain/defineChain.js'\n\nexport const skaleHumanProtocol = /*#__PURE__*/ defineChain({\n  id: 1_273_227_453,\n  name: 'SKALE | Human Protocol',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.skalenodes.com/v1/wan-red-ain'],\n      webSocket: ['wss://mainnet.skalenodes.com/v1/ws/wan-red-ain'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://wan-red-ain.explorer.mainnet.skalenodes.com',\n    },\n  },\n  contracts: {},\n})\n","import { defineChain } from '../../../utils/chain/defineChain.js'\n\nexport const skaleNebula = /*#__PURE__*/ defineChain({\n  id: 1_482_601_649,\n  name: 'SKALE | Nebula Gaming Hub',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.skalenodes.com/v1/green-giddy-denebola'],\n      webSocket: ['wss://mainnet.skalenodes.com/v1/ws/green-giddy-denebola'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://green-giddy-denebola.explorer.mainnet.skalenodes.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 2372986,\n    },\n  },\n})\n","import { defineChain } from '../../../utils/chain/defineChain.js'\n\nexport const skaleNebulaTestnet = /*#__PURE__*/ defineChain({\n  id: 37_084_624,\n  name: 'SKALE Nebula Testnet',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://testnet.skalenodes.com/v1/lanky-ill-funny-testnet'],\n      webSocket: ['wss://testnet.skalenodes.com/v1/ws/lanky-ill-funny-testnet'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://lanky-ill-funny-testnet.explorer.testnet.skalenodes.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 105_141,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../../utils/chain/defineChain.js'\n\nexport const skaleRazor = /*#__PURE__*/ defineChain({\n  id: 278_611_351,\n  name: 'SKALE | Razor Network',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.skalenodes.com/v1/turbulent-unique-scheat'],\n      webSocket: ['wss://mainnet.skalenodes.com/v1/ws/turbulent-unique-scheat'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://turbulent-unique-scheat.explorer.mainnet.skalenodes.com',\n    },\n  },\n  contracts: {},\n})\n","import { defineChain } from '../../../utils/chain/defineChain.js'\n\nexport const skaleTitan = /*#__PURE__*/ defineChain({\n  id: 1_350_216_234,\n  name: 'SKALE | Titan Community Hub',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.skalenodes.com/v1/parallel-stormy-spica'],\n      webSocket: ['wss://mainnet.skalenodes.com/v1/ws/parallel-stormy-spica'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://parallel-stormy-spica.explorer.mainnet.skalenodes.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 2076458,\n    },\n  },\n})\n","import { defineChain } from '../../../utils/chain/defineChain.js'\n\nexport const skaleTitanTestnet = /*#__PURE__*/ defineChain({\n  id: 1_020_352_220,\n  name: 'SKALE Titan Hub',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://testnet.skalenodes.com/v1/aware-fake-trim-testnet'],\n      webSocket: ['wss://testnet.skalenodes.com/v1/ws/aware-fake-trim-testnet'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://aware-fake-trim-testnet.explorer.testnet.skalenodes.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 104_072,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const songbird = /*#__PURE__*/ defineChain({\n  id: 19,\n  name: 'Songbird Mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'songbird',\n    symbol: 'SGB',\n  },\n  rpcUrls: {\n    default: { http: ['https://songbird-api.flare.network/ext/C/rpc'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Songbird Explorer',\n      url: 'https://songbird-explorer.flare.network',\n      apiUrl: 'https://songbird-explorer.flare.network/api',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const songbirdTestnet = /*#__PURE__*/ defineChain({\n  id: 16,\n  name: 'Coston',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'costonflare',\n    symbol: 'CFLR',\n  },\n  rpcUrls: {\n    default: { http: ['https://coston-api.flare.network/ext/C/rpc'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Coston Explorer',\n      url: 'https://coston-explorer.flare.network',\n      apiUrl: 'https://coston-explorer.flare.network/api',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const spicy = /*#__PURE__*/ defineChain({\n  id: 88_882,\n  name: 'Chiliz Spicy Testnet',\n  network: 'chiliz-spicy-Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'CHZ',\n    symbol: 'CHZ',\n  },\n  rpcUrls: {\n    default: {\n      http: [\n        'https://spicy-rpc.chiliz.com',\n        'https://chiliz-spicy-rpc.publicnode.com',\n      ],\n      webSocket: [\n        'wss://spicy-rpc-ws.chiliz.com',\n        'wss://chiliz-spicy-rpc.publicnode.com',\n      ],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Chiliz Explorer',\n      url: 'http://spicy-explorer.chiliz.com',\n      apiUrl: 'http://spicy-explorer.chiliz.com/api',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const shardeumSphinx = /*#__PURE__*/ defineChain({\n  id: 8082,\n  name: 'Shardeum Sphinx',\n  nativeCurrency: { name: 'SHARDEUM', symbol: 'SHM', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://sphinx.shardeum.org'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Shardeum Explorer',\n      url: 'https://explorer-sphinx.shardeum.org',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const shibarium = /*#__PURE__*/ defineChain({\n  id: 109,\n  name: 'Shibarium',\n  network: 'shibarium',\n  nativeCurrency: { name: 'Bone', symbol: 'BONE', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.shibrpc.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://shibariumscan.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0x864Bf681ADD6052395188A89101A1B37d3B4C961',\n      blockCreated: 265900,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const stratis = /*#__PURE__*/ defineChain({\n  id: 105105,\n  name: 'Stratis Mainnet',\n  network: 'stratis',\n  nativeCurrency: {\n    name: 'Stratis',\n    symbol: 'STRAX',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.stratisevm.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Stratis Explorer',\n      url: 'https://explorer.stratisevm.com',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const syscoin = /*#__PURE__*/ defineChain({\n  id: 57,\n  name: 'Syscoin Mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Syscoin',\n    symbol: 'SYS',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.syscoin.org'],\n      webSocket: ['wss://rpc.syscoin.org/wss'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'SyscoinExplorer',\n      url: 'https://explorer.syscoin.org',\n      apiUrl: 'https://explorer.syscoin.org/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 287139,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const syscoinTestnet = /*#__PURE__*/ defineChain({\n  id: 5700,\n  name: 'Syscoin Tanenbaum Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Syscoin',\n    symbol: 'SYS',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.tanenbaum.io'],\n      webSocket: ['wss://rpc.tanenbaum.io/wss'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'SyscoinTestnetExplorer',\n      url: 'https://tanenbaum.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 271288,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const taraxa = /*#__PURE__*/ defineChain({\n  id: 841,\n  name: 'Taraxa Mainnet',\n  nativeCurrency: { name: 'Tara', symbol: 'TARA', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.mainnet.taraxa.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Taraxa Explorer',\n      url: 'https://explorer.mainnet.taraxa.io',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const taikoHekla = /*#__PURE__*/ defineChain({\n  id: 167_009,\n  name: 'Taiko Hekla L2',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.hekla.taiko.xyz'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Taikoscan',\n      url: 'https://hekla.taikoscan.network',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const taikoJolnir = /*#__PURE__*/ defineChain({\n  id: 167007,\n  name: 'Taiko Jolnir (Alpha-5 Testnet)',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.jolnir.taiko.xyz'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'blockscout',\n      url: 'https://explorer.jolnir.taiko.xyz',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 732706,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const taikoKatla = /*#__PURE__*/ defineChain({\n  id: 167008,\n  name: 'Taiko Katla (Alpha-6 Testnet)',\n  network: 'tko-katla',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.katla.taiko.xyz'],\n    },\n    public: {\n      http: ['https://rpc.katla.taiko.xyz'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'blockscout',\n      url: 'https://explorer.katla.taiko.xyz',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const taikoTestnetSepolia = /*#__PURE__*/ defineChain({\n  id: 167005,\n  name: 'Taiko (Alpha-3 Testnet)',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.test.taiko.xyz'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'blockscout',\n      url: 'https://explorer.test.taiko.xyz',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const taraxaTestnet = /*#__PURE__*/ defineChain({\n  id: 842,\n  name: 'Taraxa Testnet',\n  nativeCurrency: { name: 'Tara', symbol: 'TARA', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.testnet.taraxa.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Taraxa Explorer',\n      url: 'https://explorer.testnet.taraxa.io',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const telcoinTestnet = /*#__PURE__*/ defineChain({\n  id: 2017,\n  name: 'Telcoin Adiri Testnet',\n  nativeCurrency: { name: 'Telcoin', symbol: 'TEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.telcoin.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'telscan',\n      url: 'https://telscan.io',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const telos = /*#__PURE__*/ defineChain({\n  id: 40,\n  name: 'Telos',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Telos',\n    symbol: 'TLOS',\n  },\n  rpcUrls: {\n    default: { http: ['https://mainnet.telos.net/evm'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Teloscan',\n      url: 'https://www.teloscan.io/',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 246530709,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const telosTestnet = /*#__PURE__*/ defineChain({\n  id: 41,\n  name: 'Telos',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Telos',\n    symbol: 'TLOS',\n  },\n  rpcUrls: {\n    default: { http: ['https://testnet.telos.net/evm'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Teloscan (testnet)',\n      url: 'https://testnet.teloscan.io/',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const tenet = /*#__PURE__*/ defineChain({\n  id: 1559,\n  name: 'Tenet',\n  network: 'tenet-mainnet',\n  nativeCurrency: {\n    name: 'TENET',\n    symbol: 'TENET',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.tenet.org'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'TenetScan Mainnet',\n      url: 'https://tenetscan.io',\n      apiUrl: 'https://tenetscan.io/api',\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const thaiChain = /*#__PURE__*/ defineChain({\n  id: 7,\n  name: 'ThaiChain',\n  nativeCurrency: { name: 'TCH', symbol: 'TCH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['hhttps://rpc.thaichain.org'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://exp.thaichain.org',\n      apiUrl: 'https://exp.thaichain.org/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0x0DaD6130e832c21719C5CE3bae93454E16A84826',\n      blockCreated: 4806386,\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const thunderTestnet = /*#__PURE__*/ defineChain({\n  id: 997,\n  name: '5ireChain Thunder Testnet',\n  nativeCurrency: { name: '5ire Token', symbol: '5IRE', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc-testnet.5ire.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: '5ireChain Explorer',\n      url: 'https://explorer.5ire.network',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const vechain = /*#__PURE__*/ defineChain({\n  id: 100009,\n  name: 'Vechain',\n  nativeCurrency: { name: 'VeChain', symbol: 'VET', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.vechain.org'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Vechain Explorer',\n      url: 'https://explore.vechain.org',\n    },\n    vechainStats: {\n      name: 'Vechain Stats',\n      url: 'https://vechainstats.com',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const wanchain = /*#__PURE__*/ defineChain({\n  id: 888,\n  name: 'Wanchain',\n  nativeCurrency: { name: 'WANCHAIN', symbol: 'WAN', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: [\n        'https://gwan-ssl.wandevs.org:56891',\n        'https://gwan2-ssl.wandevs.org',\n      ],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'WanScan',\n      url: 'https://wanscan.org',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcDF6A1566e78EB4594c86Fe73Fcdc82429e97fbB',\n      blockCreated: 25312390,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const wanchainTestnet = /*#__PURE__*/ defineChain({\n  id: 999,\n  name: 'Wanchain Testnet',\n  nativeCurrency: { name: 'WANCHAIN', symbol: 'WANt', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://gwan-ssl.wandevs.org:46891'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'WanScanTest',\n      url: 'https://wanscan.org',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0x11c89bF4496c39FB80535Ffb4c92715839CC5324',\n      blockCreated: 24743448,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const wemix = /*#__PURE__*/ defineChain({\n  id: 1111,\n  name: 'WEMIX',\n  network: 'wemix-mainnet',\n  nativeCurrency: { name: 'WEMIX', symbol: 'WEMIX', decimals: 18 },\n  rpcUrls: {\n    default: { http: ['https://api.wemix.com'] },\n    public: { http: ['https://api.wemix.com'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'wemixExplorer',\n      url: 'https://explorer.wemix.com',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const wemixTestnet = /*#__PURE__*/ defineChain({\n  id: 1112,\n  name: 'WEMIX Testnet',\n  network: 'wemix-testnet',\n  nativeCurrency: { name: 'WEMIX', symbol: 'tWEMIX', decimals: 18 },\n  rpcUrls: {\n    default: { http: ['https://api.test.wemix.com'] },\n    public: { http: ['https://api.test.wemix.com'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'wemixExplorer',\n      url: 'https://testnet.wemixscan.com',\n      apiUrl: 'https://testnet.wemixscan.com/api',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const xLayerTestnet = /*#__PURE__*/ defineChain({\n  id: 195,\n  name: 'X1 Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'OKB',\n    symbol: 'OKB',\n  },\n  rpcUrls: {\n    default: { http: ['https://x1testrpc.okx.com'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'OKLink',\n      url: 'https://www.oklink.com/x1-test',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 624344,\n    },\n  },\n  testnet: true,\n})\n\nexport { xLayerTestnet as x1Testnet }\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const xLayer = /*#__PURE__*/ defineChain({\n  id: 196,\n  name: 'X Layer Mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'OKB',\n    symbol: 'OKB',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.xlayer.tech'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'OKLink',\n      url: 'https://www.oklink.com/xlayer',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const xdc = /*#__PURE__*/ defineChain({\n  id: 50,\n  name: 'XinFin Network',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'XDC',\n    symbol: 'XDC',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.xinfin.network'] },\n  },\n  blockExplorers: {\n    xinfin: {\n      name: 'XinFin',\n      url: 'https://explorer.xinfin.network',\n    },\n    default: {\n      name: 'Blocksscan',\n      url: 'https://xdc.blocksscan.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 71542788,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const xdcTestnet = /*#__PURE__*/ defineChain({\n  id: 51,\n  name: 'Apothem Network',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'TXDC',\n    symbol: 'TXDC',\n  },\n  rpcUrls: {\n    default: { http: ['https://erpc.apothem.network'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blocksscan',\n      url: 'https://apothem.blocksscan.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 59765389,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const yooldoVerse = /*#__PURE__*/ defineChain({\n  id: 50_005,\n  name: 'Yooldo Verse',\n  nativeCurrency: { name: 'OAS', symbol: 'OAS', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.yooldo-verse.xyz'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Yooldo Verse Explorer',\n      url: 'https://explorer.yooldo-verse.xyz',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const yooldoVerseTestnet = /*#__PURE__*/ defineChain({\n  id: 50_006,\n  name: 'Yooldo Verse Testnet',\n  nativeCurrency: { name: 'OAS', symbol: 'OAS', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.testnet.yooldo-verse.xyz'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Yooldo Verse Testnet Explorer',\n      url: 'https://explorer.testnet.yooldo-verse.xyz',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const zetachain = /*#__PURE__*/ defineChain({\n  id: 7000,\n  name: 'ZetaChain',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Zeta',\n    symbol: 'ZETA',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://zetachain-evm.blockpi.network/v1/rpc/public'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'ZetaScan',\n      url: 'https://explorer.zetachain.com',\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const zetachainAthensTestnet = /*#__PURE__*/ defineChain({\n  id: 7001,\n  name: 'ZetaChain Athens Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Zeta',\n    symbol: 'aZETA',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://zetachain-athens-evm.blockpi.network/v1/rpc/public'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'ZetaScan',\n      url: 'https://athens.explorer.zetachain.com',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const zhejiang = /*#__PURE__*/ defineChain({\n  id: 1_337_803,\n  name: 'Zhejiang',\n  nativeCurrency: { name: 'Zhejiang Ether', symbol: 'ZhejETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.zhejiang.ethpandaops.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Beaconchain',\n      url: 'https://zhejiang.beaconcha.in',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const zilliqa = /*#__PURE__*/ defineChain({\n  id: 32769,\n  name: 'Zilliqa',\n  network: 'zilliqa',\n  nativeCurrency: { name: 'Zilliqa', symbol: 'ZIL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://api.zilliqa.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Ethernal',\n      url: 'https://evmx.zilliqa.com',\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const zilliqaTestnet = /*#__PURE__*/ defineChain({\n  id: 33101,\n  name: 'Zilliqa Testnet',\n  network: 'zilliqa-testnet',\n  nativeCurrency: { name: 'Zilliqa', symbol: 'ZIL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://dev-api.zilliqa.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Ethernal',\n      url: 'https://evmx.testnet.zilliqa.com',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const zkFair = /*#__PURE__*/ defineChain({\n  id: 42766,\n  name: 'ZKFair Mainnet',\n  network: 'zkfair-mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'USD Coin',\n    symbol: 'USDC',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.zkfair.io'],\n    },\n    public: {\n      http: ['https://rpc.zkfair.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'zkFair Explorer',\n      url: 'https://scan.zkfair.io',\n      apiUrl: 'https://scan.zkfair.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 6090959,\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const zkFairTestnet = /*#__PURE__*/ defineChain({\n  id: 43851,\n  name: 'ZKFair Testnet',\n  network: 'zkfair-testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'USD Coin',\n    symbol: 'USDC',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://testnet-rpc.zkfair.io'],\n    },\n    public: {\n      http: ['https://testnet-rpc.zkfair.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'zkFair Explorer',\n      url: 'https://testnet-scan.zkfair.io',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\nimport { chainConfig } from '../../zksync/chainConfig.js'\n\nexport const zkSync = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 324,\n  name: 'zkSync Era',\n  network: 'zksync-era',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Ether',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.era.zksync.io'],\n      webSocket: ['wss://mainnet.era.zksync.io/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Etherscan',\n      url: 'https://era.zksync.network/',\n      apiUrl: 'https://api-era.zksync.network/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xF9cda624FBC7e059355ce98a31693d299FACd963',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\nimport { chainConfig } from '../../zksync/chainConfig.js'\n\nexport const zkSyncInMemoryNode = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 260,\n  name: 'zkSync InMemory Node',\n  network: 'zksync-in-memory-node',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['http://localhost:8011'],\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\nimport { chainConfig } from '../../zksync/chainConfig.js'\n\nexport const zkSyncLocalNode = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 270,\n  name: 'zkSync CLI Local Node',\n  network: 'zksync-cli-local-node',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['http://localhost:3050'],\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\nimport { chainConfig } from '../../zksync/chainConfig.js'\n\nexport const zkSyncSepoliaTestnet = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 300,\n  name: 'zkSync Sepolia Testnet',\n  network: 'zksync-sepolia-testnet',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://sepolia.era.zksync.dev'],\n      webSocket: ['wss://sepolia.era.zksync.dev/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'zkExplorer',\n      url: 'https://sepolia.explorer.zksync.io/',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xF9cda624FBC7e059355ce98a31693d299FACd963',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\nimport { chainConfig } from '../../zksync/chainConfig.js'\n\n/** @deprecated Use `zkSyncSepoliaTestnet` */\nexport const zkSyncTestnet = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 280,\n  name: 'zkSync Era Testnet',\n  network: 'zksync-era-testnet',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://testnet.era.zksync.dev'],\n      webSocket: ['wss://testnet.era.zksync.dev/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'zkExplorer',\n      url: 'https://goerli.explorer.zksync.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xF9cda624FBC7e059355ce98a31693d299FACd963',\n    },\n  },\n  testnet: true,\n})\n","import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 1 // mainnet\n\nexport const zora = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 7777777,\n  name: 'Zora',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Ether',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.zora.energy'],\n      webSocket: ['wss://rpc.zora.energy'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Explorer',\n      url: 'https://explorer.zora.energy',\n      apiUrl: 'https://explorer.zora.energy/api',\n    },\n  },\n  contracts: {\n    ...chainConfig.contracts,\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0x9E6204F750cD866b299594e2aC9eA824E2e5f95c',\n      },\n    },\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 5882,\n    },\n    portal: {\n      [sourceId]: {\n        address: '0x1a0ad011913A150f69f6A19DF447A0CfD9551054',\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0x3e2Ea9B92B7E48A52296fD261dc26fd995284631',\n      },\n    },\n  },\n  sourceId,\n})\n","import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 11_155_111 // sepolia\n\nexport const zoraSepolia = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 999999999,\n  name: 'Zora Sepolia',\n  network: 'zora-sepolia',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Zora Sepolia',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://sepolia.rpc.zora.energy'],\n      webSocket: ['wss://sepolia.rpc.zora.energy'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Zora Sepolia Explorer',\n      url: 'https://sepolia.explorer.zora.energy/',\n      apiUrl: 'https://sepolia.explorer.zora.energy/api',\n    },\n  },\n  contracts: {\n    ...chainConfig.contracts,\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0x2615B481Bd3E5A1C0C7Ca3Da1bdc663E8615Ade9',\n      },\n    },\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 83160,\n    },\n    portal: {\n      [sourceId]: {\n        address: '0xeffE2C6cA9Ab797D418f0D91eA60807713f3536f',\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0x5376f1D543dcbB5BD416c56C189e4cB7399fCcCB',\n      },\n    },\n  },\n  sourceId,\n  testnet: true,\n})\n","import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 5 // goerli\n\nexport const zoraTestnet = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 999,\n  name: 'Zora Goerli Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Zora Goerli',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://testnet.rpc.zora.energy'],\n      webSocket: ['wss://testnet.rpc.zora.energy'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Explorer',\n      url: 'https://testnet.explorer.zora.energy',\n      apiUrl: 'https://testnet.explorer.zora.energy/api',\n    },\n  },\n  contracts: {\n    ...chainConfig.contracts,\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 189123,\n    },\n    portal: {\n      [sourceId]: {\n        address: '0xDb9F51790365e7dc196e7D072728df39Be958ACe',\n      },\n    },\n  },\n  sourceId,\n  testnet: true,\n})\n","import type { Chain, ChainFormatters } from '../../types/chain.js'\nimport type { Assign, Prettify } from '../../types/utils.js'\n\nexport function defineChain<\n  formatters extends ChainFormatters,\n  const chain extends Chain<formatters>,\n>(chain: chain): Prettify<Assign<Chain<undefined>, chain>> {\n  return {\n    formatters: undefined,\n    fees: undefined,\n    serializers: undefined,\n    ...chain,\n  } as Assign<Chain<undefined>, chain>\n}\n"],"names":["acala","defineChain","id","name","network","nativeCurrency","symbol","decimals","rpcUrls","public","http","webSocket","default","blockExplorers","url","apiUrl","testnet","defineFormatter","type","format","_ref","exclude","overrides","args","formatted","key","transactionType","formatTransaction","transaction","transaction_","blockHash","blockNumber","BigInt","chainId","hexToNumber","undefined","gas","gasPrice","maxFeePerBlobGas","maxFeePerGas","maxPriorityFeePerGas","nonce","to","transactionIndex","Number","typeHex","value","v","yParity","accessList","defineTransaction","formatBlock","block","transactions","map","baseFeePerGas","blobGasUsed","difficulty","excessBlobGas","gasLimit","gasUsed","hash","logsBloom","number","size","timestamp","totalDifficulty","defineBlock","formatLog","log","eventName","arguments","length","logIndex","transactionHash","receiptStatuses","formatTransactionReceipt","transactionReceipt","receipt","contractAddress","cumulativeGasUsed","effectiveGasPrice","logs","status","blobGasPrice","defineTransactionReceipt","formatters","isSystemTx","mint","hexToBigInt","sourceHash","stateRoot","l1GasPrice","l1GasUsed","l1Fee","l1FeeScalar","InvalidAddressError","BaseError","constructor","address","super","metaMessages","Object","defineProperty","LruMap","Map","this","maxSize","set","delete","keys","next","checksumAddressCache","checksumAddress","address_","has","get","hexAddress","toLowerCase","substring","to_","bytes","keccak_256","isHex","strict","toBytes","toHex","keccak256","stringToBytes","split","i","toUpperCase","result","join","addressRegex","isAddressCache","isAddress","options","test","concatHex","values","reduce","acc","x","replace","NegativeOffsetError","offset","PositionOutOfBoundsError","_ref2","position","RecursiveReadLimitExceededError","_ref3","count","limit","staticCursor","Uint8Array","dataView","DataView","ArrayBuffer","positionReadCount","recursiveReadCount","recursiveReadLimit","POSITIVE_INFINITY","assertReadLimit","assertPosition","decrementPosition","getReadCount","incrementPosition","inspectByte","position_","inspectBytes","subarray","inspectUint8","inspectUint16","getUint16","inspectUint24","getUint8","inspectUint32","getUint32","pushByte","byte","pushBytes","pushUint8","pushUint16","setUint16","pushUint24","setUint8","pushUint32","setUint32","readByte","_touch","readBytes","readUint8","readUint16","readUint24","readUint32","remaining","setPosition","oldPosition","createCursor","cursor","create","buffer","byteOffset","byteLength","toRlp","encodable","getEncodable","encode","bytesToHex","Array","isArray","list","bodyLength","sizeOfBodyLength","getSizeOfLength","getEncodableList","bytesOrHex","hexToBytes","sizeOfBytesLength","getEncodableBytes","formatGwei","wei","unit","formatUnits","gweiUnits","prettyPrint","entries","filter","Boolean","maxLength","Math","max","padEnd","InvalidLegacyVError","_ref4","InvalidSerializableTransactionError","_ref5","InvalidStorageKeySizeError","_ref9","storageKey","floor","blobsToCommitments","parameters","kzg","blobs","commitments","blob","push","from","blobToKzgCommitment","blobsToProofs","proofs","commitment","computeBlobKzgProof","sha256","noble_sha256","commitmentToVersionedHash","version","versionedHash","bytesPerFieldElement","fieldElementsPerBlob","bytesPerBlob","maxBytesPerTransaction","versionedHashVersionKzg","BlobSizeTooLargeError","EmptyBlobError","InvalidVersionedHashSizeError","InvalidVersionedHashVersionError","toBlobSidecars","data","size_","active","slice","toBlobs","sidecars","proof","InvalidChainIdError","ExecutionRevertedError","cause","message","reason","FeeCapTooHighError","FeeCapTooLowError","NonceTooHighError","NonceTooLowError","NonceMaxValueError","InsufficientFundsError","IntrinsicGasTooHighError","IntrinsicGasTooLowError","TransactionTypeNotSupportedError","TipAboveFeeCapError","start","end","value_","assertStartOffset","assertEndOffset","sliceHex","sliceBytes","SliceOffsetOutOfBoundsError","assertTransactionEIP1559","serializeAccessList","serializedAccessList","storageKeys","j","serializeTransaction","signature","blobVersionedHashes","getTransactionType","serializedTransaction","toYParitySignatureArray","serializeTransactionEIP1559","assertTransactionEIP2930","serializeTransactionEIP2930","assertTransactionEIP4844","hashes","commitmentsToVersionedHashes","serializeTransactionEIP4844","assertTransactionLegacy","r","s","serializeTransactionLegacy","trim","serializers","isDeposit","assertTransactionDeposit","serializeTransactionDeposit","serializeTransaction_","chainConfig","contracts","gasPriceOracle","l1Block","l2CrossDomainMessenger","l2Erc721Bridge","l2StandardBridge","l2ToL1MessagePasser","sourceId","ancient8","l2OutputOracle","portal","blockCreated","l1StandardBridge","ancient8Sepolia","anvil","apexTestnet","multicall3","arbitrum","arbitrumGoerli","arbitrumNova","astar","astarZkEVM","astarZkyoto","arbitrumSepolia","areonNetwork","areonNetworkTestnet","aurora","auroraTestnet","auroria","avalanche","avalancheFuji","bahamut","base","baseGoerli","baseSepolia","beam","beamTestnet","bearNetworkChainMainnet","bearNetworkChainTestnet","berachainTestnet","bevmMainnet","bitTorrent","bitTorrentTestnet","blast","blastSepolia","bob","boba","bronos","bronosTestnet","bsc","bscTestnet","bscGreenfield","btr","btrTestnet","bxn","bxnTestnet","canto","fees","estimateFeesPerGas","async","params","request","feeCurrency","Promise","all","estimateFeePerGasInFeeCurrency","client","estimateMaxPriorityFeePerGasInFeeCurrency","fee","method","feesPerGas","rpcTransactionType","legacy","eip2930","eip1559","eip4844","formatTransactionRequest","rpcRequest","numberToHex","defineTransactionRequest","isEmpty","isPresent","isCIP64","isEIP1559","MAX_MAX_FEE_PER_GAS","assertTransactionCIP64","serializeTransactionCIP64","gatewayFee","gatewayFeeRecipient","randomness","transactionRequest","celo","celoAlfajores","chiliz","classic","confluxESpace","confluxESpaceTestnet","coreDao","cronos","cronosTestnet","crossbell","cyber","cyberTestnet","darwinia","defichainEvm","defichainEvmTestnet","degen","dfk","dodochainTestnet","dogechain","dreyerxMainnet","edgeless","edgelessTestnet","edgeware","edgewareTestnet","eon","eos","eosTestnet","etherlinkTestnet","evmos","evmosTestnet","ekta","ektaTestnet","fantom","fantomSonicTestnet","fantomTestnet","fibo","filecoin","filecoinCalibration","filecoinHyperspace","flare","flareTestnet","flowPreviewnet","flowMainnet","flowTestnet","foundry","fraxtal","fraxtalTestnet","funkiSepolia","fuse","fuseSparknet","iotex","iotexTestnet","jbc","jbcTestnet","karura","gobi","goerli","ensRegistry","ensUniversalResolver","gnosis","gnosisChiado","hardhat","harmonyOne","haqqMainnet","haqqTestedge2","hedera","hederaTestnet","hederaPreviewnet","holesky","immutableZkEvm","immutableZkEvmTestnet","inEVM","kakarotSepolia","kava","kavaTestnet","kcc","klaytn","klaytnBaobab","kroma","kromaSepolia","l3x","l3xTestnet","lightlinkPegasus","lightlinkPhoenix","linea","lineaGoerli","lineaSepolia","lineaTestnet","gasPerPubdataDefault","maxBytecodeSize","maxUint16","l1BatchNumber","l1BatchTimestamp","l1BatchTxIndex","transactionLogIndex","logType","l2ToL1Logs","l2ToL1Log","shardId","isService","sender","gasPerPubdata","paymaster","paymasterInput","factoryDeps","customSignature","eip712Meta","paymasterParams","dep","InvalidEip712TransactionError","isEIP712Transaction","assertEip712Transaction","serializeTransactionEIP712","BytecodeLengthExceedsMaxSizeError","givenLength","BytecodeLengthInWordsMustBeOddError","givenLengthInWords","BytecodeLengthMustBeDivisibleBy32Error","custom","getEip712Domain","txType","gasPerPubdataByteLimit","bytecode","bytecodeBytes","hashStr","bytecodeLengthInWords","bytecodeLength","bytecodeLengthPadded","pad","codeHashVersion","hashBytecode","transactionToMessage","domain","types","Transaction","primaryType","lisk","liskSepolia","localhost","lukso","luksoTestnet","mainnet","mandala","manta","mantaSepoliaTestnet","mantaTestnet","mantle","mantleSepoliaTestnet","mantleTestnet","merlin","metachain","metachainIstanbul","metalL2","meter","meterTestnet","metis","blockscout","metisGoerli","mev","mevTestnet","mintSepoliaTestnet","mode","modeTestnet","moonbaseAlpha","moonbeam","moonbeamDev","moonriver","morphSepolia","nautilus","neonDevnet","neonMainnet","nexi","nexilix","oasys","oasisTestnet","okc","optimism","optimismGoerli","optimismSepolia","disputeGameFactory","opBNB","opBNBTestnet","oortMainnetDev","oort","otimDevnet","batchInvoker","palm","palmTestnet","playfiAlbireo","pgn","blocksout","pgnTestnet","phoenix","plinga","plumeTestnet","polygon","polygonAmoy","polygonMumbai","polygonZkEvm","polygonZkEvmCardona","polygonZkEvmTestnet","pulsechain","pulsechainV4","qMainnet","qTestnet","reyaNetwork","rollux","rolluxTestnet","ronin","rootstock","rootstockTestnet","rss3","rss3Sepolia","saigon","sapphire","sapphireTestnet","scroll","scrollSepolia","scrollTestnet","seiDevnet","sepolia","shimmer","shimmerTestnet","skaleBlockBrawlers","skaleCalypso","skaleCalypsoTestnet","skaleCryptoBlades","skaleCryptoColosseum","skaleEuropa","skaleEuropaTestnet","skaleExorde","skaleHumanProtocol","skaleNebula","skaleNebulaTestnet","skaleRazor","skaleTitan","skaleTitanTestnet","songbird","songbirdTestnet","spicy","shardeumSphinx","shibarium","stratis","syscoin","syscoinTestnet","taraxa","taikoHekla","taikoJolnir","taikoKatla","taikoTestnetSepolia","taraxaTestnet","telcoinTestnet","telos","telosTestnet","tenet","thaiChain","thunderTestnet","vechain","vechainStats","wanchain","wanchainTestnet","wemix","wemixTestnet","xLayerTestnet","xLayer","xdc","xinfin","xdcTestnet","yooldoVerse","yooldoVerseTestnet","zetachain","zetachainAthensTestnet","zhejiang","zilliqa","zilliqaTestnet","zkFair","zkFairTestnet","zkSync","zkSyncInMemoryNode","zkSyncLocalNode","zkSyncSepoliaTestnet","zkSyncTestnet","zora","zoraSepolia","zoraTestnet","chain"],"sourceRoot":""}